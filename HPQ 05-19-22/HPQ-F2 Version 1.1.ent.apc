{Application 'HPQ_F2' logic file generated by CSPro}
PROC GLOBAL

//Global Variables
numeric totalOcc;
numeric counter = 1;
numeric noOfMales = 0;
numeric noOfFemales = 0;
numeric checkAgeL = 0;
numeric visOcc;
numeric flagEntrep = 0;
numeric countOption;

array numeric selectedHH(35);

string HHNAME, bday, selectedLevel1, selectedLevel2, selectedGrade1, selectedGrade2, currentDate, visit;
valueset string tempVal1;
array string household(35, 4);
list numeric nuclearFamily;
list string listH4;

file forApp;

// Check HPQ Version
function verCheck()
	file version;
	setfile(version,"..\verCheck.txt",create);
	string versionDirectory = "/storage/emulated/0/Android/Quest/Form2/Version=v1.2.1";
	list string verListing;
	
	if direxist(versionDirectory) then		
		dirlist(verListing,versionDirectory);	      
			if length(verListing) > 0 then
			//---  get .f06 file destination
			numeric v;
				do v = 1 while v <= length(verListing)
					dirdelete(verListing(v));
				enddo;
			endif;
	endif;	
   
	if direxist(versionDirectory) then
		dirdelete(versionDirectory);
	endif;
end;

function listHousehold()
	
	totalOcc = totOcc(SECTION_A000);
	
	while counter <= totalOcc do
			household(counter, 1) = concat(strip(a01_lstname(counter))," ", strip(a01_firstname(counter)));
			// household(counter,2) = getValueLabel(A03_NUCLEAR);
			// household(counter,3) = getValueLabel(A05_SEX);
			// household(counter,4) = maketext("%d",A07_AGE);
			// nuclearFamily.add(A03_NUCLEAR);
			counter = counter + 1;
		if curocc(SECTION_A000) = NO_HHMEM then
			//endgroup;
			showArray("List of Household Members", household, title("Name"));
			// skip to A08_BIRTHREG(1);
		endif;
	enddo;
end;

function string conToalpha(numeric ti)
	if ti = 1 then
		conToalpha = "A";
	elseif ti = 2 then
		conToalpha = "B";	
	elseif ti = 3 then
		conToalpha = "C";	
	elseif ti = 4 then
		conToalpha = "D";	
	elseif ti = 5 then
		conToalpha = "E";	
	elseif ti = 6 then
		conToalpha = "F";	
	elseif ti = 7 then
		conToalpha = "G";	
	elseif ti = 8 then
		conToalpha = "H";	
	elseif ti = 9 then
		conToalpha = "I";	
	elseif ti = 10 then
		conToalpha = "J";			
	elseif ti = 11 then
		conToalpha = "K";			
	elseif ti = 12 then
		conToalpha = "L";			
	elseif ti = 13 then
		conToalpha = "M";			
	elseif ti = 14 then
		conToalpha = "N";			
	elseif ti = 15 then
		conToalpha = "O";			
	elseif ti = 16 then
		conToalpha = "P";			
	elseif ti = 17 then
		conToalpha = "Q";			
	elseif ti = 18 then
		conToalpha = "R";			
	elseif ti = 19 then
		conToalpha = "S";			
	elseif ti = 20 then
		conToalpha = "T";	
	elseif ti = 21 then
		conToalpha = "U";
	elseif ti = 22 then
		conToalpha = "V";
	elseif ti = 23 then
		conToalpha = "W";			
	elseif ti = 24 then
		conToalpha = "X";	
	elseif ti = 25 then
		conToalpha = "Y";
	elseif ti = 26 then
		conToalpha = "Z";
	elseif ti = 99 then
		conToalpha = "9";
endif;
end;

// function setVSSectionL(string fname)
// tempVal1.clear();
// numeric j;
// do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		// j = j + 1;
		// string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		// tempVal1.add(mem, conToalpha(j));
	// endif;
// enddo;
// tempVal1.add("No qualified member", "Z");

// if tempVal1.length() = 0 then
		// errmsg("No female household member whose age is in 8:55");
		// move to L10_TYZFDIED;
// else
	// countOption = tempVal1.length();
// endif;
// setvalueset(fname,tempVal1);
// end;

function listLcro()
	counter = 1;
	totalOcc = totOcc(A08_BIRTHREG000);
	
	while counter <= totalOcc do
		counter = counter + 1;
		if curocc(A08_BIRTHREG000) = NO_HHMEM then
			skip to DEMOGRAPHIC_NOTE;
		endif;
	enddo;
end;

function getNoOfNucFam()
	totalOcc = totOcc(SECTION_A000);
	
	while counter <= totalOcc do
		
			
			
	enddo;
end;


//liza function
function readApp()
	string ampm;
	string backupDirectoryName = "/storage/emulated/0/Android/med/";
	list string fileListing;
	if direxist(backupDirectoryName) then		
		dirlist(fileListing,backupDirectoryName);	      
    	
    	if length(fileListing) > 0 then
      	//---  get .f06 file destination
		numeric i;
		    do i = 1 while i <= length(fileListing)
				dirdelete(fileListing(i));
            enddo;
		endif;
	endif;	
   
   if direxist(backupDirectoryName) then
   
   
		dirdelete(backupDirectoryName);
	endif;

//	dircreate(backupDirectoryName);


	numeric iMale, iFemale;
	iMale = 0; iFemale = 0;
	do varying numeric i = 1 while i <= soccurs(SECTION_A)
		if visualvalue(A05_SEX(i)) = 1 then
			iMale = iMale + 1;
		else
			iFemale = iFemale + 1;
		endif;
	enddo;
	ampm = "";


//--para sa pagcreate ng folder
	string REGIONs = maketext("REG=%02d",visualvalue(REG_PSGC));
	
	string REGION1 = maketext("01_REG=%02d",visualvalue(REG_PSGC));
	dircreate(backupDirectoryName + REGION1);
	
	string PROVINCE1 = maketext("02_PRV=%02d",visualvalue(PROV_PSGC));
	dircreate(backupDirectoryName + PROVINCE1);
	
	string CITY1 = maketext("03_MUN=%02d",visualvalue(CITY_MUN_PSGC));
	dircreate(backupDirectoryName + CITY1);

	string BARANGAY1 = maketext("04_BGY=%03d",visualvalue(BRGY_PSGC));
	dircreate(backupDirectoryName + BARANGAY1);

	string EA1 = maketext("05_EA=%06d",visualvalue(EAN));
	dircreate(backupDirectoryName + EA1);

	string BSN1 = maketext("06_BSN=%04d",visualvalue(BSN));
	dircreate(backupDirectoryName + BSN1);

	string HUSN1 = maketext("07_HUSN=%04d",visualvalue(HUSN));
	dircreate(backupDirectoryName + HUSN1);

	string HSN1 = maketext("08_HSN=%04d",visualvalue(HSN));
	dircreate(backupDirectoryName + HSN1);

	if strip(LSTNAME) = "" and strip(FIRSTNAME) = "" then
	string c1 = maketext("09_Head=Blank");
	dircreate(backupDirectoryName + c1);

	else
	string LAST_NAME_HEAD1 = maketext("09_Head=%s",concat(strip(LSTNAME), ", ", strip(FIRSTNAME)));
	dircreate(backupDirectoryName + LAST_NAME_HEAD1);

	endif;

	string ADDRESS1 = maketext("10_ADDRESS=%d %d %s %s %s", visualvalue(FNO), visualvalue(HBN), strip(NBLN), strip(STRTNME), strip(SUBVILL));
	dircreate(backupDirectoryName + ADDRESS1);

	string iMale1 = maketext("11_No. of Male=%d",iMale);
	dircreate(backupDirectoryName + iMale1);

	string iFemale1 = maketext("12_No. of Female=%d",iFemale);
	dircreate(backupDirectoryName + iFemale1);

	string tot1 = maketext("13_Total No=%d",iMale + iFemale);
	dircreate(backupDirectoryName + tot1);

	string waver1 = maketext("14_Signed the Consent Waiver Form=%d",visualvalue(WAIVER));
	dircreate(backupDirectoryName +waver1);
	
	numeric VISIT_NO2 = totocc(INTERVIEW_RECORD);
	
	if visit_No2 <> 0 then
		if RES_VISIT(VISIT_NO2) in 8,9 then
			string date11 = maketext("15_Appointment Date of Visit(For Callback)=NONE");
			dircreate(backupDirectoryName + date11);
			
			string cbT7 = maketext("15_Appointment Time of Visit(For Callback)=NONE");
			dircreate(backupDirectoryName + cbT7);	
		else
			string date11 = maketext("15_Appointment Date of Visit(For Callback)=%08d",visualvalue(APPOINT_DATE(VISIT_NO2)));
			dircreate(backupDirectoryName + date11);
			
			string cbT7 = maketext("15_Appointment Time of Visit(For Callback)=%d", visualvalue(APPOINT_TIME(VISIT_NO2)));
			dircreate(backupDirectoryName + cbT7);	
		
		endif;
		
		string dov = maketext("15_Date of Visit=%d", visualvalue(DATEOFVISIT(VISIT_NO2)));
		dircreate(backupDirectoryName + dov);
		
		string rov = maketext("15_Result of Visit=%d", visualvalue(RES_VISIT(VISIT_NO2)));
		dircreate(backupDirectoryName + rov);
		
		string noOfVisit = maketext("16_Visit Number=%d", VISIT_NO2);
		dircreate(backupDirectoryName + noOfVisit);
		
		string timeStart = maketext("17_Interview Time Started=%d", visualvalue(TIME_START(VISIT_NO2)));
		dircreate(backupDirectoryName + timeStart);
		
		string timeEnd = maketext("18_Interview Time Ended=%d", visualvalue(TIME_END(VISIT_NO2)));
		dircreate(backupDirectoryName + timeEnd);
		
		
		if strip(RESP_LSTNAME(visualvalue(visit_no(visit_no2)))) = "" and strip(RESP_FIRSTNAME(visualvalue(visit_no(visit_no2)))) = "" then
			string resp = maketext("22_Respondent Name=Blank");
			dircreate(backupDirectoryName + resp);
		else
			string resp_name = maketext("22_Respondent Name=%s",concat(strip(RESP_LSTNAME(VISIT_NO2)), ", ", strip(RESP_FIRSTNAME(VISIT_NO2))));
			dircreate(backupDirectoryName + resp_name);
		endif;
		
		if strip(RESP_CONTACTNO(VISIT_NO2)) = "" then
			string respCon = maketext("23_Respondent Contact=Blank");
			dircreate(backupDirectoryName + respCon);
		else
			string respContact = maketext("23_Respondent Contact=%s",strip(RESP_CONTACTNO(VISIT_NO2)));
			dircreate(backupDirectoryName + respContact);
		endif;
		
	else
		
		string date11 = maketext("15_Appointment Date of Visit(For Callback)=000000");
		dircreate(backupDirectoryName + date11);
		
		string cbT7 = maketext("15_Appointment Time of Visit(For Callback)=0000");
		dircreate(backupDirectoryName + cbT7);	
		
		string dov = maketext("15_Date of Visit=000000");
		dircreate(backupDirectoryName + dov);
		
		string rov = maketext("15_Result of Visit=0");
		dircreate(backupDirectoryName + rov);
		
		string noOfVisit = maketext("16_Visit Number=0");
		dircreate(backupDirectoryName + noOfVisit);
		
		string timeStart = maketext("17_Interview Time Started=000000");
		dircreate(backupDirectoryName + timeStart);
		
		string timeEnd = maketext("18_Interview Time Ended=0000");
		dircreate(backupDirectoryName + timeEnd);
		
		string resp = maketext("22_Respondent Name=Blank");
		dircreate(backupDirectoryName + resp);
		
		string respContact = maketext("23_Respondent Contact=BLANK");
		dircreate(backupDirectoryName + respContact);
	
	endif;
	
	
	
	string enuCode = maketext("19_EN Code=%s", ENUMCODE);
	dircreate(backupDirectoryName + enuCode);
	
	string longitude = maketext("20_Longitude=%s", X_LONG);
	dircreate(backupDirectoryName + longitude);
	
	string latitude = maketext("21_Latitude=%s", Y_LAT);
	dircreate(backupDirectoryName + latitude);

	
	
	string noOfNuc = maketext("24_Number of Nuclear Family=1");
	dircreate(backupDirectoryName + noOfNuc);
	
	string remark = maketext("25_Remarks=%s",strip(REMARKS));
	dircreate(backupDirectoryName + remark);
end;

function writepff(numeric secval)
	string DVExe, DVPar;
	if secval = 1 then
		setfile(forApp,"CBMS_DV_SECA-I.pff",create);
		DVExe = "CBMS_DV_SECA-I.ent";
		DVPar = "CBMS_DV_SECA-I.cslog";
	elseif secval = 2 then
		setfile(forApp,"CBMS_DV_SECJ-S.pff",create);
		DVExe = "CBMS_DV_SECJ-S.ent";
		DVPar = "CBMS_DV_SECJ-S.cslog";
	endif;
	string datafile = concat(edit("99",REG_PSGC),edit("99",PROV_PSGC), edit("99",CITY_MUN_PSGC), edit("999",BRGY_PSGC), edit("999999",EAN), edit("9999",BSN),edit("9999",HUSN), edit("9999",HSN) );
	filewrite(forApp,maketext("[Run Information]"));
	filewrite(forApp,maketext("Version=CSPro 7.7"));
	filewrite(forApp,maketext("AppType=Entry"));
	filewrite(forApp,maketext("ShowInApplicationListing=Hidden"));
	filewrite(forApp,maketext("\n"));
	filewrite(forApp,maketext("[DataEntryInit]"));
	filewrite(forApp,maketext("StartMode=Add"));
	filewrite(forApp,maketext("\n"));
	filewrite(forApp,maketext("[Files]"));
	filewrite(forApp,maketext("Application=%s",DVExe));
	filewrite(forApp,maketext("InputData=|type=None"));	
	filewrite(forApp,maketext("Paradata=%s",DVPar));
	filewrite(forApp,maketext("\n"));
	filewrite(forApp,maketext("[ExternalFiles]"));
	filewrite(forApp,maketext("HPQF2_DICT=Data\HPQ\H%s.csdbe|password=1234",datafile));
	filewrite(forApp,maketext("\n"));
	forApp.close();	
	if secval = 1 then
		execpff("CBMS_DV_SECA-I.pff",stop);
	elseif secval = 2 then
		execpff("CBMS_DV_SECJ-S.pff",stop);
	endif;
	
end;



function validate()
	readapp();
	numeric t = accept("Validate?","Section A-I","Section J-S");
	
	if t = 1 then
		savepartial();
		writepff(t);
	elseif t = 2 then
		savepartial();
		writepff(t);
	endif;
	 
end;

function onstop()
	readapp();
	savepartial();
end;

function skipToResVisit()
	savepartial();
	move to RES_VISIT(soccurs(INTERVIEW_RECORD));
end;



//end liza function




PROC HPQF2_FF
preproc

verCheck();
userbar(clear);
userbar(add button,"Skip to Result of Visit",skipToResVisit);
//LIZA UPDATE
if demode() = 2 then
userbar(add button,"Run Data Validation",validate);
endif;
userbar(show);

postproc

if demode() = 2 then
	numeric x = accept("Are you sure you want to close this case?","Yes","No");
	if x = 1 then
		execsystem("app:ph.gov.psa.cbms");
		stop(1);
	endif;
else
	execsystem("app:ph.gov.psa.cbms");
	stop(1);
endif;

execsystem("app:ph.gov.psa.cbms");
stop(1);


PROC IDS0_FORM
preproc
advance to MODE;
PROC BLOCK_GEOID
postproc

//LIZA UPDATE
if sysparm("dataitem") <> "" then
	move to sysparm("dataitem");
else
	advance to MODE;
endif;

PROC VISIT_NO
preproc
{if curocc() > tonumber(sysparm("NUMBER_VISIT")) then
	endgroup;
else
	$ = curocc();
endif;
}
if demode() = 1 then // LIZA EDIT
$ = curocc();
endif;

if curocc() > tonumber(sysparm("NUMBER_VISIT")) then
	endgroup;
endif;	
PROC DATEOFVISIT
postproc
string visitDate = edit("99999999", DATEOFVISIT);
visit = concat(visitDate[5:4],visitDate[1:2],visitDate[3:2]);


if $ = notappl then
	errmsg("Must have entry!");
	reenter;
elseif  tonumber(visitDate[5:4]) < 2022 then
	errmsg("Invalid year. Allowed year must be from 2022!");
	reenter;
endif;
PROC TIME_START
preproc
$ = systime("HHMM");

postproc
string timeStart = edit("9999",TIME_START);
if regexmatch(timeStart, "^([0-1][0-9]|[2][0-3])([0-5][0-9])$") = 0 then
   errmsg("Please use HHMM time format");
   reenter;
endif;

if HSN in 7777,8889,8888 then
	skip to RES_VISIT(tonumber(sysparm("NUMBER_VISIT")));
endif;


PROC AGREE_INT
postproc
if $ = 2 then
	move to RES_VISIT(curocc());
endif;
PROC NO_HHMEM
postproc
if $ = 0 then
	errmsg("Household member cannot be 0.");
	reenter;
endif;
PROC LNO
if curocc() > NO_HHMEM then
	skip to A02_RELTOHHH(1);
endif;
PROC A_HHNAME_BLK
postproc
HHNAME = concat(strip(A01_LSTNAME),", ", strip(A01_FIRSTNAME));
setocclabel(SECTION_A000, HHNAME);
A01_HHNAME = HHNAME;


PROC A01_LSTNAME
postproc
if $ = '' then
	errmsg('Last name is required.');
	reenter;
else
	if (regexmatch($, "^[a-zA-Z0-9ñÑ -.,]*$") = false) then
		errmsg("Name only accepts alphanumeric characters.");
		reenter;
	endif;
endif;
PROC A01_FIRSTNAME
postproc
if $ = '' then
	errmsg('First name is required.');
	reenter;
else
	if (regexmatch($, "^[a-zA-Z0-9ñÑ -.,]*$") = false) then
		errmsg("Name only accepts alphanumeric characters.");
		reenter;
	endif;
endif;
PROC A01_SUFF
postproc
if $ <> "" then
	if (regexmatch($, "^[a-zA-Z0-9ñÑ -.,]*$") = false) then
		errmsg("Name only accepts alphanumeric characters.");
		reenter;
	endif;
endif;
PROC A01_MIDNAME
postproc
if (regexmatch($, "^[a-zA-Z0-9ñÑ -.,]*$") = false) then
		errmsg("Name only accepts alphanumeric characters.");
		reenter;
endif;

listHousehold();
PROC A02_RELTOHHH
preproc
if curocc() > NO_HHMEM then
	endgroup;
endif;

if NO_HHMEM = 1  then
	setvalueset($, A02_RELTOHHH_VS1);
		$ = 1;
else
	if curocc() = 1 then
		setvalueset($, A02_RELTOHHH_VS1);
		$ = 1;
	else
		setvalueset($, A02_RELTOHHH_VS2);
	endif;	
endif;

postproc
numeric C_Spouse = count($ where $ = 2);
PROC A03_NUCLEAR
preproc
if curocc() = 1 then
	setvalueset($, A03_NUCLEAR_VS1);
	$ = 1;
else
	setvalueset($, A03_NUCLEAR_VS2);
endif;

postproc
if $ > curocc() then
	errmsg("Number of nuclear family must not be greater than number of household members.");
	reenter;
endif;

PROC A04_RELTONUCFH
preproc

if NO_HHMEM = 1 then
	setvalueset($, A04_RELTONUCFH_VS2);
	$ = 0;
else
	if A02_RELTOHHH(curocc()) in 3,5,7,9,11,13,15,17,19,21 then
		setvalueset($, A04_RELTONUCFH_VS3);
	elseif A02_RELTOHHH(curocc()) in 4,6,8,10,12,14,16,18,20,22 then
		setvalueset($, A04_RELTONUCFH_VS4);
	else
		setvalueset($, A04_RELTONUCFH_VS1);
	endif;
	
endif;

postproc
numeric C_Head = count($ where $ = 1);
if $ = 1 and C_Head > 1 then
	errmsg("More than 1 Family Head!")
	select("Change relationship to head of nuclear family", $(curocc()), "Force and continue", next );
endif;

numeric C_Spouse = count($ where $ = 2);
if $ = 2 and C_Spouse > 1 then
	errmsg("More than 1 Spouse!")
	select("Change relationship to head of nuclear family", $(curocc()), "Force and continue", next );
endif;
PROC A05_SEX
preproc
if A02_RELTOHHH(curocc()) in 3,5,7,9,11,13,15,17,19,21 then
	setvalueset($, A05_SEX_MALE);
elseif A02_RELTOHHH(curocc()) in 4,6,8,10,12,14,16,18,20,22 then
	setvalueset($, A05_SEX_FEMALE);
else 
	setvalueset($, A05_SEX_VS1);
endif;

if A05_SEX(curocc()) = 1 then
	inc(noOfMales);
elseif A05_SEX(curocc()) = 2 then
	inc(noOfFemales);
endif;
PROC A06_BIRTHDAY
postproc
string bdayStr = edit("99999999",A06_BIRTHDAY);
bday = concat(bdayStr[5:4],bdayStr[1:2],bdayStr[3:2]);


if $ = notappl then
	errmsg("Must have entry!");
	reenter;
elseif  tonumber(bdayStr[5:4]) < 1897 or tonumber(bdayStr[5:4]) > 2022 then
	errmsg("Invalid year. Allowed year must be from 1897-2022!");
	reenter;
elseif toNumber(bday) > 20220701 then
	errmsg("Birthday should not be beyond July 1, 2022 to be included as hh member");
	reenter;
elseif toNumber(bday) < 18970101 then
	errmsg("Birthday should not be earlier than January 1, 1897");
	reenter;
endif;

PROC A07_AGE
preproc
string bdayStr = edit("99999999",A06_BIRTHDAY);
bday = concat(bdayStr[5:4],bdayStr[1:2],bdayStr[3:2]);
$ = datediff(toNumber(bday),sysdate("YYYYMMDD"),"y");

postproc
if $ = notappl then
	errmsg("Must have entry!");
	reenter;
else
	if $ < 15 and A02_RELTOHHH = 1 then
		errmsg("The household head must be 15 years old and above!");
		reenter;
    elseif toNumber(bday) > 20220701 then
		errmsg("Birthday should not be beyond July 1, 2022 to be included as hh member");
		reenter;
	elseif toNumber(bday) < 18970101 then
		errmsg("Birthday should not be earlier than January 1, 1897");
		reenter;
	endif;
	if $ > 9 then
		inc(checkAgeL);
	endif;
	listHousehold();
endif;


PROC A08_BIRTHREG
preproc
// //skip to M01_TYHHRESIDENCE;
// if curocc() > NO_HHMEM then
	
	// endgroup;
	// //skip to WAIVER;
// // else
// // string hname = concat(strip(A01_LSTNAME),", ", strip(A01_FIRSTNAME));
// // setocclabel(A08_BIRTHREG000, hname);
// endif;

// if curocc() > NO_HHMEM then
	// endgroup;
// endif;
PROC A09_MSTAT
preproc
if A07_AGE(curocc()) in 0:9 then
	setvalueset($,A09_MSTAT_VS2);
	$ = 1;
endif;

PROC A10_ETHNIC
postproc
if A10_ETHNIC(curocc()) = 288 OR A10_ETHNIC(curocc()) = 289 then
	skip to A10A_ETHNIC;
else
	skip to A11_RELIGION;
endif;
PROC A10A_ETHNIC
postproc
if (A10_ETHNIC(curocc()) = 288 OR A10_ETHNIC(curocc()) = 289) AND $ = "" then
	errmsg("Please specify ethnicity");
	reenter;
else
	if (regexmatch($, "^[a-zA-Z0-9 ]*$") = false) then
		errmsg("Ethnicity only accepts alphanumeric characters.");
		reenter;
	endif;
endif;
PROC A11_RELIGION
postproc
if A11_RELIGION <> 127 then
	skip to A12_PHILID;
endif;
PROC A11_RELIGION_OTH
postproc
if A11_RELIGION = 127 AND $ = "" then
	errmsg("Please specify religion.");
	reenter;
else
	if (regexmatch($, "^[a-zA-Z0-9 ]*$") = false) then
		errmsg("Religion only accepts alphanumeric characters.");
		reenter;
	endif;
endif;
PROC A12_PHILID
postproc
if A12_PHILID(curocc()) in 2, 8 then
	skip to A14_STEP2;
endif;
PROC A13_PCN
postproc
// if A13_PCN(curocc()) = 999999999998 OR  A13_PCN(curocc()) = 999999999997 then
	// skip to A14_STEP2;
// endif;
PROC A13A_PCN
// postproc
// if A13_PCN = 1 AND $ = "" then
	// errmsg("Please specify PhilSys Card Number");
	// reenter;
// else
	// if (regexmatch($, "^[a-zA-Z0-9]{16}$") = false) then
		// errmsg("PhilSys Card Number only accepts alphanumeric characters, and not less than 16 characters.");
		// reenter;
	// endif;
// endif;

skip to A15_LGUID;
PROC A15_LGUID
postproc
if A15_LGUID <> 1 then
 skip to A17_SOLOPAR(curocc());
endif;
PROC A16_LGUIDNO
postproc
if A15_LGUID = 1 AND $="" then
	 errmsg("Please specify LGU ID Number");
	 reenter;
else
	if (regexmatch($, "^[a-zA-Z0-9]*$") = false) then
		errmsg("LGU ID Number only accepts alphanumeric characters.");
		reenter;
	endif;
endif;
PROC A17_SOLOPAR
preproc
ask if A07_AGE(curocc()) >= 10;

postproc
if $ = 2 then
	skip to A19_SCTZNIDQ(curocc());
endif;
PROC A18_SOLOID
preproc
ask if A07_AGE(curocc()) >= 10;

postproc
if $ = notappl then
	errmsg ("Solo parent ID must not be blank");
	reenter;
endif;
PROC A19_SCTZNIDQ
preproc
ask if A07_AGE(curocc()) >= 60;
PROC A_DIFF_BLK
preproc
ask if A07_AGE(curocc()) >= 5;
PROC DEMOGRAPHIC_NOTE

PROC B01_MIG
preproc
if curocc() > totocc(SECTION_A000) then
	endgroup;
else
	ask if A07_AGE(curocc()) >= 5;
	setocclabel(SECTION_B000, A01_HHNAME(curocc()));
endif;

postproc
if $ = 3 then
	B01_PHILIPPINES1(curocc()) = notappl;
	skip to B01_COUNTRY1(curocc());
elseif $ = 1 then
	B01_PHILIPPINES1(curocc()) = 00000;
	skip to B02_FYRSRESIDE(curocc());
elseif $ = 4 then
	B01_PHILIPPINES1(curocc()) = 99998;
	skip to B02_FYRSRESIDE(curocc())
endif;


PROC B01_PHILIPPINES1
preproc
ask if A07_AGE(curocc()) >= 5;

postproc
if B01_MIG(curocc()) = 1 and $ <> 0000 then
	errmsg("Mother's residence is same with current province and municipality. Selected province and municipality are invalid.");
	reenter;
elseif B01_MIG(curocc()) = 4 and $ <> 9998 then
	errmsg("Selected province and municipality are invalid.");
	reenter;
endif;


PROC B01_COUNTRY1
preproc
ask if A07_AGE(curocc()) >= 5 and B01_MIG = 3;
PROC B02_FYRSRESIDE
preproc
ask if A07_AGE(curocc()) >= 5;

postproc
if $ = 3 then
	B01_PHILIPPINES2(curocc()) = notappl;
	skip to B01_COUNTRY2(curocc());
elseif $ = 1 then
	B01_PHILIPPINES2(curocc()) = 00000;
	skip to B04_SMOSRESIDE(curocc());
elseif $ = 4 then
	B01_PHILIPPINES2(curocc()) = 99998;
	skip to B03_REASONFYRS(curocc())
endif;
PROC B01_PHILIPPINES2
preproc
ask if A07_AGE(curocc()) >= 5;

PROC B01_COUNTRY2
preproc
ask if A07_AGE(curocc()) >= 5 and B02_FYRSRESIDE(curocc()) = 3;
PROC B03_REASONFYRS
preproc
ask if A07_AGE(curocc()) >= 5;
postproc

if $ <> 99 then
	skip to B04_SMOSRESIDE(curocc());
endif;
PROC B03A_REASONFYRSOS
preproc
ask if A07_AGE(curocc()) >= 5 and B03_REASONFYRS = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC B04_SMOSRESIDE
preproc
ask if A07_AGE(curocc()) >= 5;

postproc
if $ = 3 then
	B01_PHILIPPINES4(curocc()) = notappl;
	skip to B01_COUNTRY4(curocc());
elseif $ = 1 then
	B01_PHILIPPINES4(curocc()) = 00000;
	skip to B06_OFI(curocc());
elseif $ = 4 then
	B01_PHILIPPINES4(curocc()) = 99998;
	skip to B05_REASONSMOS(curocc())

endif;
PROC B01_PHILIPPINES4
preproc
ask if A07_AGE(curocc()) >= 5;


PROC B01_COUNTRY4
preproc
ask if A07_AGE(curocc()) >= 5 and B04_SMOSRESIDE(curocc()) = 3;
PROC B05_REASONSMOS
preproc
ask if A07_AGE(curocc()) >= 5;


PROC B05A_REASONFYRSOS
preproc
ask if A07_AGE(curocc()) >= 5 and B05_REASONSMOS = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC B06_OFI
preproc
ask if A07_AGE(curocc()) >= 15;
if A02_RELTOHHH(curocc()) = 1 or A02_RELTOHHH(curocc()) = 1 then
	setvalueset($, B06_OFI_VS2);
else
	setvalueset($, B06_OFI_VS1);
endif;

postproc
if $ in 3:6 then
	skip to B09_COUNTRY(curocc());
elseif $ = 7 then
	if curocc() > totocc(SECTION_B000) then
		endgroup;
	else skip to next;
	endif;
endif;


PROC B07_LEAVE
preproc
ask if A07_AGE(curocc()) >= 15;

postproc
string dateLeft = edit("999999",B07_LEAVE);
if !(tonumber(dateLeft[1:2]) in 1:12, 98) then
	errmsg("Date left the Philippines: Invalid entry!");
	reenter;
endif;
if !(tonumber(dateLeft[3:4]) in 2015:2022, 9998) then
	errmsg("Date left the Philippines: Invalid entry!");
	reenter;
endif;
PROC B08_STAY
preproc
ask if A07_AGE(curocc()) >= 15;
PROC B09_COUNTRY
preproc
ask if A07_AGE(curocc()) >= 15;
PROC B10_PTSENDMNY
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI <> 5;

PROC MIGRATION_NOTE

PROC C01_READ
preproc
if curocc() > totocc(SECTION_A000) then
	endgroup;
else
	ask if A07_AGE(curocc()) >= 5;
	setocclabel(SECTION_C000, A01_HHNAME(curocc()));
endif;
PROC C02_HGCLEVEL
preproc
ask if A07_AGE(curocc()) >= 5;

postproc
selectedLevel1 = getvaluelabel(C02_HGCLEVEL(curocc()));

PROC C02_HGC
preproc
ask if A07_AGE(curocc()) >= 5;

if C02_HGCLEVEL = 0 then
	setvalueset($, C02_HGC_VS1);
elseif C02_HGCLEVEL = 1 then
	setvalueset($, C02_HGC_VS2);
elseif C02_HGCLEVEL = 2 then
	setvalueset($, C02_HGC_VS3);
elseif C02_HGCLEVEL = 3 then
	setvalueset($, C02_HGC_VS4);
elseif C02_HGCLEVEL = 4 then
	setvalueset($, C02_HGC_VS5);
elseif C02_HGCLEVEL = 5 then
	setvalueset($, C02_HGC_VS6);
elseif C02_HGCLEVEL = 6 then
	setvalueset($, C02_HGC_VS7);
elseif C02_HGCLEVEL = 7 then
	setvalueset($, C02_HGC_VS8);
elseif C02_HGCLEVEL = 8 then
	setvalueset($, C02_HGC_VS9);
endif;

postproc
selectedLevel2 = getvaluelabel(C02_HGC(curocc()));

if $ = 00010011 and A07_AGE(curocc()) < 6 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010012 and A07_AGE(curocc()) < 7 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010013 and A07_AGE(curocc()) < 8 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010014 and A07_AGE(curocc()) < 9 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010015 and A07_AGE(curocc()) < 10 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00010016 or $ = 00010018) and A07_AGE(curocc()) < 11 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024011 and A07_AGE(curocc()) < 12 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024012 and A07_AGE(curocc()) < 13 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024013 and A07_AGE(curocc()) < 14 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024014 and A07_AGE(curocc()) < 15 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00034011 or $ = 00034021 or $ = 00034031 or $ = 00035011) and A07_AGE(curocc()) < 16 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00034013 or $ = 00034023 or $ = 00034033 or $ = 00035013) and A07_AGE(curocc()) < 17 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00040001 or $ = 00050001 or $ = 00060001) and A07_AGE(curocc()) < 18 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00040002 or $ = 00050002 or $ = 00060002) and A07_AGE(curocc()) < 19 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00040003 or $ = 00050003 or $ = 00060003 or $ = 00060004) and A07_AGE(curocc()) < 20 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ in 00040011:00049999 or $ in 00050011:00059999 or $ in 00060011:00069999) and A07_AGE(curocc()) < 21 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00070010 and A07_AGE(curocc()) < 22 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00070000 or $ in 00070011:00079999) and A07_AGE(curocc()) < 23 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00080010 and A07_AGE(curocc()) < 24 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00080000 or $ in 00080011:00089999) and A07_AGE(curocc()) < 25 then
	errmsg("HGC is inconsistent with the age, please confirm.");
	//reenter;
endif;
PROC C02_HGC_SPECIFY
preproc
ask if A07_AGE(curocc()) >= 5 and C02_HGC(curocc()) in 49998, 59998, 69998, 79998, 89998;

if C02_HGC = 49998 then
	setvalueset($, C02_HGC_SPECIFY_VS1);
elseif C02_HGC = 59998 then
	setvalueset($, C02_HGC_SPECIFY_VS2);
elseif C02_HGC = 69998 then
	setvalueset($, C02_HGC_SPECIFY_VS3);
elseif C02_HGC = 79998 then
	setvalueset($, C02_HGC_SPECIFY_VS4);
elseif C02_HGC = 89998 then
	setvalueset($, C02_HGC_SPECIFY_VS5);
endif;
PROC C03_CURATTEND
preproc
ask if A07_AGE(curocc()) in 3:24;

postproc
if $ = 2 then
	skip to C06_NOTCURSCH(curocc());
endif;
PROC C04_CURSCH
preproc
ask if A07_AGE(curocc()) in 3:24 and C03_CURATTEND(curocc()) <> 2;
PROC C05_CURGRADELEVEL
preproc
ask if A07_AGE(curocc()) in 3:24;

postproc
selectedGrade1 = getvaluelabel(C05_CURGRADELEVEL(curocc()));
PROC C05_CURGRADE
preproc
ask if A07_AGE(curocc()) in 3:24 and C03_CURATTEND(curocc()) <> 2;

if C05_CURGRADELEVEL = 0 then
	setvalueset($, C05_CURGRADE_VS1);
elseif C05_CURGRADELEVEL = 1 then
	setvalueset($, C05_CURGRADE_VS2);
elseif C05_CURGRADELEVEL = 2 then
	setvalueset($, C05_CURGRADE_VS3);
elseif C05_CURGRADELEVEL = 3 then
	setvalueset($, C05_CURGRADE_VS4);
elseif C05_CURGRADELEVEL = 4 then
	setvalueset($, C05_CURGRADE_VS5);
elseif C05_CURGRADELEVEL = 5 then
	setvalueset($, C05_CURGRADE_VS6);
elseif C05_CURGRADELEVEL = 6 then
	setvalueset($, C05_CURGRADE_VS7);
elseif C05_CURGRADELEVEL = 7 then
	setvalueset($, C05_CURGRADE_VS8);
elseif C05_CURGRADELEVEL = 8 then
	setvalueset($, C05_CURGRADE_VS9);
endif;

postproc
if $ = 00010011 and A07_AGE(curocc()) < 6 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010012 and A07_AGE(curocc()) < 7 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010013 and A07_AGE(curocc()) < 8 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010014 and A07_AGE(curocc()) < 9 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00010015 and A07_AGE(curocc()) < 10 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00010016 or $ = 00010018) and A07_AGE(curocc()) < 11 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024011 and A07_AGE(curocc()) < 12 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024012 and A07_AGE(curocc()) < 13 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024013 and A07_AGE(curocc()) < 14 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00024014 and A07_AGE(curocc()) < 15 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00034011 or $ = 00034021 or $ = 00034031 or $ = 00035011) and A07_AGE(curocc()) < 16 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00034013 or $ = 00034023 or $ = 00034033 or $ = 00035013) and A07_AGE(curocc()) < 17 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00040001 or $ = 00050001 or $ = 00060001) and A07_AGE(curocc()) < 18 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00040002 or $ = 00050002 or $ = 00060002) and A07_AGE(curocc()) < 19 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00040003 or $ = 00050003 or $ = 00060003 or $ = 00060004) and A07_AGE(curocc()) < 20 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ in 00040011:00049999 or $ in 00050011:00059999 or $ in 00060011:00069999) and A07_AGE(curocc()) < 21 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00070010 and A07_AGE(curocc()) < 22 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00070000 or $ in 00070011:00079999) and A07_AGE(curocc()) < 23 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = 00080010 and A07_AGE(curocc()) < 24 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif ($ = 00080000 or $ in 00080011:00089999) and A07_AGE(curocc()) < 25 then
	errmsg("Current grade is inconsistent with the age, please confirm.");
	//reenter;
elseif $ = C02_HGC(curocc()) then
	errmsg("HGC and current grade must not be equal. HGC must be greater");
	//reenter;
elseif $ < C02_HGC(curocc()) then
	errmsg("HGC must be greater");
	//reenter;
endif;
skip to C07_GRADTECH;
PROC C06_NOTCURSCH
preproc
ask if A07_AGE(curocc()) in 3:24;
PROC C06A_NOTCURSCH
preproc
ask if A07_AGE(curocc()) in 3:24 and C06_NOTCURSCH(curocc()) = 99;

postproc
if strip($) = "" then
	errmsg("Please specify reason for not attending");
	reenter;
endif;
PROC C07_GRADTECH
preproc
ask if A07_AGE(curocc()) >= 15;
PROC C08_TRNSKL
preproc
ask if A07_AGE(curocc()) >= 15;
PROC C09_SKLDEV
preproc
ask if A07_AGE(curocc()) >= 15 and (C07_GRADTECH = 1 or C08_TRNSKL = 1);
PROC C09Z_OTH
preproc
ask if A07_AGE(curocc()) >= 15 and C09_SKLDEV = 999;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC EDUCATION_NOTE
postproc

PROC D01_REGVOTER
preproc
if curocc() > totocc(SECTION_A000) then
	endgroup;
	//skip to WAIVER;
else
	ask if A07_AGE(curocc()) >= 15;
	setocclabel(SECTION_D000, A01_HHNAME(curocc()));
endif;

postproc
if $ = 2 then
	skip to D03_SPTIME(curocc());
endif;
PROC D02_VOTELE
preproc
ask if A07_AGE(curocc()) >= 15 and D01_REGVOTER(curocc()) = 1;
PROC D03_SPTIME
preproc
ask if A07_AGE(curocc()) >= 15;

postproc
if $ = 2 then
	skip to D05_COLLECTING(curocc());
endif;
PROC D04_PROVLN
preproc
ask if A07_AGE(curocc()) >= 15 and D03_SPTIME(curocc()) = 1;

postproc
if strip($) = "" then
	errmsg("Provided volunteer must not be blank");
	reenter;
endif;
PROC D05_COLLECTING
preproc
ask if A07_AGE(curocc()) >= 15;
PROC D06_PREDONATED
preproc
ask if A07_AGE(curocc()) >= 15;

postproc
if D05_COLLECTING(curocc()) = 2 and $ = 2 then
	skip to D10_SPTIME(curocc());
endif;

PROC D07_PROVIDE
preproc
ask if A07_AGE(curocc()) >= 15 and (D05_COLLECTING(curocc()) = 1 or D06_PREDONATED(curocc()) = 1);

postproc
if strip($) = "" then
	errmsg("Activities that can remember must not be blank");
	reenter;
endif;
PROC D08_PSOC
preproc
ask if A07_AGE(curocc()) >= 15 and (D05_COLLECTING(curocc()) = 1 or D06_PREDONATED(curocc()) = 1);
PROC D09_SPONE
preproc
ask if A07_AGE(curocc()) >= 15 and (D05_COLLECTING(curocc()) = 1 or D06_PREDONATED(curocc()) = 1);
PROC D10_SPTIME
preproc
ask if A07_AGE(curocc()) >= 15;

postproc
if $ = 2 then
	if curocc() > totocc(SECTION_A000) then
		endgroup;
	else skip to next;
	endif;
endif;
PROC D11_PROVIDE
preproc
ask if A07_AGE(curocc()) >= 15;

postproc
if strip($) = "" then
	errmsg("Help provide must not be blank");
	reenter;
endif;
PROC D12_PSOC
preproc
ask if A07_AGE(curocc()) >= 15;
PROC D13_BLVOLUTEER
preproc
ask if A07_AGE(curocc()) >= 15;
PROC D13A_SPECIFY
preproc
ask if A07_AGE(curocc()) >= 15 and D13_BLVOLUTEER in 5:7;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC COMMUNITY_NOTE
postproc
savepartial();

PROC E01_WORK
preproc
if curocc() > totocc(SECTION_A000) then
	endgroup;
	//skip to WAIVER;
else
	ask if A07_AGE(curocc()) >= 5  and B06_OFI(curocc()) in 4,5,7;;
	setocclabel(SECTION_E000, A01_HHNAME(curocc()));
endif;

postproc
if $ = 2 then
	skip to E03_JOBBUS(curocc());
else
	if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7 and $ = notappl then
		errmsg("Worked at least 1 hour, must have an entry! ");
		reenter;
	elseif A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 1,2,3,6 then
		errmsg("Overseas Filipino Worker not included!");
		reenter;
	elseif A07_AGE(curocc()) in 5:14 and ($ <> 1 or $ <> 2) then
		errmsg("Worked at least 1 hour, must have an entry!");
		reenter;
	endif;
endif;
PROC E02_WORKARRANGE
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;

postproc
if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7 and $ = notappl then
	errmsg("Worked at least 1 hour, must have an entry! ");
	reenter;
elseif A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 1,2,3,6 then
	errmsg("Overseas Filipino Worker not included!");
	reenter;
elseif A07_AGE(curocc()) in 5:14 and ($ <> 1 or $ <> 2) then
	errmsg("Worked at least 1 hour, must have an entry!");
	reenter;
endif;
skip to E04_ENGAGE(curocc());

PROC E03_JOBBUS
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;

postproc
if $ in 2:3 then
	skip to E25_PWLOOKEST(curocc());
endif;
PROC E04_ENGAGE
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;
PROC E05_PROVCITYMUNCODE
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;
PROC E07_PROCC
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC E08_PROCCCODE
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;
PROC E09_INDUSTRY
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC E10_INDUSTRYCODE
preproc
ask if A07_AGE(curocc()) >= 5 and B06_OFI(curocc()) in 4,5,7;

postproc
savepartial();
PROC E11_EMPLOY
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E12_PWHRS
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E13_PWDAYS
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E14_PWTOTHRS
preproc
ask if A07_AGE(curocc()) in 5:130 and B06_OFI(curocc()) in 4,5,7;
if A07_AGE(curocc()) in 5:14 then
	skip to E18_CLASS(curocc());
endif;
PROC E15_PWMORHRS
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E16_PWADDWORK
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E17_FRSTWORK
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E18_CLASS
preproc
ask if A07_AGE(curocc()) in 5:130 and B06_OFI(curocc()) in 4,5,7;
if A07_AGE(curocc()) in 5:14 then
	skip to E21_PWOJOBBUS(curocc());
endif;
postproc
if $ in 3,4,6 then
	skip to E21_PWOJOBBUS(curocc());
endif;
PROC E19_CLASSPAYCODE
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;

postproc
if $ = 5 then
	skip to E21_PWOJOBBUS(curocc());
endif;
PROC E19A_CLASSPAYCODE
preproc
ask if A07_AGE(curocc()) in 15:130 and E19_CLASSPAYCODE(curocc()) in 6:7 and B06_OFI(curocc()) in 4,5,7;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to E21_PWOJOBBUS(curocc());

PROC E20_CLASSPAYPDAY
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E21_PWOJOBBUS
preproc
ask if A07_AGE(curocc()) in 5:130 and B06_OFI(curocc()) in 4,5,7;

postproc
if $ = 2 then
	skip to E23_PWTOTHRSAJ(curocc());
endif;
PROC E22_PWTOTJOBS
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;
PROC E23_PWTOTHRSAJ
preproc
ask if A07_AGE(curocc()) in 5:130 and B06_OFI(curocc()) in 4,5,7;

postproc
if A07_AGE(curocc()) in 5:14 and $ in 40:48 then
	skip to E39_AGRILAND(curocc());

else if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7 and $ in 40:48 then
		skip to E39_AGRILAND(curocc());
	endif;
endif;

savepartial();
PROC E24_PWREASON
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7;

if E23_PWTOTHRSAJ(curocc()) > 48 then
	setvalueset($, E24_PWREASON_VS1);
elseif E23_PWTOTHRSAJ < 40 then
	setvalueset($, E24_PWREASON_VS2);
endif;

postproc
if E23_PWTOTHRSAJ(curocc()) > 48 and E24_PWREASON(curocc()) = 99 then
	skip to E24A_PWREASON(curocc());
elseif E23_PWTOTHRSAJ(curocc()) < 40 and E24_PWREASON(curocc()) = 99 then
	skip to E24B_PWREASON(curocc());
else
	skip to E39_AGRILAND(curocc());
endif;
PROC E24A_PWREASON
preproc
ask if A07_AGE(curocc()) in 15:130 and E23_PWTOTHRSAJ > 48 and B06_OFI(curocc()) in 4,5,7;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to E39_AGRILAND(curocc());
PROC E24B_PWREASON
preproc
ask if A07_AGE(curocc()) in 15:130 and E23_PWTOTHRSAJ < 40 and B06_OFI(curocc()) in 4,5,7;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to E39_AGRILAND(curocc());


PROC E25_PWLOOKEST
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
if $ = 2 then
	skip to E29_REASONNLFWORK(curocc());
endif;
PROC E26_FRSTIMELOOKEST
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;
PROC E27_FINDWORK
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;
PROC E27A_FINDWORK
preproc
ask if A07_AGE(curocc()) >= 15 and E27_FINDWORK = 9 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC E28_WKSLOOKING
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
skip to E31_OPPORLFW(curocc());
PROC E29_REASONNLFWORK
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
if $ in 0:3 then
	skip to E31_OPPORLFW(curocc());
elseif $ in 4:5 then
	skip to E30_LASTIMELOOKED(curocc());
elseif $ in 6:9 then
	skip to E33_PREVWORK(curocc());
endif;
PROC E29A_REASONNLFWORK09
preproc
ask if A07_AGE(curocc()) >= 15 and E29_REASONNLFWORK = 10 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;;

postproc
skip to E33_PREVWORK(curocc());
PROC E29B_REASONNLFWORK99
preproc
ask if A07_AGE(curocc()) >= 15 and E29_REASONNLFWORK = 99 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
skip to E33_PREVWORK(curocc());
PROC E30_LASTIMELOOKED
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;
PROC E31_OPPORLFW
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;
PROC E32_WILLINGTOWORK
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
savepartial();
PROC E33_PREVWORK
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
if $ = 2 then
	skip to E39_AGRILAND(curocc());
endif;
PROC E34_MONTHYEAR
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
string dateLeft = edit("999999", $);
if !(tonumber(dateLeft[1:2]) in 1:12, 98) then
	errmsg("Date left the Philippines: Invalid entry!");
	reenter;
endif;
if !(tonumber(dateLeft[3:4]) in 2015:2022, 9998) then
	errmsg("Date left the Philippines: Invalid entry!");
	reenter;
endif;
PROC E35_LASTOCC
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC E36_LASTOCCODE
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;
PROC E37_INDUSTRY
preproc
ask if A07_AGE(curocc()) in 15:130 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC E38_INDUSTRYCODE
preproc
ask if A07_AGE(curocc()) >= 15 and B06_OFI(curocc()) in 4,5,7 and E01_WORK(curocc()) = 2 and E03_JOBBUS(curocc()) in 2:3;

postproc
savepartial();
PROC E39_AGRILAND
preproc
ask if A07_AGE(curocc()) in 15:130;

postproc
if $ = 2 then
	skip to next;
endif;
PROC E40_AGRILANDUSE
preproc
ask if A07_AGE(curocc()) in 15:130;
PROC E41_AGRILANDRIGHTS
preproc
ask if A07_AGE(curocc()) in 15:130;

postproc
if $ = 2 then
	skip to E43_AGRILANDRIGHTTOSELL(curocc());
endif;
PROC E42_AGRILANDOWNER
preproc
ask if A07_AGE(curocc()) in 15:130;
PROC E43_AGRILANDRIGHTTOSELL
preproc
ask if A07_AGE(curocc()) in 15:130;
PROC E44_AGRILANDBEQUEATH
preproc
ask if A07_AGE(curocc()) in 15:130;
                                                                                                                                                                                              
postproc
savepartial();
PROC ECONOMIC_NOTE
postproc
savepartial();
PROC F01_FOODCONSUM
preproc
savepartial();

postproc
if $ = 2 then
	skip to F03_CROP;
endif;
PROC F03_CROP
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_LIVESTOCK
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_FISH
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_FOREST
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_MINING
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_MANUFAC
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_ELECTRIC
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_WATER
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_CONSTRUCT
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_WHOLESALE
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_TRANSPORT
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_COMM
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_ACCOM
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_INFOCOMM
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_FIN
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_REALESTA
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_PROFBUS
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_EDUC
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_HUMSOC
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_ADMIN
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_ARTENREC
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC F03_OTH
postproc
if $ = 1 then
	flagEntrep = 1;
endif;
PROC NO_ENTREP
preproc
if flagEntrep = 0 then
	skip to ENTREPRENEURIAL_NOTE;
endif;
PROC F04_ENTREP
preproc
if curocc() > NO_ENTREP then
	endgroup;
	
endif;
PROC F08_YEAR
postproc
if $ < 1000 or $ > 2021 then
	errmsg("Invalid year");
	reenter;
endif;
PROC F09_MONTH
postproc
if ischecked("A", $) or ischecked("B", $) or ischecked("C", $) or ischecked("D", $) or ischecked("E", $) or ischecked("F", $) or ischecked("G", $) 
or ischecked("H", $) or ischecked("I", $) or ischecked("J", $) or ischecked("K", $) or ischecked("L", $) then
	if ischecked("M", $) then
		errmsg("All months already selected. Please remove other answers.");
		reenter;
	endif;
endif;
PROC F10C_TOTAL
preproc
$ = F10A_WRKOWN(curocc()) + F10B_PDEMP(curocc());

postproc
if $ <> F10A_WRKOWN(curocc()) + F10B_PDEMP(curocc()) then
	errmsg("Must be equal to working owners/unpaid workers and paid employees");
	reenter;
endif;
PROC F11_GOV
postproc
if ischecked("A", $) or ischecked("B", $) or ischecked("C", $) or ischecked("D", $) or ischecked("E", $) or ischecked("X", $) then
	if ischecked("F", $) then
		errmsg("Not Registed was selected. Please remove other answers.");
		reenter;
	endif;
endif;
PROC G01_AGRIACT
preproc
ask if F03_CROP = 1 or F03_LIVESTOCK = 1;

postproc
if $ in 2, 4 then
	skip to G11_1_HHENGAGE;
endif;
PROC G02_NUMPRCL
preproc
ask if G01_AGRIACT in 1, 3;
PROC G03_PRCLLOC000
preproc
ask if F03_CROP = 1 or F03_LIVESTOCK = 1;
PROC G03_PRCLLOC
if curocc() > G02_NUMPRCL then
	endgroup;
	
endif;
PROC G4A_PRCLTENUREOTH
preproc
ask if G04_PRCLTENURE = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G5_IRRI
preproc
ask if G03_1_PRCLACTIVITY(curocc()) in 1, 3;

postproc
if $ = 2 then
	skip to G7_RAINFED(curocc());
elseif $ = 8 then
	skip to G8_PRCLAREA(curocc());
endif;
PROC G6_IRRISTAT
preproc
ask if G03_1_PRCLACTIVITY(curocc()) in 1, 3;

postproc
skip to G8_PRCLAREA(curocc());
PROC G7_RAINFED
preproc
ask if G03_1_PRCLACTIVITY(curocc()) in 1, 3 or G03_1_PRCLACTIVITY(curocc()) <> 2;
PROC G8_PRCLAREA
preproc
numeric x = accept("Select unit.", "Square Meter", "Hectare");
string parea = prompt("Enter physical area of the parcel:", parea, numeric);
if x = 1 then
	$ = tonumber(parea)/10000;
else
	$ = tonumber(parea);
endif;
PROC G9_COMANAGED
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to next;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC G10_TOTAREAPRCL
preproc
ask if F03_CROP = 1 or F03_LIVESTOCK = 1;

$ = sum(G8_PRCLAREA);
PROC G11_1_HHENGAGE
preproc
ask if A07_AGE(curocc()) >= 10 ;

postproc
if $ = 2 then
	skip to AGRICULTURAL_NOTE;
endif;
PROC G11_AGRIMEM
preproc
ask if A07_AGE(curocc()) >= 10 and (F03_CROP = 1 or F03_LIVESTOCK = 1);

tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to AGRICULTURAL_NOTE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC G11_AGRIMEM000

PROC G11_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to G20_CROPOPE;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(G03_PRCLLOC000, HHNAME);
endif;
PROC G12ZA_OTHERAGRIMAIN
preproc
ask if G12Z_OTHERAGRIMAIN(curocc()) = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G13_TYPENGAGE_GROWNLVSTCK
preproc
ask if G12A_AGRIMAIN_GRWCRPS = 1 and G12B_AGRIMAIN_LVSTCKPLTRY = 1;
PROC G14A_DAYTODAY
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1;
PROC G14B_LANDPREP
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1;
PROC G14C_PLANTORTRANSPLANT
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1;
PROC G14D_CULTI
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1;
PROC G14E_HARVESTRTHRESH
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1;
PROC G14F_FEEDING
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1;
PROC G14Z_OTH
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1;
PROC G14ZA_OTH
preproc
ask if G14Z_OTH(curocc()) = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G15_TYPENGAGE_AQUANFSHNGLEAN
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;
PROC G16A_DAYTODAY
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;
PROC G16B_AQUA
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;
PROC G16C_MUNIFISH
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;
PROC G16D_GLEAN
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;
PROC G16E_COMMFISH
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;
PROC G16Z_OTH
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;
PROC G16ZA_OTH
preproc
ask if G16Z_OTH(curocc()) = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G17_AGRIORGMEM
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 or G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 or G12E_AGRIMAIN_GLEANING(curocc()) = 1;

postproc 
if $ = 2 then
	skip to G19A_TYPSYSHYDRO(curocc());
endif;
PROC G18A_AGRIORG2
preproc
ask if G18_AGRIORG1(curocc()) = 9999;
PROC G18B_AGRIORGOTH
preproc
ask if G18A_AGRIORG2(curocc()) = 9999;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G19A_TYPSYSHYDRO
preproc
ask if G01_AGRIACT in 2:3;
PROC G19B_TYPSYSHYDRO
preproc
ask if G01_AGRIACT in 2:3;
PROC G19C_TYPSYSHYDRO
preproc
ask if G01_AGRIACT in 2:3;
PROC G19D_TYPSYSHYDRO
preproc
ask if G01_AGRIACT in 2:3;
PROC G19E_TYPSYSHYDRO
preproc
ask if G01_AGRIACT in 2:3;
PROC G19F_TYPSYSHYDRO
preproc
ask if G01_AGRIACT in 2:3;
PROC G19Z_TYPSYSHYDRO
preproc
ask if G01_AGRIACT in 2:3;
PROC G19AZ_TYPSYSHYDROOTH
preproc
ask if G01_AGRIACT in 2:3 and G19Z_TYPSYSHYDRO(curocc()) = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G20_CROPOPE
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to G21_AGRIMACH000;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC G20_LNO000
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G20_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to G21_NOOFDRAFT;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(G20_LNO000, HHNAME);
endif;
PROC G20A_TEMPNPERMCRPS_OTH
preproc
ask if G20_TEMPNPERMCRPS(curocc()) = 9999;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G21_NOOFDRAFT
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $=0 or $=notappl then
	skip to G23_CROP3YRS;
endif;
PROC G21_AGRIMACH000
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G21_AGRIMACH

preproc
//string x = prompt("Enter number of draft animals, agricultural equipment, facilities, and other tools used by the household member in crop farming.:", x, numeric);
if curocc() > G21_NOOFDRAFT then
	endgroup;
endif;
PROC G22_AGRIMACH_TOTAL
preproc
$ = G22_AGRIMACH_OWNED(curocc()) + G22_AGRIMACH_RENTED(curocc()) + G22_AGRIMACH_RENTFREE(curocc());
PROC G23_CROP3YRS
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ = 2 then
	skip to G27_LVSTCKPLTRYOPE;
endif;
PROC G24_HRVEST
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 2:3 then
	skip to G27_LVSTCKPLTRYOPE;
endif;
PROC G25_REASONDEC
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 7:9 then
	skip to G27_LVSTCKPLTRYOPE;
endif;
PROC G25A_REASONDECOTH
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1 and G25_REASONDEC = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to G27_LVSTCKPLTRYOPE;
PROC G26_PRCNTGEDEC
preproc
ask if G12A_AGRIMAIN_GRWCRPS(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G27_LVSTCKPLTRYOPE
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to G28_LVSTCKPLTRYMACH000;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC G27_LNO000
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G27_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to G28_NOOFMACHINERIES;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(G27_LNO000, HHNAME);
endif;
PROC G27ZA_OTH
preproc
ask if G27Z_OTH = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G28_NOOFMACHINERIES
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G28_LVSTCKPLTRYMACH000
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G28_LVSTCKPLTRYMACH
preproc
//string x = prompt("Enter the number of  machineries, equipment, and facilities and other tools used by the household in raising/tending livestock/poultry:", x, numeric);
if curocc() > G28_NOOFMACHINERIES then
	endgroup;
endif;
PROC G29_LVSTCKPLTRYMACH_TOTAL
preproc
$ = G29_LVSTCKPLTRYMACH_OWNED(curocc()) + G29_LVSTCKPLTRYMACH_RENTED(curocc()) + G29_LVSTCKPLTRYMACH_RENTFREE(curocc());
PROC G30_LVSTCKPLTRY3YRS
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ = 2 then
	skip to G34_NOAQUAFRM;
endif;
PROC G31_DECREASE3YRS
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 2:3 then
	skip to G34_NOAQUAFRM;
endif;
PROC G32_REASONDEC
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 5:6 then
	skip to G34_NOAQUAFRM;
endif;
PROC G32A_REASONDEC_OTH
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1 and G32_REASONDEC = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to G34_NOAQUAFRM;
PROC G33_PRCNTGEDEC
preproc
ask if G12B_AGRIMAIN_LVSTCKPLTRY(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G34_NOAQUAFRM
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G35_AQUAOPS000
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G35_AQUAOPS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to G41_NOOFAQUAFARM;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC G37A_TYPEOFAQUA_OTH
preproc
ask if G37_TYPEOFAQUA(curocc()) = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G38_AQUAAREA
preproc
ask if G37_TYPEOFAQUA in 1, 3:7;
PROC G38_AQUADEPTH
preproc
ask if G37_TYPEOFAQUA in 2;
PROC G38_AQUASRE
preproc
ask if G37_TYPEOFAQUA in 2;
PROC G40A_AQUATENURE_OTH
preproc
ask if G40_AQUATENURE(curocc()) = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G41_NOOFAQUAFARM
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G41_AQUAFARMMACH000
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G41_AQUAFARMMACH
preproc
//string x = prompt("Enter the number of  machineries, equipment, and facilities and other tools used by the household in raising/tending livestock/poultry:", x, numeric);
if curocc() > G41_NOOFAQUAFARM then
	//delete(G41_AQUAFARMMACH000(curocc())); 
	endgroup;
endif;
PROC G42_AQUFARMMACH_TOTAL
preproc
$ = G42_AQUFARMMACH_OWNED(curocc()) + G42_AQUFARMMACH_RENTED(curocc()) + G42_AQUFARMMACH_RENTFREE(curocc());
PROC G43_AQUA3YEAR
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ = 2 then
	skip to G47_BOVE;
endif;
PROC G44_AQUADEC
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 2:3 then
	skip to G47_BOVE;
endif;
PROC G45_REASONDEC
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 5:6 then
	skip to G47_BOVE;
endif;
PROC G45A_SPECIFY
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1 and G45_REASONDEC = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to G47_BOVE;
PROC G46_PRCNTGEDEC
preproc
ask if G12C_AGRIMAIN_AQUACLTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G47_BOVE
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ = 2 then
	skip to G53_FSHCPTRMACH000;
endif;
PROC G48_NUMBOAT
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G49_BOVEOPS000
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC G49_BOVEOPS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to G53_NOOFFISHING;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC G53_NOOFFISHING
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

PROC G53_FSHCPTRMACH000
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

PROC G53_FSHCPTRMACH
preproc
//string x = prompt("Enter the number of  machineries, equipment, and facilities and other tools used by the household in raising/tending livestock/poultry:", x, numeric);
if curocc() > G53_NOOFFISHING then
	//delete(G53_FSHCPTRMACH000(curocc())); 
	endgroup;
endif;
PROC G54_FSHCPTRMACH_TOTAL
preproc
$ = G54_FSHCPTRMACH_OWNED(curocc()) + G54_FSHCPTRMACH_RENTED(curocc()) + G54_FSHCPTRMACH_RENTFREE(curocc());
PROC G55_FSH3YRS
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ = 2 then
	skip to AGRICULTURAL_NOTE;
endif;
PROC G56_HHFISH
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 2:3 then
	skip to AGRICULTURAL_NOTE;
endif;

PROC G57_REASONDEC
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;

postproc
if $ in 8:10 then
	skip to AGRICULTURAL_NOTE;
endif;
PROC G57A_REASONDEC_OTH
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1 and G57_REASONDEC = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC G58_PRCNTGEDEC
preproc
ask if G12D_AGRIMAIN_FSHCPTR(curocc()) = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN(curocc()) = 1;
PROC H01_FAMMEM
preproc
savepartial();

tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to BLOCK_H3;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
	
	endif;
endif;



// valueset string tempval;
// tempVal.clear();
// numeric j;
// array string parcel(20) = "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20";

// do varying numeric i = 1 while i<=soccurs(PARCEL_REC)
// j = j + 1;
// //string mem = edit("Parcel-", F3B07(i));
// string mem = maketext("Parcel %d", F3B07(i));

// tempVal.add(mem, parcel(j));
// enddo;
// setvalueset($, tempVal);
PROC H01_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to H3D_NETENTREP;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(SECTION_H1000, HHNAME);
endif;
PROC H3Z_OTHERSPECIFY
preproc
ask if H3ZA_OTHERSPECIFY <> "";

postproc
savepartial();
PROC H2A_TOTAL
preproc
$ = sum(H2A_SALARIES);
PROC H2B_TOTAL
preproc
$ = sum(H2B_COMMISSIONS);
PROC H2C_TOTAL
preproc
$ = sum(H2A_SALARIES);
PROC H4A_CFINCOME
preproc
$ = H2A_TOTAL + H2B_TOTAL + H2C_TOTAL + H3D_NETENTREP + H3E_NETPROF + H3F_NETSHARE + H3G_CASHRECEIPTS + H3H_PANTAWID + H3I_SOCIAL + H3J_SAP + H3K_OTHER + H3L_DIVIDEND + H3M_RENTALS + H3N_INTERESTS + H3O_GIFTS + H3P_FSA;
PROC H6_CFINCOME
preproc
$ = H4A_CFINCOME + H05_SOURCESOFINCOME;
postproc
savepartial();
PROC I01_FOODCONSUMP
postproc
if $ <= 0 then
	errmsg("Usual or Average Expenditure should be greater than 0");
	reenter;
endif;
PROC I04_TOTALFOOD
preproc
if I02_FREQ = 1 then
	$ = (I01_FOODCONSUMP * 365) + I03_EXPENDITURE;
elseif I02_FREQ = 2 then
	$ = (I01_FOODCONSUMP * 52) + I03_EXPENDITURE;
elseif I02_FREQ = 3 then
	$ = (I01_FOODCONSUMP * 24) + I03_EXPENDITURE;
elseif I02_FREQ = 1 then
	$ = (I01_FOODCONSUMP * 12) + I03_EXPENDITURE;
endif;
PROC K01Z_OTH

postproc
if K01A_BANK = 2 AND K01B_DIGITALBANK = 2 AND K01C_EMONEY = 2 AND K01D_NSSLANONSTOCK = 2 AND K01E_COOP = 2 AND K01F_MICROFIN = 2 AND K01Z_OTH = 2 then
	skip to K02A_RSNNOFINACCT;
elseif K01A_BANK = 1 OR K01B_DIGITALBANK = 1 OR K01C_EMONEY = 1 OR K01D_NSSLANONSTOCK = 1 OR K01E_COOP = 1 OR K01F_MICROFIN = 1 AND K01Z_OTH = 1 then
	skip to K01ZA_OTH;
elseif (K01A_BANK = 2 OR K01A_BANK = 9) AND (K01B_DIGITALBANK = 2 OR K01B_DIGITALBANK = 9) AND (K01C_EMONEY = 2 OR K01C_EMONEY = 9) AND (K01D_NSSLANONSTOCK = 2 OR K01D_NSSLANONSTOCK = 9) AND (K01E_COOP = 2 OR K01E_COOP = 9) AND (K01F_MICROFIN = 2 OR K01F_MICROFIN = 9) AND (K01Z_OTH = 2 OR K01Z_OTH = 9) then
	skip to K04_OTHERFORM;
endif;
PROC K01ZA_OTH
preproc
ask if K01Z_OTH = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!. You answer YES in Others.");
	reenter;
endif;

skip to K03_EDUC;
PROC K02Z_RSNNOFINACCT
postproc
if $ = 2 then
	skip to K04_OTHERFORM;
endif;
PROC K02ZA_RSNNOFINACCT
preproc
ask if K02Z_RSNNOFINACCT = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!. You answer YES in Others.");
	reenter;
endif;
PROC K03A_OTHERS
preproc
ask if K03_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!. You answer YES in Others.");
	reenter;
endif;
PROC K04_OTHERFORM
postproc
if $ = 2 then
	skip to BLOCK_K06;
endif;



PROC K05Z_WHERE

postproc
if $ in 2,9 then
	skip to K07_LOAN;
endif;
PROC K05ZA_WHERE
preproc
ask if K05Z_WHERE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to K07_LOAN;
PROC K06AZ_RSNNOSAVINGS
preproc
ask if K06Z_RSNNOSAVINGS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!. You answer YES in Others.");
	reenter;
endif;
PROC K07_LOAN
preproc
currentDate = edit("9999-99-99",sysdate("YYYYDDMM"));


postproc
if $ in 2, 8, 9 then
	skip to BLOCK_K10;
endif;
PROC BLOCK_K08
preproc
ask if K07_LOAN = 1;
PROC K08ZA_OTHERS
preproc
ask if K08Z_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!. You answer YES in Others.");
	reenter;
endif;
PROC BLOCK_K09
preproc
ask if K07_LOAN = 1;
PROC K09ZA_OTHERS
preproc
ask if K09Z_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!. You answer YES in Others.");
	reenter;
endif;
PROC K10ZA_OTH
preproc
ask if K10Z_OTH = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!. You answer YES in Others.");
	reenter;
endif;
PROC FINANCIAL_NOTE

PROC L01_PREG
// preproc
// ask if noOfFemales > 0 and checkAgeL > 0;

postproc
if $ = 2 then
	skip to L06_CPREG;
endif;
PROC L02_HHMPREG
preproc
// ShowErrors();
// setvalueset($,tempVal1);

tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)

	if A05_SEX(i) = 2 and A07_AGE(i) in 10:130 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",concat(strip(A01_LSTNAME(i)),", ", strip(A01_FIRSTNAME(i))));
		
		tempVal1.add(mem, conToalpha(j));
	endif;
enddo;
tempVal1.add("No qualified member", "Z");

if tempVal1.length() = 0 then
		errmsg("No female household member whose age is in 10:130");
		move to L10_TYZFDIED;
else
	countOption = tempVal1.length();
endif;
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L06_CPREG;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L02_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to L06_CPREG;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(SECTION_L1000, HHNAME);
endif;
skip to L03_LBIRTHS(curocc());
PROC L06_CPREG
postproc
if $ = 2 then
	skip to L08_LACTMOM;
endif;
PROC L07_HHMCPREG
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	if A05_SEX(i) = 2 and A07_AGE(i) in 10:130 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	endif;
enddo;
tempVal1.add("No qualified member", "Z");

if tempVal1.length() = 0 then
		errmsg("No female household member whose age is in 10:130");
		move to L10_TYZFDIED;
else
	countOption = tempVal1.length();
endif;
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L08_LACTMOM;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L07_LNO

preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to L08_LACTMOM;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(L07_LNO000, HHNAME);
endif;
skip to L08_LACTMOM;

PROC L08_LACTMOM
postproc
if $ = 2 then
	skip to L10_TYZFDIED;
endif;
PROC L09_HHMLACTMOM
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	if A05_SEX(i) = 2 and A07_AGE(i) in 10:130 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	endif;
enddo;
tempVal1.add("No qualified member", "Z");

if tempVal1.length() = 0 then
		errmsg("No female household member whose age is in 10:130");
		move to L10_TYZFDIED;
else
	countOption = tempVal1.length();
endif;
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L10_TYZFDIED;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L09_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to L10_TYZFDIED;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(L09_LNO000, HHNAME);
	skip to L10_TYZFDIED;
endif;

PROC L10_TYZFDIED
postproc
if $ = 2 then
	skip to L15_DIS;
endif;
PROC L10A_NOCHLDDIED
postproc
if $ = notappl then
	errmsg("Must have entry!");
	reenter;
endif;
PROC L11_TYZFNAME
preproc
if curocc() > L10A_NOCHLDDIED then
	endgroup;
else
	setocclabel(L11_TYZFNAME000, edit("99",curocc()));
endif;

postproc
if strip($) = "" then
	skip to L15_DIS;
endif;
PROC L14A_TYZFCAUSE
preproc
ask if L14_TYZFCAUSE(curocc()) = 99;
PROC L15_DIS
postproc
if $ = 2 then
	skip to L19_CANCERPW;
endif;
PROC L16_HHMDIS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");

// if tempVal1.length() = 0 then
		// errmsg("No female household member whose age is in 8:55");
		// move to L10_TYZFDIED;
// else
	// countOption = tempVal1.length();
// endif;
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L19_CANCERPW;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
	//listH4.show("selected");
endif;
PROC L16_LNO
preproc

numeric occr;
string listH4Str;

	
if curocc() > listH4.length() then
	skip to L19_CANCERPW;
else
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(L16_LNO000, HHNAME);
	skip to L17A_TYPEDIS(curocc());
endif;
PROC L17ZA_TYPEDIS
preproc
ask if L17Z_TYPEDIS(curocc()) = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC L18A_DISDIAGNOSED
preproc
ask if L17A_TYPEDIS(curocc()) = 1;
PROC L18B_DISDIAGNOSED
preproc
ask if L17B_TYPEDIS(curocc()) = 1;
PROC L18C_DISDIAGNOSED
preproc
ask if L17C_TYPEDIS(curocc()) = 1;
PROC L18D_DISDIAGNOSED
preproc
ask if L17D_TYPEDIS(curocc()) = 1;
PROC L18E_DISDIAGNOSED
preproc
ask if L17E_TYPEDIS(curocc()) = 1;
PROC L18F_DISDIAGNOSED
preproc
ask if L17F_TYPEDIS(curocc()) = 1;
PROC L18G_DISDIAGNOSED
preproc
ask if L17G_TYPEDIS(curocc()) = 1;
PROC L18H_DISDIAGNOSED
preproc
ask if L17H_TYPEDIS(curocc()) = 1;
PROC L18Z_DISDIAGNOSED
preproc
ask if L17Z_TYPEDIS(curocc()) = 1;
PROC L19_CANCERPW
postproc
if $ = 2 then
	skip to L21_CANCERSUR;
endif;
PROC L20_HHMCANCER
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L21_CANCERSUR;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L20_LNO
preproc

numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to L21_CANCERSUR;
else
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(L20_LNO000, HHNAME);
	skip to L21_CANCERSUR;
endif;
PROC L21_CANCERSUR
postproc
if $ = 2 then
	skip to L23_RAREDIS;
endif;
PROC L22_HHMCANCERSUR
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L23_RAREDIS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L22_LNO
preproc

numeric occr;
string listH4Str;
if curocc() > listH4.length() then
	skip to L23_RAREDIS;
else
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	
	setocclabel(L22_LNO000, HHNAME);
	skip to L23_RAREDIS;
endif;
PROC L23_RAREDIS
postproc
if $ = 2 then
	skip to L29_PWDID;
endif;
PROC L24_HHMRAREDIS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L29_PWDID;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L24_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to L29_PWDID;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(L24_LNO000, HHNAME);
	SKIP TO L25_RAREDISDIAG(curocc());
endif;
PROC L25_RAREDISDIAG



postproc
if $ = 2 then
	skip to L27_RAREDISN(curocc());
endif;
PROC L26_RAREDISY
postproc
if $ <> 99 then
	skip to L29_PWDID;
endif;
PROC L26A_RAREDISY
preproc
ask if L26_RAREDISY(curocc()) = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC L27_RAREDISN
preproc
ask if L25_RAREDISDIAG(curocc()) = 2;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC L28_RESRAREDIS
preproc
ask if L25_RAREDISDIAG(curocc()) = 2;
PROC L28A_RESRAREDIS
preproc
ask if L28_RESRAREDIS(curocc()) = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC L29_PWDID
postproc
if $ = 2 then
	skip to L33_TMSICK;
endif;
PROC L30_HHMWID
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to L33_TMSICK;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L30_LNO

preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to L33_TMSICK;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(L30_LNO000, HHNAME);
	SKIP TO L31_IDSHOWN(curocc());
endif;
PROC L31_IDSHOWN
postproc
if $ = 2 then
	skip to L33_TMSICK;
endif;
PROC L33_TMSICK
postproc
if $ = 2 then
	skip to HEALTH_NOTE;
endif;
PROC L34_TMHHMSICK
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to HEALTH_NOTE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC L34_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to HEALTH_NOTE;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	//errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(L34_LNO000, HHNAME);
	skip to L35_PMREASONNP(curocc());
endif;
PROC L35_PMREASONNP
postproc
if $ = 2 then
	skip to L37_RECSICK(curocc());
endif;
PROC L37A_RECSICK
preproc
ask if L37_RECSICK = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC L38_HHMAVAILED
postproc
if $ = 2 then
	skip to L41_MREASONDN(curocc());
endif;
PROC L40A_PAYSOURCE
preproc
ask if ischecked("Z", L40_PAYSOURCE);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC L41A_MREASONDN
preproc
ask if L41_MREASONDN = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC HEALTH_NOTE

PROC M01_TYHHRESIDENCE
postproc
if $ = 2 then
	skip to M07_EVAREA;
endif;
PROC M03_PREASON
preproc
ask if M02A_TYHHEXP = 1;

postproc
if $ <> 9 then
	if M02B_TYHHEXP = 2 then
		if M02C_TYHHEXP = 2 then
			skip to M07_EVAREA;
		endif;
	endif;
endif;
PROC M03A_PREASON
preproc
ask if M03_PREASON = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to M07_EVAREA;
PROC M04_TYFSUBSIDE
preproc
ask if M02B_TYHHEXP = 1;
PROC M005_TMSUBSIDE
preproc
ask if M02B_TYHHEXP = 1;
PROC M06_TYDROUGHT
preproc
ask if M02C_TYHHEXP = 1;
PROC M08_TYTEMPEVAREA
postproc
if $ in 2, 8 then
	skip to BLOCK_M13;
endif;
PROC M09A_TYMREASON
preproc
ask if M09_TYMREASON = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M10_TMLTEMEVA
postproc
if $ = 2 then
	skip to BLOCK_M13;
endif;
PROC M11A_OTHERS
preproc
ask if M11_STAYEVAREA = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M13
postproc
if M13A_NEGAFF = 2 and M13B_NEGAFF = 2 and M13C_NEGAFF = 2 and M13D_NEGAFF = 2 and M13E_NEGAFF = 2 and M13F_NEGAFF = 2 and M13G_NEGAFF = 2 and M13H_NEGAFF = 2 
and M13I_NEGAFF = 2 and M13Z_NEGAFF = 2 then
	skip to M19_DISKIT;
endif;
PROC M13ZA_NEGAFF
preproc
ask if M13Z_NEGAFF = 1;
PROC BLOCK_M14A
preproc
ask if M13A_NEGAFF = 1;
PROC M14TZA_TYPHOON
preproc
ask if M14TZ_TYPHOON = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14B
preproc
ask if M13B_NEGAFF = 1;
PROC M14FZA_FLOOD
preproc
ask if M14FZ_FLOOD = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14C
preproc
ask if M13C_NEGAFF = 1;
PROC M14DZA_DROUGHT
preproc
ask if M14DZ_DROUGHT = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14D
preproc
ask if M13D_NEGAFF = 1;
PROC M14EZA_EARTHQUAKE
preproc
ask if M14EZ_EARTHQUAKE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14E
preproc
ask if M13E_NEGAFF = 1;
PROC M14VZA_VOLCANICERUPTION
preproc
ask if M14VZ_VOLCANICERUPTION = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14F
preproc
ask if M13F_NEGAFF = 1;
PROC M14ZA_LANDSLIDE
preproc
ask if M14Z_LANDSLIDE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14G
preproc
ask if M13G_NEGAFF = 1;
PROC M14ZA_FIRE
preproc
ask if M14Z_FIRE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14H
preproc
ask if M13H_NEGAFF = 1;
PROC M14ZA_PANDEMIC
preproc
ask if M14Z_PANDEMIC = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14I
preproc
ask if M13I_NEGAFF = 1;
PROC M14ZA_ARMEDCONFLICT
preproc
ask if M14Z_ARMEDCONFLICT = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M14Z
preproc
ask if M13Z_NEGAFF = 1;
PROC M14ZA_OTHERS
preproc
ask if M14Z_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M15
preproc
ask if M14TC_TYPHOON = 1 or M14FC_FLOOD = 1 or M14DC_DROUGHT = 1 or M14EC_EARTHQUAKE = 1 or M14VC_VOLCANICERUPTION = 1 or M14C_LANDSLIDE = 1 or M14C_FIRE = 1
or M14C_PANDEMIC = 1 or M14C_ARMEDCONFLICT = 1 or M14C_OTHERS = 1;
PROC M16_RECONREPAIR
preproc
ask if M14TC_TYPHOON = 1 or M14FC_FLOOD = 1 or M14DC_DROUGHT = 1 or M14EC_EARTHQUAKE = 1 or M14VC_VOLCANICERUPTION = 1 or M14C_LANDSLIDE = 1 or M14C_FIRE = 1
or M14C_PANDEMIC = 1 or M14C_ARMEDCONFLICT = 1 or M14C_OTHERS = 1;
PROC BLOCK_M17A
preproc
ask if M13A_NEGAFF = 1;
PROC M17ZA_TYPHOON
preproc
ask if M17Z_TYPHOON = 1;
postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17B
preproc
ask if M13B_NEGAFF = 1;
PROC M17ZA_FLOOD
preproc
ask if M17Z_FLOOD = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17C
preproc
ask if M13C_NEGAFF = 1;
PROC M17ZA_DROUGHT
preproc
ask if M17Z_DROUGHT = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17D
preproc
ask if M13D_NEGAFF = 1;
PROC M17ZA_EARTHQUAKE
preproc
ask if M17Z_EARTHQUAKE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17E
preproc
ask if M13E_NEGAFF = 1;
PROC M17ZA_ERUPTION
preproc
ask if M17Z_ERUPTION = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17F
preproc
ask if M13F_NEGAFF = 1;
PROC M17ZA_LANDSLIDE
preproc
ask if M17Z_LANDSLIDE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17G
preproc
ask if M13G_NEGAFF = 1;
PROC M17ZA_FIRE
preproc
ask if M17Z_FIRE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17H
preproc
ask if M13H_NEGAFF = 1;
PROC M17ZA_PANDEMIC
preproc
ask if M17Z_PANDEMIC = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17I
preproc
ask if M13I_NEGAFF = 1;
PROC M17ZA_ARMEDCONFLICT
preproc
ask if M17Z_ARMEDCONFLICT = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC BLOCK_M17Z
preproc
ask if M13Z_NEGAFF = 1;
PROC M17ZA_OTHERS
preproc
ask if M17Z_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18B_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18C_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18D_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18E_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18F_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18G_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18H_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18Z_TYPHOON
preproc
ask if M17A_TYPHOON = 1 OR M17B_TYPHOON = 1 OR M17C_TYPHOON = 1 OR M17D_TYPHOON = 1 OR M17Z_TYPHOON = 1;
PROC M18ZA_TYPHOON
preproc
ask if M18Z_TYPHOON = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18B_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18C_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18D_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18E_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18F_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18G_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18H_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18Z_FLOOD
preproc
ask if M17A_FLOOD = 1 OR M17B_FLOOD = 1 OR M17C_FLOOD = 1 OR M17D_FLOOD = 1 OR M17Z_FLOOD = 1;
PROC M18ZA_FLOOD
preproc
ask if M18Z_FLOOD = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18B_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18C_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18D_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18E_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18F_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18G_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18H_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18Z_DROUGHT
preproc
ask if M17A_DROUGHT = 1 OR M17B_DROUGHT = 1 OR M17C_DROUGHT = 1 OR M17D_DROUGHT = 1 OR M17Z_DROUGHT = 1;
PROC M18ZA_DROUGHT
preproc
ask if M18Z_DROUGHT = 1;
postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18B_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18C_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18D_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18E_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18F_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18G_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18H_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18Z_EARTHQUAKE
preproc
ask if M17A_EARTHQUAKE = 1 OR M17B_EARTHQUAKE = 1 OR M17C_EARTHQUAKE = 1 OR M17D_EARTHQUAKE = 1 OR M17Z_EARTHQUAKE = 1;
PROC M18ZA_EARTHQUAKE
preproc
ask if M18Z_EARTHQUAKE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18B_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18C_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18D_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18E_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18F_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18G_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18H_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18Z_ERUPTION
preproc
ask if M17A_ERUPTION = 1 OR M17B_ERUPTION = 1 OR M17C_ERUPTION = 1 OR M17D_ERUPTION = 1 OR M17Z_ERUPTION = 1;
PROC M18ZA_ERUPTION
preproc
ask if M18Z_ERUPTION = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18B_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18C_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18D_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18E_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18F_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18G_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18H_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18Z_LANDSLIDE
preproc
ask if M17A_LANDSLIDE = 1 OR M17B_LANDSLIDE = 1 OR M17C_LANDSLIDE = 1 OR M17D_LANDSLIDE = 1 OR M17Z_LANDSLIDE = 1;
PROC M18ZA_LANDSLIDE
preproc
ask if M18Z_LANDSLIDE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18B_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18C_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18D_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18E_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18F_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18G_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18H_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18Z_FIRE
preproc
ask if M17A_FIRE = 1 OR M17B_FIRE = 1 OR M17C_FIRE = 1 OR M17D_FIRE = 1 OR M17Z_FIRE = 1;
PROC M18ZA_FIRE
preproc
ask if M18Z_FIRE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18B_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18C_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18D_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18E_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18F_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18G_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18H_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18Z_PANDEMIC
preproc
ask if M17A_PANDEMIC = 1 OR M17B_PANDEMIC = 1 OR M17C_PANDEMIC = 1 OR M17D_PANDEMIC = 1 OR M17Z_PANDEMIC = 1;
PROC M18ZA_PANDEMIC
preproc
ask if M18Z_PANDEMIC = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18A_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18B_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18C_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18D_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18E_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18F_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18G_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18H_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18ZA_ARMEDCONFLICT
preproc
ask if M18Z_ARMEDCONFLICT = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M18Z_ARMEDCONFLICT
preproc
ask if M17A_ARMEDCONFLICT = 1 OR M17B_ARMEDCONFLICT = 1 OR M17C_ARMEDCONFLICT = 1 OR M17D_ARMEDCONFLICT = 1 OR M17Z_ARMEDCONFLICT = 1;
PROC M18A_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18B_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18C_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18D_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18E_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18F_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18G_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18H_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18Z_OTHER
preproc
ask if M17A_OTHERS = 1 OR M17B_OTHERS = 1 OR M17C_OTHERS = 1 OR M17D_OTHERS = 1 OR M17Z_OTHERS = 1;
PROC M18ZA_OTHER
preproc
ask if M18Z_OTHER = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC M19_DISKIT
postproc
if $ = 2 then
	skip to M23_PARTICIPATE;
endif;
PROC M20_DISKIT
postproc
if $ = 2 then
	skip to M23_PARTICIPATE;
endif;
PROC M22_HWATER
preproc
ask if M21_HWATER = 1;
PROC M22_IMATCHESLIGHTER
preproc
ask if M21_IMATCHESLIGHTER = 1;
PROC M22_JCANDLE
preproc
ask if M21_JCANDLE = 1;
PROC M22_KBATTERY
preproc
ask if M21_KBATTERY = 1;
PROC M22_LFACEMASKS
preproc
ask if M21_LFACEMASKS = 1;
PROC M22_MFLASHLIGHT
preproc
ask if M21_MFLASHLIGHT = 1;
PROC M22_NRADIO
preproc
ask if M21_NRADIO = 1;
PROC M22_OWHISTLE
preproc
ask if M21_OWHISTLE = 1;
PROC M22_PBLANKET
preproc
ask if M21_PBLANKET = 1;
PROC M22_QCELLPHONE
preproc
ask if M21_QCELLPHONE = 1;
PROC M22_ZOTHERS
preproc
ask if M21_ZOTHERS <> "" or notappl;
PROC M23_AFOOD
preproc
ask if M21_AFOOD = 1;
PROC M23_BMAINTENANCE
preproc
ask if M21_BMAINTENANCE = 1;
PROC M23_CCLOTHES
preproc
ask if M21_CCLOTHES = 1;
PROC M23_DINFANT
preproc
ask if M21_DINFANT = 1;
PROC M23_HWATER
preproc
ask if M21_HWATER = 1;
PROC M23_IMATCHESLIGHTER
preproc
ask if M21_IMATCHESLIGHTER = 1;
PROC M23_JCANDLE
preproc
ask if M21_JCANDLE = 1;
PROC M23_KBATTERY
preproc
ask if M21_KBATTERY = 1;
PROC M23_LFACEMASKS
preproc
ask if M21_LFACEMASKS = 1;
PROC M23_ZOTHERS
preproc
ask if M21_ZOTHERS <> "" or notappl;
PROC M23_PARTICIPATE
postproc
if $ = 2 then
	skip to M25_INFO;
endif;
PROC M24ZA_OTHERS
preproc
ask if M24Z_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC N01_HHINET
postproc
if $ = 2 then
	skip to ECOMMERCE_NOTE;
endif;
PROC N02ZA_INETACCESS
preproc
ask if N02Z_INETACCESS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC N03_INETATHOME
postproc
if $ = 2 then
	skip to N05_INETPAY;
endif;
PROC N07_HHPURCHASE
postproc
if $ = 2 then
	skip to N09_OLPLATFORM;
endif;
PROC N08ZA_PTMECOMUSE
preproc
ask if N08Z_PTMECOMUSE = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC N09_OLPLATFORM
if $ = 2 then
	skip to ECOMMERCE_NOTE;
endif;
PROC O02_VICTIM
postproc
if $ = 2 then
	skip to CRIME_NOTE;
endif;	
PROC O03A_THEFT
postproc
if $ = 2 then
	skip to O03B_ROBBERY;
endif;
PROC O04A_THEFT
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03B_ROBBERY;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05A_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03B_ROBBERY;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05A_THEFT000, HHNAME);
	skip to O05A_THEFT(curocc());
endif;

PROC O08A_THEFT
preproc
ask if O07A_THEFT = 2;
PROC O08AZ_THEFT
preproc
ask if O08A_THEFT = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03B_ROBBERY
postproc
if $ = 2 then
	skip to O03C_ASTHREAT;
endif;
PROC O04B_ROBBERY
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03C_ASTHREAT;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05B_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03C_ASTHREAT;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05A_THEFT000, HHNAME);
	skip to O05B_ROBBERY(curocc());
endif;

PROC O08B_ROBBERY
preproc
ask if O07B_ROBBERY = 2;
PROC O08BZ_ROBBERY
preproc
ask if O08B_ROBBERY = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03C_ASTHREAT
postproc
if $ = 2 then
	skip to O03D_VIOLENCE;
endif;
PROC O04C_ASTHREAT
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03D_VIOLENCE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05C_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03D_VIOLENCE;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05C_LNO000, HHNAME);
	skip to O05C_ASTHREAT(curocc());
endif;

PROC O08C_ASTHREAT
preproc
ask if O07C_ASTHREAT = 2;
PROC O08CZ_ASTHREAT
preproc
ask if O08C_ASTHREAT = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03D_VIOLENCE
postproc
if $ = 2 then
	skip to O03E_SXOFF;
endif;
PROC O04D_VIOLENCE
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03E_SXOFF;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05D_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03E_SXOFF;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05D_LNO000, HHNAME);
	skip to O05D_VIOLENCE(curocc());
endif;
PROC O08D_VIOLENCE
preproc
ask if O07D_VIOLENCE = 2;
PROC O08DZ_VIOLENCE
preproc
ask if O08D_VIOLENCE = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03E_SXOFF
postproc
if $ = 2 then
	skip to O03F_FRAUD;
endif;
PROC O04E_SXOFF
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03F_FRAUD;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05E_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03F_FRAUD;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05E_LNO000, HHNAME);
	skip to O05E_SXOFF(curocc());
endif;
PROC O08E_SXOFF
preproc
ask if O07E_SXOFF = 2;
PROC O08EZ_SXOFF
preproc
ask if O08E_SXOFF = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03F_FRAUD
postproc
if $ = 2 then
	skip to O03G_CORRUPT;
endif;
PROC O04F_FRAUD
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03G_CORRUPT;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05F_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03G_CORRUPT;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05F_LNO000, HHNAME);
	skip to O05F_FRAUD(curocc());
endif;
PROC O08F_FRAUD
preproc
ask if O07F_FRAUD = 2;
PROC O08FZ_FRAUD
preproc
ask if O08F_FRAUD = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03G_CORRUPT
postproc
if $ = 2 then
	skip to O03H_DRUGS;
endif;
PROC O04G_CORRUPT
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03H_DRUGS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05G_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03H_DRUGS;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	////errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05G_LNO000, HHNAME);
	skip to O05G_CORRUPT(curocc());
endif;
PROC O08G_CORRUPT
preproc
ask if O07G_CORRUPT = 2;
PROC O08GZ_CORRUPT
preproc
ask if O08G_CORRUPT = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03H_DRUGS
postproc
if $ = 2 then
	skip to O03I_VEHTHEFT;
endif;
PROC O04H_DRUGS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to O03I_VEHTHEFT;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05H_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to O03I_VEHTHEFT;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	//errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05H_LNO000, HHNAME);
	skip to O05H_DRUGS(curocc());
endif;

PROC O08H_DRUGS
preproc
ask if O07H_DRUGS = 2;
PROC O08HZ_DRUGS
preproc
ask if O08H_DRUGS = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03I_VEHTHEFT
postproc
if $ = 2 then
	skip to O03J_HOUSBREAK;
endif;
PROC O04I_VEHTHEFT
preproc
skip to O05I_VEHTHEFT(1);

PROC O05I_LNO
preproc
if curocc() > 1 then
	skip to O03J_HOUSBREAK;	
endif;


PROC O08I_VEHTHEFT
preproc
ask if O07I_VEHTHEFT = 2;
PROC O08IZ_VEHTHEFT
preproc
ask if O08I_VEHTHEFT = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03J_HOUSBREAK
postproc
if $ = 2 then
	skip to O03K_VANDALISM;
endif;
PROC O04J_HOUSBREAK
preproc
skip to O05J_HOUSBREAK(1);
PROC O05J_LNO

preproc
if curocc() > 1 then
	skip to O03K_VANDALISM;
endif;
PROC O08J_HOUSBREAK
preproc
ask if O07J_HOUSBREAK = 2;
PROC O08JZ_HOUSBREAK
preproc
ask if O08J_HOUSBREAK = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03K_VANDALISM
postproc
if $ = 2 then
	skip to O03Z_OTH;
endif;
PROC O04K_VANDALISM
preproc
skip to O05K_VANDALISM(1);
PROC O05K_LNO
preproc
if curocc() > 1 then
	skip to O03Z_OTH;
endif;
PROC O08K_VANDALISM
preproc
ask if O07K_VANDALISM = 2;
PROC O08KZ_VANDALISM
preproc
ask if O08K_VANDALISM = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O03Z_OTH
postproc
if $ = 2 then;
	skip to CRIME_NOTE;
endif;
PROC O03ZA_OTH
preproc
ask if O03Z_OTH = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC O04Z_OTH
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to CRIME_NOTE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC O05Z_LNO
preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to CRIME_NOTE;
else
	// $ = tonumber(listH4(curocc()));
	// A01_HHNAME(curocc()) = concat(strip(A01_LSTNAME(curocc())), ",", " ", strip(A01_FIRSTNAME(curocc())));
	// setocclabel(L24_LNO000, A01_HHNAME(curocc()));
	
	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	//errmsg(listH4Str);
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(O05Z_LNO000, HHNAME);
	skip to O05Z_OTH;
endif;
PROC O08Z_OTH
preproc
ask if O07Z_OTH = 2;
PROC O08ZZ_OTH
preproc
ask if O08Z_OTH = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC P01A_SSS
postproc
if $ = 2 then
	skip to P01B_GSIS;
endif;
PROC P02_1A_SSS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("99 - NON-MEMBER/S OR FORMER MEMBER/S ", "9");
tempVal1.add("No qualified member", "Z");

setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01B_GSIS;	
		endif;
	
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P03A_SSS
postproc
if $ = 2 then
	skip to P01B_GSIS;
endif;
PROC P04A_SSS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01B_GSIS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P01B_GSIS
postproc
if $ = 2 then
	skip to P01C_OWWA;
endif;
PROC P02_1B_GSIS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("99 - NON-MEMBER/S OR FORMER MEMBER/S ", "9");
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01C_OWWA;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P03B_GSIS
postproc
if $ = 2 then
	skip to P01C_OWWA;
endif;
PROC P04B_GSIS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01C_OWWA;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P01C_OWWA
postproc
if $ = 2 then
	skip to P01D_MEDINSURE;
endif;
PROC P02_1C_OWWA
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("99 - NON-MEMBER/S OR FORMER MEMBER/S ", "9");
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01D_MEDINSURE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P03C_OWWA
postproc
if $ = 2 then
	skip to P01D_MEDINSURE;
endif;
PROC P04C_OWWA
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01D_MEDINSURE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P01D_MEDINSURE
postproc
if $ = 2 then
	skip to P01E_LIFEINSURE;
endif;
PROC P02_1D_MEDINSURE
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("99 - NON-MEMBER/S OR FORMER MEMBER/S ", "9");
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01E_LIFEINSURE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P03D_MEDINSURE
postproc
if $ = 2 then
	skip to P01E_LIFEINSURE;
endif;
PROC P04D_MEDINSURE
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01E_LIFEINSURE;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P01E_LIFEINSURE
postproc
if $ = 2 then
	skip to P01F_PAGIBIG;
endif;
PROC P02_1E_LIFEINSURE
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("99 - NON-MEMBER/S OR FORMER MEMBER/S ", "9");
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01F_PAGIBIG;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P03E_LIFEINSURE
postproc
if $ = 2 then
	skip to P01F_PAGIBIG;
endif;
PROC P04E_LIFEINSURE
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01F_PAGIBIG;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P01F_PAGIBIG
postproc
if $ = 2 then
	skip to P01G_PHLHEALTH;
endif;
PROC P02_1F_PAGIBIG
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("99 - NON-MEMBER/S OR FORMER MEMBER/S ", "9");
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01G_PHLHEALTH;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P03F_PAGIBIG
postproc
if $ = 2 then
	skip to P01G_PHLHEALTH;
endif;
PROC P04F_PAGIBIG
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01G_PHLHEALTH;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P01G_PHLHEALTH
postproc
if $ = 2 then
	skip to P05A_REG4PS;
endif;
PROC P02_1G_PHLHEALTH
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("99 - NON-MEMBER/S OR FORMER MEMBER/S ", "9");
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05A_REG4PS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P03G_PHLHEALTH
postproc
if $ = 2 then
	skip to P05A_REG4PS;
endif;
PROC P04G_PHLHEALTH
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05A_REG4PS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P02_2_LNO

preproc
numeric occr;
string listH4Str;

if curocc() > listH4.length() then
	skip to P05A_REG4PS;
else

	$ = tonumber(listH4(curocc()));
	listH4Str = listH4(curocc());
	
	if listH4Str[1:1] = "0" then
		occr = tonumber(listH4Str[2:1]);
		$ = occr;
	else
		occr = tonumber(listH4Str[1:2]);
		$ = occr;
	endif;
	HHNAME = concat(strip(A01_LSTNAME(occr)), ",", " ", strip(A01_FIRSTNAME(occr)));
	setocclabel(P02_2_LNO000, HHNAME);
endif;
skip to P02_2_MEMBERSHIP(curocc());
PROC P05A_REG4PS
postproc
if $ = 2 then
	skip to P05B_MOD4PS;
endif;
PROC P06A_REG4PS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05B_MOD4PS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05B_MOD4PS
postproc
if $ = 2 then
	skip to P05C_UCT;
endif;
PROC P06B_MOD4PS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05C_UCT;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05C_UCT
postproc
if $ = 2 then
	skip to P05D_SOCPEN;
endif;
PROC P06C_UCT
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05D_SOCPEN;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05D_SOCPEN
postproc
if $ = 2 then
	skip to P05E_IMAP;
endif;
PROC P06D_SOCPEN
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05E_IMAP;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05E_IMAP
postproc
if $ = 2 then
	skip to P05F_STUFAP;
endif;
PROC P06E_IMAP
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05F_STUFAP;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05F_STUFAP
postproc
if $ = 2 then
	skip to P05G_SNRHIGH;
endif;
PROC P06F_STUFAP
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05G_SNRHIGH;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05G_SNRHIGH
postproc
if $ = 2 then
	skip to P05H_ESA;
endif;
PROC P06G_SNRHIGH
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05H_ESA;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05H_ESA
postproc
if $ = 2 then
	skip to P05I_HOUSING;
endif;
PROC P06H_ESA
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05I_HOUSING;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05I_HOUSING
postproc
if $ = 2 then
	skip to P05J_HEALTH;
endif;
PROC P06I_HOUSING
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05J_HEALTH;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05J_HEALTH
postproc
if $ = 2 then
	skip to P05Z_OTHERS;
endif;
PROC P06J_HEALTH
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P05Z_OTHERS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P05Z_OTHERS
postproc
if $ = 2 then
	skip to P08_MEMFEEDNG;
endif;
PROC P05ZA_OTHERS
preproc
ask if P05Z_OTHERS = 1;
PROC P06Z_OTHERS
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P08_MEMFEEDNG;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P08_MEMFEEDNG
postproc
if $ = 2 then
	skip to P11A_MICROSLP;
endif;
PROC P09_AVAILFEED
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P11A_MICROSLP;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P11A_MICROSLP
postproc
if $ = 2 then
	skip to P11B_EMPSLP;
endif;
PROC P12A_MICROSLP
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P11B_EMPSLP;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P11B_EMPSLP
postproc
if $ = 2 then
	skip to P11C_LIVELIHOOD;
endif;
PROC P12B_EMPSLP
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P11C_LIVELIHOOD;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P11C_LIVELIHOOD
postproc
if $ = 2 then
	skip to P11D_CASH;
endif;
PROC P12C_LIVELIHOOD
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P11D_CASH;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P11D_CASH
postproc
if $ = 2 then
	skip to P11E_FOOD;
endif;
PROC P12D_CASH
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P11E_FOOD;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P11E_FOOD
postproc
if $ = 2 then
	skip to P11F_CBEP;
endif;
PROC P12E_FOOD
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P11F_CBEP;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P11F_CBEP
postproc
if $ = 2 then
	skip to P11G_DOLETUPAD;
endif;
PROC P12F_CBEP
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P14A_PRODSERV;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P11G_DOLETUPAD
postproc
if $ = 2 then
	skip to P14A_PRODSERV;
endif;
PROC P12G_DOLETUPAD
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("No qualified member", "Z");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P14A_PRODSERV;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC P14Z_OTHER

PROC P14ZA_OTHER
preproc
ask if P14Z_OTHER = 1;

postproc
if $ = "" then
	errmsg("Must have entry!");
endif;
PROC Q01_MSWATER
postproc
if $ in 1, 9, 10 then
	skip to Q03_WDRINK;
endif;
PROC Q01A_MSWATER
preproc
ask if Q01_MSWATER = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q02_FAR
preproc
ask if Q01_MSWATER in 2:8;
PROC Q03_WDRINK
postproc
if $ in 11:12 then
	skip to Q10_WSUFCIENT;
elseif $ in 72, 91:92 then
	skip to Q04_WCOOK;
elseif $ in 13:14, 21, 31:32, 41:42, 51, 61, 71, 81 then
	skip to Q05_WSOURCE;
endif;
PROC Q03A_WDRINK
preproc
ask if Q03_WDRINK = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to Q05_WSOURCE;
PROC Q04A_WCOOK
preproc
ask if Q04_WCOOK = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q05_WSOURCE
postproc
if $ in 1:2 then
	skip to Q10_WSUFCIENT;
endif;
PROC Q06_WGET
postproc
if $ = 0 then
	skip to Q10_WSUFCIENT;
endif;
PROC Q08_WCOLLECT
preproc
tempVal1.clear();
numeric j;
do varying numeric i = 1 while i <= soccurs(SECTION_A)
	// if A05_SEX(i) = 2 and A07_AGE(i) in 8: 55 then
		j = j + 1;
		string mem = concat(edit("99",i)," - ",strip(concat(strip(A01_LSTNAME(i)), ",", " ", strip(A01_FIRSTNAME(i)))));
		tempVal1.add(mem, conToalpha(j));
	// endif;
enddo;
tempVal1.add("Not a household member", "96");
setvalueset($,tempVal1);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
else
	if ischecked("Z",$) then
		if length(strip($)) > 1 then
			errmsg("No qualified member selected. Please remove other answers!");
			reenter;
		else
			skip to P01B_GSIS;	
		endif;
	else
		listH4.clear();
		do varying numeric i = 1 while i <= length(strip($))	
			if not strip(getvaluelabel($[i:1])) = "" then
				listH4.add(strip(getvaluelabel($[i:1])[1:2]));
			endif;
		enddo;
		
	endif;
endif;
PROC Q08A_WCOLLECT
postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q10_WSUFCIENT
postproc
if $ in 2, 8 then
	skip to Q12_WSAFE;
endif;
PROC Q11A_ACCESS
preproc
ask if Q11_WACCESS = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q12_WSAFE
postproc
if $ in 2, 8 then
	skip to Q14_TOILET;
endif;
PROC Q14_TOILET
postproc
if $ in 13, 21:23, 31 then
	skip to Q16_EMPTIED;
elseif $ in 11, 14:15, 41, 51 then
	skip to Q18_LOC;
elseif $ in 71, 95 then
	skip to BLOCK_Q22;
endif;
PROC Q14A_TOILET
preproc
ask if Q14_TOILET = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to Q18_LOC;
PROC Q15A_OUTLET
preproc
ask if Q15_OUTLET = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q16_EMPTIED
postproc
if $ in 4:6, 8 then
	skip to Q18_LOC;
endif;
PROC Q17A_TIMEMPT
preproc
ask if Q17_TIMEMPT = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q18_LOC
postproc
if $ = 3 then
	skip to BLOCK_Q22;
endif;
PROC Q19_TSHARE
postproc
if $ = 2 then
	skip to BLOCK_Q22;
endif;
PROC Q22ZA_OTHERS
preproc
ask if Q22Z_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q23_WHANDS
postproc
if $ = 4 then
	skip to Q27_AVAILWHAND;
elseif $ = 5 then
	skip to Q26_WERWHAND;
endif;
PROC Q23A_WHANDS
preproc
ask if Q23_WHANDS = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;

skip to Q27_AVAILWHAND;
PROC Q25_PRESSOAP
postproc
if $ = 1 then
	skip to Q30_SODERT;
elseif $ = 2 then
	skip to Q28_SOAP;
endif;
PROC Q26A_WERWHAND
preproc
ask if Q26_WERWHAND = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC Q28_SOAP
postproc
if $ = 2 then
	skip to WATER_NOTE;
endif;
PROC Q29_SHOW
postproc
if $ = 2 then
	skip to WATER_NOTE;
endif;
PROC Q30A_SODERT
preproc
ask if ischecked("Z", Q30_SODERT);

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R01_BUILDING
postproc
if $ = 9 then
	skip to R12_ELCTRCTY;
endif;
PROC R01_BUILDOTH
preproc
ask if R01_BUILDING = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R03_OTHERS
preproc
ask if R03_ROOF = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R03A_ROOFRAME
preproc
ask if R03_ROOFRAME = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R04_WALLSOTH
preproc
ask if R04_WALLS = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R05A_FFLOOR
preproc
ask if R05_FFLOOR = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R06_MFLOOROTH
preproc
ask if R06_MFLOOR = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R08_OTHERS
preproc
ask if R08_FRAME = 99;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R12_ELCTRCTY
postproc
if $ = 2 then
	skip to R14_FUELGHT;
endif;
PROC R13EZ_OTHERS
preproc
ask if R13E_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R14_SPECIFY
preproc
ask if R14_FUELGHT = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R15_SPECIFY
preproc
ask if R15_FUELCOOK = 9;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC R17_TVSET
preproc
ask if R16J_TV <> 0;
PROC R18FZ_OTHERS
preproc
ask if R18F_OTHERS = 1;

postproc
if strip($) = "" then
	errmsg("Must have entry!");
	reenter;
endif;
PROC HOUSING_NOTE
postproc
savepartial();

PROC WAIVER
preproc
numeric visitNo = toNumber(sysparm("NUMBER_VISIT"));
if AGREE_INT = 2 then
	skip to TIME_END(visitNo);
endif;

postproc
if $ = 1 then
	numeric x = accept("Select how to capture signature.", "Sign on the tablet", "Capture via camera");
	if x = 1 then
//errmsg("ok");
// have the respondent sign to confirm that they agreed to this interview 
     string consent_filename = path.concat("Data\HPQ\Signatures\", key(HPQF2_DICT) + ".png"); 

    // if the file exists, then they must have already consented on a previous 
    // household visit so only take the signature if the file does not exist 
    //if not fileexist(consent_filename) then 
		
        string consent_message = concat("I have carefully read and fully understand the foregoing terms, and have freely, knowingly, and voluntarily signed this form on behalf of the members of my household"," "); 
        image consent_signature; 
		
        if not consent_signature.captureSignature(consent_message) then 
            errmsg("The respondent must consent before you can continue."); 
            reenter; 
        endif; 

        consent_signature.save(consent_filename) ; 
	else
		image signaturePhoto; 

	if signaturePhoto.takePhoto("Take a photo of the signed waiver.") then 

		// in case the device's camera takes photos with an unnecessarily 
		// large resolution, resample the image to a more reasonable size 
		signaturePhoto.resample(maxWidth := 1600, maxHeight := 1200); 

		// save the image using the household key... 
		string base_filename = path.concat(application, "Data\HPQ\Signatures\", key(HPQF2_DICT));

		// ...with 90 quality to prevent the JPEG from being too large 
		signaturePhoto.save(base_filename + ".jpg", quality := 90); 

	endif;
	
	endif;
    //endif;
else
	skip to GEOTAG;
endif;
PROC GEOTAG

PROC RES_VISIT
preproc
if curocc() > tonumber(sysparm("NUMBER_VISIT")) then
	endgroup;
endif;

if HSN = 7777 then
	$ = 5;
	setvalueset($, RES_VISIT_VS2); 
elseif HSN = 8888 then
	$ = 6;
	setvalueset($, RES_VISIT_VS3); 
elseif HSN = 8889 then
	$ = 7;
	setvalueset($, RES_VISIT_VS4); 
endif;

postproc
if $ in 5,6,7 then
	skip to TIME_END;
endif;
PROC RESP_LSTNAME
postproc
if $ = '' then
	errmsg('Last name is required.');
	reenter;
endif;
PROC RESP_FIRSTNAME
postproc
if $ = '' then
	errmsg('First name is required.');
	reenter;
endif;
PROC RESP_MIDNAME

PROC RESP_EMAILADD
postproc
if $ <> "" then
	if regexmatch($, "^[^@\s]+@[^@\s]+\.[^@\s]+$") then
		skip to TIME_END;
	else
		errmsg("Invalid email format.");
		reenter;
	endif;
endif;

advance to APPOINT_DATE;
PROC TIME_END
preproc
$ = systime("HHMM");

// postproc
// advance to RES_VISIT(curocc());
PROC DINT
preproc
$ = TIME_END - TIME_START;

postproc
if RES_VISIT in 5,6,7 then
	skip to NUMBER_VISIT;
endif;
PROC APPOINT_DATE
preproc
ask if RES_VISIT(visualvalue(visit_no)) = 8 or RES_VISIT(visualvalue(visit_no)) = 9;

postproc
if $=notappl then
	errmsg("Appoint date is required.");
	reenter;
endif;
PROC APPOINT_TIME
preproc
ask if RES_VISIT(visualvalue(visit_no)) = 8 or RES_VISIT(visualvalue(visit_no)) = 9;

postproc
if $ = notappl then
	errmsg("Appoint time is required.");
	reenter;
else
	string apptTime = edit("9999",APPOINT_TIME);
	if regexmatch(apptTime, "^([0-1][0-9]|[2][0-3])([0-5][0-9])$") = 0 then
	   errmsg("Please use HHMM time format");
	   reenter;
	endif;
	skip to LSTNAME;
endif;


PROC S01_LSTNAME
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
$ = RESP_LSTNAME(visocc);
PROC S01_FIRSTNAME
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
$ = RESP_FIRSTNAME(visocc);
PROC S01_SUFF
preproc

visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
$ = RESP_SUFF(visocc);
PROC S01_MIDNAME
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
$ = RESP_MIDNAME(visocc);
PROC S02_RELATIONSHIP
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;

PROC S03_LADDER
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC S04_REASON
preproc
ask if RES_VISIT(visocc) = 2;


PROC S04A_REASON
preproc
ask if RES_VISIT(visocc) = 2 and S04_REASON = 9;
PROC S05_BUILDING
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;

postproc
if $ <> 9 then
	skip to S06_FLOORS;
endif;
PROC S05_BUILDOTH
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC S06_FLOORS
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC S07_ROOF
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;

postproc
if $ <> 9 then
	skip to S08_WALLS;
endif;
PROC S07_OTHERS
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC S08_WALLS
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;

postproc
if $ <> 99 then
	skip to S09_FLOOR;
endif;
PROC S08_WALLSOTH
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC S09_FLOOR
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;

postproc
if $ <> 9 then
	skip to S10_MFLOOR;
endif;
PROC S09_FLOOROTH
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC S10_MFLOOR
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;

postproc
if $ <> 9 then
	skip to S11_FAREA;
elseif S09_FLOOR = 1 and !($ in 1,5) then
	errmsg('Finishing material of the floor is ceramic/tile/ marble/ granite, main construction material of the floor must be concrete.');
elseif S09_FLOOR = 2 and !($ in 1,5) then
	errmsg('finishing material of the floor is cement/brick/stone,  main construction material of the floor must be concrete/ earth/sand/mud.');
elseif S09_FLOOR = 3 and !($ in 1,2,5) then
	errmsg('finishing material of the floor is wood plank,  main construction material of the floor must be concrete/wood/ earth/sand/mud');
elseif S09_FLOOR = 4 and !($ in 1,2) then
	errmsg('finishing material of the floor is wood tile/ parquet,  main construction material of the floor must be concrete/wood')
elseif S09_FLOOR = 5 and !($ in 1,2) then
	errmsg('finishing material of the floor is vinyl/carpet tile,  main construction material of the floor must be concrete/wood');
elseif S09_FLOOR = 6 and !($ in 1,2,3,4,5) then
	errmsg('finishing material of the floor is linoleum,  main construction material of the floor must be concrete/wood/coconut lumber/bamboo/earth/sand/mud');
endif;
PROC S10_MFLOOROTH
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC S11_FAREA
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC REFUSAL_NOTES
preproc
visocc = tonumber(sysparm("number_visit"));
ask if RES_VISIT(visocc) = 2;
PROC FNO
postproc
if $=notappl then
	errmsg("Floor no. is required");
	reenter;
endif;
PROC HBN
postproc
if $=notappl then
	errmsg("House/Building no. is required");
	reenter;
endif;
PROC NBLN
postproc
if $="" then
	errmsg("Name of Block / Lot no. is required");
	reenter;
endif;
PROC STRTNME
postproc
if $="" then
	errmsg("Street name is required");
	reenter;
endif;
PROC SITIO_PUROK
postproc
if $="" then
	errmsg("Sitio/Purok is required");
	reenter;
endif;
PROC NUMBER_VISIT
preproc
$ = totocc(INTERVIEW_RECORD000);
PROC NO_HH_MEMBERS
preproc
$ = totocc(SECTION_A000);

PROC NO_MALE
preproc
if soccurs(SECTION_A) > 0 then
$ = noOfMales;
else
$ = 0;
endif;
PROC NO_FEMALE
preproc
if soccurs(SECTION_A) > 0 then
$ = noOfFemales;
else
$ = 0;
endif;

PROC NO_NUCLEAR_FAM
preproc
{if soccurs(SECTION_A) > 0 then
nuclearFamily.sort(descending); 
$ = nuclearFamily(1);
else
$ = 0;
endif;
}
PROC REMARKS
postproc
savepartial();
visocc = tonumber(sysparm("number_visit"));
if RES_VISIT(visocc) = 9 then
	savepartial();	
endif;
readApp();
errmsg("CSEntry will exit");

