{Application 'RUNDV' logic file generated by CSPro}
PROC GLOBAL

//LIZA DECLARATIONS
numeric countIntSummary, countA,countB,countC,countD,countE, countF,countG,countH,countI;
numeric countJ,countK,countL,countM,countN, countO,countP,countQ,countR,countS,countX;
numeric countInd_E_Int, CountInd_W_Int;
numeric countInd_E_A,	countInd_E_B,	countInd_E_C,	countInd_E_D,	countInd_E_E,	countInd_E_F,	countInd_E_G,	countInd_E_H,	countInd_E_I,	countInd_E_J,	countInd_E_K,	countInd_E_L,	countInd_E_M,	countInd_E_N,	countInd_E_O,	countInd_E_P,	countInd_E_Q,	countInd_E_R,	countInd_E_S;
numeric countInd_W_A,	countInd_W_B,	countInd_W_C,	countInd_W_D,	countInd_W_E,	countInd_W_F,	countInd_W_G,	countInd_W_H,	countInd_W_I,	countInd_W_J,	countInd_W_K,	countInd_W_L,	countInd_W_M,	countInd_W_N,	countInd_W_O,	countInd_W_P,	countInd_W_Q,	countInd_W_R,	countInd_W_S;


file forapp;

numeric caseNo = 0, TotErrors,TotE, TotW, cSpotcheck;
list numeric display_lno;

//ARRAY DISPLAY
list string errorname;
list numeric errorcode;
list string display_tInd,display_tLno,display_tDispVar,display_tDataItem1,display_tDataItem2, display_tErrorcode,display_tErrmsg;

//PER SECTION ERRORCODE DECLARATION
numeric geo1_1, geo1_2, geo1_3, geo1_4, geo1_5, geo1_6, geo1_7, geo7_1, geo7_2, geo2_1,geo2_2,geo2_3,geo2_4, geo2_5, geo2_6,geo2_7, geo3_1,geo3_2,geo4_1,geo4_2, geo4_3, geo8_1, geo8_2, geo5_1, geo5_2, geo6_1, geo6_2, geo9_1, geo9_2;
numeric A01_1, A01_2, A01_3, A01_4, A02_1, A02_2, A03_1,A03_2, A04_1, A04_2, A05_1, A05_2, A06_1, A07_1, A07_2, A08_1, A08_2,A09_1, A09_2, A09_3, A10_1, A10_2, A10A_1, A11_1, A11_2, A11A_1, A12_1, A12_2;
numeric A13_1, A13_2, A13A_1, A14_1, A14_2, A15_1,A15_2, A16_1, A17_1, A17_2, A17_3, A18_1, A18_2, A18_3, A18_4, A19_1, A19_2, A19_3, A20A_1, A20A_2, A20A_3, A20B_1, A20B_2, A20B_3, A20C_1, A20C_2, A20C_3, A20D_1, A20D_2, A20D_3, A20E_1, A20E_2, A20E_3, A20F_1, A20F_2, A20F_3;
numeric B01_1,B01_2,B01_3,B01A_1,B01A_2,B01A_3,B01A_4,B01A_5,B01A_6,B01A_7,B01A_8,B01A_9,B01A_10,B01A_11,B01A_12, B02_1,B02_2,B02_3,B02A_1,B02A_2,B02A_3,B02A_4,B02b_1,B02b_2,B02b_3,B02A_8,B02b_4,B02b_5,B02A_11,B02A_12;
numeric B03_1,B03_2,B03_3,B03_4,B03A_1,B04_1,B04_2,B04_3,B04A_1,B04A_2,B04A_3,B04A_4,B04A_5,B04A_6,B04A_7,B04A_8,B04A_9,B04A_10,B04A_11,B04A_12,B04A_13, B05_1,B05_2,B05_3,B05_4,B05A_1,B05A_2, B06_1,B06_2,B06_3,B06_4;
numeric B07_1, B07_2, B07_3, B08_1, B08_2, B08_3, B09_1, B09_2, B09_3, B10_1, B10_2, B10_3;
numeric C01_1,	C01_2,	C01_3,	C01_4,	C02_1,	C02_2,	C02_3,	C02_4,	C02_5,	C02_6,	C02_7,	C02_8,	C02_9,	C02_10,	C02_11,	C02_12,	C02_13,	C02_14,	C02_15,	C02_16,	C02_17,	C02_18,	C02_19,	C02_20,	C02_21,	C02_22,	C02_23,	C02_24,	C03_1,	C03_2,	C04_1,	C04_2,	C04_3,	C05A_1,	C05A_2,	C05A_3,	C05_1,	C05_2,	C05_3,	C05_4,	C05_5,	C05_6,	C05_7,	C05_8,	C05_9,	C05_10,	C05_11,	C05_12,	C05_13,	C05_14,	C05_15,	C05_16,	C05_17;
numeric C05_18,	C05_19,	C05_20,	C05_21,	C05_22,	C05_23,	C06_1,	C06_2,	C06_3,	C06_4, C07_1,	C07_2,	C07_3,	C08_1,	C08_2,	C08_3,	C09_1,	C09_2,	C09_3,	C09_4;
numeric D01_1,	D01_2,	D01_3,	D02_1,	D02_2,	D02_3,	D03_1,	D03_2,	D03_3,	D04_1,	D04_2,	D04_3,	D05_1,	D05_2,	D05_3,	D06_1,	D06_2,	D06_3,	D06_4,	D07_1,	D07_2,	D07_3,	D08_1,	D08_2,	D09_1,	D09_2,	D10_1,	D10_2,	D10_3,	D11_1,	D11_2,	D11_3,	D11_4,	D12_1,	D12_2,	D12_3,	D13_1,	D13_2,	D13_3,	D13A_1,	D13A_2;																																
numeric E01_1,	E01_2,	E01_3,	E02_1,	E02_2,	E02_3,	E03_1,	E03_2,	E03_3,	E04_1,	E04_2,	E04_3,	E04_4,	E05_1,	E05_2,	E05_3,	E05_4,	E05_5,	E05_6,	E05_7,	E07_1,	E07_2,	E07_3,	E08_1,	E08_2,	E08_3,	E08_4,	E08_5,	E08_6,	E08_7,	E08_8,	E08_9,	E08_10,	E08_11,	E08_12,	E08_13,	E08_14,	E08_15,	E08_16,	E09_1,	E09_2,	E09_3,	E10_1,	E10_2,	E10_3,	E10_4,	E10_5,	E10_6,	E10_7,	E10_8,	E10_9,	E10_10;
numeric E11_1,	E11_2,	E11_3,	E11_4,	E12_1,	E12_2,	E12_3,	E12_4,	E12_5,	E13_1,	E13_2,	E13_3,	E13_4,	E13_5,	E13_6,	E13_7,	E14_1,	E14_2,	E14_3,	E14_4,	E14_5,	E14_6,	E14_7,	E14_8,	E14_9,	E14_10,	E14_11,	E15_1,	E15_2,	E15_3,	E15_4,	E15_5,	E16_1,	E16_2,	E16_3,	E16_4,	E16_5,	E17_1,	E17_2,	E17_3,	E17_4,	E17_5;
numeric	E17_6,	E17_7,	E18_1,	E18_2,	E18_3,	E18_4,	E18_5,	E18_6,	E18_7,	E18_8,	E18_9,	E18_10,	E18_11,	E18_12,	E18_13,	E18_14,	E18_15,	E18_16,	E19_1,	E19_2,	E19_3,	E19_4,	E19_5,	E19_6,	E19_7,	E19a_1,	E19a_2,	E20_1,	E20_2,	E20_3,	E20_4,	E20_5,	E20_6,	E20_7,	E20_8,	E20_9,	E21_1,	E21_2,	E21_3,	E21_4,	E21_5,	E22_1,	E22_2,	E22_3,	E22_4,	E22_5,	E22_6,	E22_7,	E22_8,	E23_1,	E23_2,	E23_3;
numeric	E23_4,	E23_5,	E23_6,	E23_7,	E23_8,	E23_9,	E23_10,	E23_11,	E23_12,	E23_13,	E23_14,	E24_1,	E24_2,	E24_3;
numeric F01_1,	F01_2,	F03A_1,	F03A_2,	F03B_1,	F03B_2,	F03C_1,	F03C_2,	F03D_1,	F03D_2,	F03E_1,	F03E_2,	F03F_1,	F03F_2,	F03G_1,	F03G_2,	F03H_1,	F03H_2,	F03I_1,	F03I_2,	F03J_1,	F03J_2,	F03K_1,	F03K_2,	F03L_1,	F03L_2,	F03M_1,	F03M_2,	F03N_1,	F03N_2,	F03O_1,	F03O_2,	F03P_1,	F03P_2,	F03Q_1,	F03Q_2,	F03R_1,	F03R_2,	F03S_1,	F03S_2,	F03T_1,	F03T_2,	F03U_1,	F03U_2,	F03V_1,	F03V_2, F04_1,	F05_1,	F06_1,	F07_1,	F08_1,	F09_1,	F10A_1,	F10B_1,	F10C_1,	F10C_2,	F11_1;
numeric G01_1,	G01_2,	G02_1,	G02_2,	G03_1,	G03_2,	G04_1,	G04_2,	G05_1,	G05_2,	G06_1,	G06_2,	G07_1,	G07_2,	G08_1,	G08_2,	G09_1,	G09_2,	G10_1,	G11_1,	G12a_1,	G12a_2,	G12b_1,	G12b_2,	G12c_1,	G12c_2,	G12d_1,	G12d_2,	G12e_1,	G12e_2,	G12f_1,	G12f_2,	G12z_1,	G12z_2,	G12za_1,	G13_1,	G13_2,	G13_3,	G13_4,	G14a_1,	G14a_2,	G14a_3,	G14a_4,	G14b_1,	G14b_2,	G14b_3;
numeric	G14b_4,	G14c_1,	G14c_2,	G14c_3,	G14c_4,	G14d_1,	G14d_2,	G14d_3,	G14d_4,	G14e_1,	G14e_2,	G14e_3,	G14e_4,	G14f_1,	G14f_2,	G14f_3,	G14f_4,	G14z_1,	G14z_2,	G14z_3,	G14z_4,	G14za_1,	G15_1,	G15_2,	G15_3,	G15_4, G16A_1,	G16A_2,	G16A_3,	G16B_1,	G16B_2,	G16B_3,	G16C_1,	G16C_2,	G16C_3,	G16D_1,	G16D_2,	G16D_3,	G16E_1,	G16E_2,	G16E_3,	G17_1,	G17_2,	G17_3,	G18_1,	G18_2,	G18_3,	G18A_1,	G18A_2,	G18A_3,	G19A_1,	G19A_2,	G19A_3;
numeric G19B_1,	G19B_2,	G19B_3,	G19C_1,	G19C_2,	G19C_3,	G19D_1,	G19D_2,	G19D_3,	G19F_1,	G19F_2,	G19F_3,	G19Z_1,	G19Z_2,	G19Z_3,	G19ZA_1,	G19ZA_2,	G19ZA_3,	G20_1,	G20_2,	G20_3,	G21_1,	G21_2,	G21_3,	G21A_1,	G21A_2,	G21A_3,	G22_1,	G22_2,	G22_3,	G23_1,	G23_2,	G23_3,	G24_1,	G24_2;
numeric H01_1,	H01_2,	H02A_1,	H02B_1,	H02C_1,	H03D_1,	H03E_1,	H03F_1,	H03G_1,	H03H_1,	H03I_1,	H03J_1,	H03K_1,	H03L_1,	H03M_1,	H03N_1,	H03O_1,	H03P_1,	H03Z_1,	H03ZA_1,	H03ZN_1,	H04_1,	H04_2,	H05_1,	H06_1;
numeric I01A_1,	I01A_2,	I01A_3,	I01B_1,	I01B_2,	I01B_3,	I01C_1,	I01C_2,	I01C_3,	I01D_1,	I01D_2,	I01D_3,	I01E_1,	I01E_2,	I01E_3,	I01F_1,	I01F_2,	I01F_3,	I01G_1,	I01G_2,	I01G_3,	I01H_1,	I01H_2,	I01H_3,	I01I_1,	I01I_2,	I01I_3,	I01J_1,	I01J_2,	I01J_3,	I01K_1,	I01K_2,	I01K_3,	I01L_1,	I01L_2,	I01L_3,	I01M_1,	I01M_2,	I01M_3,	I01N_1,	I01N_2,	I01N_3,	I02_1;


//OUTPUT FILES
//file summary_txt;

//START LIZA FUNCTION
function dispError(String tInd, String tLno, alpha(100) tDispVar, alpha(8) tErrorCode, alpha(100) tErrMsg,string tDataItem1, string tDataItem2, string Sec)
	
	display_tInd.add(tInd);
	display_tLno.add(tLno);
	display_tDispVar.add(tDispVar);
	display_tDataItem1.add(toupper(tDataItem1));	
	display_tDataItem2.add(toupper(tDataItem2));	
	display_tErrorcode.add(tErrorCode);
	display_tErrmsg.add(tErrMsg);
	
	
	if Sec = "IntSummary" and tInd = "E" then countInd_E_int = countInd_E_int + 1; endif;
	if Sec = "IntSummary" and tInd = "W" then countInd_W_int = countInd_W_int + 1; endif;
	
	if Sec = "A" and tInd = "E" then countInd_E_A = countInd_E_A + 1; endif;
	if Sec = "B" and tInd = "E" then countInd_E_B = countInd_E_B + 1; endif;
	if Sec = "C" and tInd = "E" then countInd_E_C = countInd_E_C + 1; endif;
	if Sec = "D" and tInd = "E" then countInd_E_D = countInd_E_D + 1; endif;
	if Sec = "E" and tInd = "E" then countInd_E_E = countInd_E_E + 1; endif;
	if Sec = "F" and tInd = "E" then countInd_E_F = countInd_E_F + 1; endif;
	if Sec = "G" and tInd = "E" then countInd_E_G = countInd_E_G + 1; endif;
	if Sec = "H" and tInd = "E" then countInd_E_H = countInd_E_H + 1; endif;
	if Sec = "I" and tInd = "E" then countInd_E_I = countInd_E_I + 1; endif;
	if Sec = "J" and tInd = "E" then countInd_E_J = countInd_E_J + 1; endif;
	if Sec = "K" and tInd = "E" then countInd_E_K = countInd_E_K + 1; endif;
	if Sec = "L" and tInd = "E" then countInd_E_L = countInd_E_L + 1; endif;
	if Sec = "M" and tInd = "E" then countInd_E_M = countInd_E_M + 1; endif;
	if Sec = "N" and tInd = "E" then countInd_E_N = countInd_E_N + 1; endif;
	if Sec = "O" and tInd = "E" then countInd_E_O = countInd_E_O + 1; endif;
	if Sec = "P" and tInd = "E" then countInd_E_P = countInd_E_P + 1; endif;
	if Sec = "Q" and tInd = "E" then countInd_E_Q = countInd_E_Q + 1; endif;
	if Sec = "R" and tInd = "E" then countInd_E_R = countInd_E_R + 1; endif;
	if Sec = "S" and tInd = "E" then countInd_E_S = countInd_E_S + 1; endif;

	if Sec = "A" and tInd = "W" then countInd_W_A = countInd_W_A + 1; endif;
	if Sec = "B" and tInd = "W" then countInd_W_B = countInd_W_B + 1; endif;
	if Sec = "C" and tInd = "W" then countInd_W_C = countInd_W_C + 1; endif;
	if Sec = "D" and tInd = "W" then countInd_W_D = countInd_W_D + 1; endif;
	if Sec = "E" and tInd = "W" then countInd_W_E = countInd_W_E + 1; endif;
	if Sec = "F" and tInd = "W" then countInd_W_F = countInd_W_F + 1; endif;
	if Sec = "G" and tInd = "W" then countInd_W_G = countInd_W_G + 1; endif;
	if Sec = "H" and tInd = "W" then countInd_W_H = countInd_W_H + 1; endif;
	if Sec = "I" and tInd = "W" then countInd_W_I = countInd_W_I + 1; endif;
	if Sec = "J" and tInd = "W" then countInd_W_J = countInd_W_J + 1; endif;
	if Sec = "K" and tInd = "W" then countInd_W_K = countInd_W_K + 1; endif;
	if Sec = "L" and tInd = "W" then countInd_W_L = countInd_W_L + 1; endif;
	if Sec = "M" and tInd = "W" then countInd_W_M = countInd_W_M + 1; endif;
	if Sec = "N" and tInd = "W" then countInd_W_N = countInd_W_N + 1; endif;
	if Sec = "O" and tInd = "W" then countInd_W_O = countInd_W_O + 1; endif;
	if Sec = "P" and tInd = "W" then countInd_W_P = countInd_W_P + 1; endif;
	if Sec = "Q" and tInd = "W" then countInd_W_Q = countInd_W_Q + 1; endif;
	if Sec = "R" and tInd = "W" then countInd_W_R = countInd_W_R + 1; endif;
	if Sec = "S" and tInd = "W" then countInd_W_S = countInd_W_S + 1; endif;	
	
	totE = countInd_E_int + countInd_E_A + 	countInd_E_B + 	countInd_E_C + 	countInd_E_D + 	countInd_E_E + 	countInd_E_F + 	countInd_E_G + 	countInd_E_H + 	countInd_E_I + 	countInd_E_J + 	countInd_E_K + 	countInd_E_L + 	countInd_E_M + 	countInd_E_N + 	countInd_E_O + 	countInd_E_P + 	countInd_E_Q + 	countInd_E_R + 	countInd_E_S ;
	totW = countInd_W_int + countInd_W_A + 	countInd_W_B + 	countInd_W_C + 	countInd_W_D + 	countInd_W_E + 	countInd_W_F + 	countInd_W_G + 	countInd_W_H + 	countInd_W_I + 	countInd_W_J + 	countInd_W_K + 	countInd_W_L + 	countInd_W_M + 	countInd_W_N + 	countInd_W_O + 	countInd_W_P + 	countInd_W_Q + 	countInd_W_R + 	countInd_W_S ;
	TotErrors = totE + totW;
	
	if Sec = "IntSummary" then countIntSummary = countIntSummary + 1; endif;
	if Sec = "A" then countA = countA + 1; endif;
	if Sec = "B" then countB = countB + 1; endif;
    if Sec = "C" then countC = countC + 1; endif;  
    if Sec = "D" then countD = countD + 1; endif;
	if Sec = "E" then countE = countE + 1; endif;
	if Sec = "F" then countF = countF + 1; endif;
	if Sec = "G" then countG = countG + 1; endif;
	if Sec = "H" then countH = countH + 1; endif;
	if Sec = "I" then countI = countI + 1; endif;
	if Sec = "J" then countJ = countJ + 1; endif;
	if Sec = "K" then countK = countK + 1; endif;
	if Sec = "L" then countL = countL + 1; endif;
	if Sec = "M" then countM = countM + 1; endif;
	if Sec = "N" then countN = countN + 1; endif;
	if Sec = "O" then countO = countO + 1; endif;
	if Sec = "P" then countP = countP + 1; endif;
	if Sec = "Q" then countQ = countQ + 1; endif;
	if Sec = "R" then countR = countR + 1; endif;
	if Sec = "X" then countX = countX + 1; endif;
	
	if tErrorCode = "Geo1.1" then geo1_1 = geo1_1 + 1; errorname.add("Geo1.1"); errorcode.add(geo1_1); endif;
	if tErrorCode = "Geo1.2" then geo1_2 = geo1_2 + 1; errorname.add("Geo1.2"); errorcode.add(geo1_2); endif;
	if tErrorCode = "Geo1.3" then geo1_3 = geo1_3 + 1; errorname.add("Geo1.3"); errorcode.add(geo1_3); endif;
	if tErrorCode = "Geo1.4" then geo1_4 = geo1_4 + 1; errorname.add("Geo1.4"); errorcode.add(geo1_4); endif;
	if tErrorCode = "Geo1.5" then geo1_5 = geo1_5 + 1; errorname.add("Geo1.5"); errorcode.add(geo1_5); endif;
	if tErrorCode = "Geo1.6" then geo1_6 = geo1_6 + 1; errorname.add("Geo1.6"); errorcode.add(geo1_6); endif;
	if tErrorCode = "Geo1.7" then geo1_7 = geo1_7 + 1; errorname.add("Geo1.7"); errorcode.add(geo1_7); endif;
	if tErrorCode = "Geo2.1" then geo2_1 = geo2_1 + 1; errorname.add("Geo2.1"); errorcode.add(geo2_1); endif;
	if tErrorCode = "Geo2.2" then geo2_2 = geo2_2 + 1; errorname.add("Geo2.2"); errorcode.add(geo2_2); endif;
	if tErrorCode = "Geo2.3" then geo2_3 = geo2_3 + 1; errorname.add("Geo2.3"); errorcode.add(geo2_3); endif;
	if tErrorCode = "Geo2.4" then geo2_4 = geo2_4 + 1; errorname.add("Geo2.4"); errorcode.add(geo2_4); endif;
	if tErrorCode = "Geo2.5" then geo2_5 = geo2_5 + 1; errorname.add("Geo2.5"); errorcode.add(geo2_5); endif;
	if tErrorCode = "Geo2.6" then geo2_6 = geo2_6 + 1; errorname.add("Geo2.6"); errorcode.add(geo2_6); endif;
	if tErrorCode = "Geo2.7" then geo2_7 = geo2_7 + 1; errorname.add("Geo2.7"); errorcode.add(geo2_7); endif;
	if tErrorCode = "Geo3.1" then geo3_1 = geo3_1 + 1; errorname.add("Geo3.1"); errorcode.add(geo3_1); endif;
	if tErrorCode = "Geo3.2" then geo3_2 = geo3_2 + 1; errorname.add("Geo3.2"); errorcode.add(geo3_2); endif;
	if tErrorCode = "Geo4.1" then geo4_1 = geo4_1 + 1; errorname.add("Geo4.1"); errorcode.add(geo4_1); endif;
	if tErrorCode = "Geo4.2" then geo4_2 = geo4_2 + 1; errorname.add("Geo4.2"); errorcode.add(geo4_2); endif;
	if tErrorCode = "Geo4.3" then geo4_3 = geo4_3 + 1; errorname.add("Geo4.3"); errorcode.add(geo4_3); endif;
	if tErrorCode = "Geo5.1" then geo5_1 = geo5_1 + 1; errorname.add("Geo5.1"); errorcode.add(geo5_1); endif;
	if tErrorCode = "Geo5.2" then geo5_2 = geo5_2 + 1; errorname.add("Geo5.2"); errorcode.add(geo5_2); endif;
	if tErrorCode = "Geo6.1" then geo6_1 = geo6_1 + 1; errorname.add("Geo6.1"); errorcode.add(geo6_1); endif;
	if tErrorCode = "Geo6.2" then geo6_2 = geo6_2 + 1; errorname.add("Geo6.2"); errorcode.add(geo6_2); endif;
	if tErrorCode = "Geo7.1" then geo7_1 = geo7_1 + 1; errorname.add("Geo7.1"); errorcode.add(geo7_1); endif;
	if tErrorCode = "Geo7.2" then geo7_2 = geo7_2 + 1; errorname.add("Geo7.2"); errorcode.add(geo7_2); endif;		
	if tErrorCode = "Geo8.1" then geo8_1 = geo8_1 + 1; errorname.add("Geo8.1"); errorcode.add(geo8_1); endif;
	if tErrorCode = "Geo8.2" then geo8_2 = geo8_2 + 1; errorname.add("Geo8.2"); errorcode.add(geo8_2); endif;
	if tErrorCode = "Geo9.1" then geo9_1 = geo9_1 + 1; errorname.add("Geo9.1"); errorcode.add(geo9_1); endif;
	if tErrorCode = "Geo9.2" then geo9_2 = geo9_2 + 1; errorname.add("Geo9.2"); errorcode.add(geo9_2); endif;

	if tErrorCode = "A01.1" then A01_1 = A01_1 + 1; errorname.add("A01.1"); errorcode.add(A01_1); endif;
	if tErrorCode = "A01.2" then A01_2 = A01_2 + 1; errorname.add("A01.2"); errorcode.add(A01_2); endif;
	if tErrorCode = "A01.3" then A01_3 = A01_3 + 1; errorname.add("A01.3"); errorcode.add(A01_3); endif;
	if tErrorCode = "A01.4" then A01_4 = A01_4 + 1; errorname.add("A01.4"); errorcode.add(A01_4); endif;
	if tErrorCode = "A02.1" then A02_1 = A02_1 + 1; errorname.add("A02.1"); errorcode.add(A02_1); endif;
	if tErrorCode = "A02.2" then A02_2 = A02_2 + 1; errorname.add("A02.2"); errorcode.add(A02_2); endif;
	if tErrorCode = "A03.1" then A03_1 = A03_1 + 1; errorname.add("A03.1"); errorcode.add(A03_1); endif;
	if tErrorCode = "A03.2" then A03_2 = A03_2 + 1; errorname.add("A03.2"); errorcode.add(A03_2); endif;
	if tErrorCode = "A04.1" then A04_1 = A04_1 + 1; errorname.add("A04.1"); errorcode.add(A04_1); endif;
	if tErrorCode = "A04.2" then A04_2 = A04_2 + 1; errorname.add("A04.2"); errorcode.add(A04_2); endif;
	if tErrorCode = "A05.1" then A05_1 = A05_1 + 1; errorname.add("A05.1"); errorcode.add(A05_1); endif;
	if tErrorCode = "A05.2" then A05_2 = A05_2 + 1; errorname.add("A05.1"); errorcode.add(A05_1); endif;
	if tErrorCode = "A06.1" then A06_1 = A06_1 + 1; errorname.add("A06.1"); errorcode.add(A06_1); endif;
	if tErrorCode = "A07.1" then A07_1 = A07_1 + 1; errorname.add("A07.1"); errorcode.add(A07_1); endif;
	if tErrorCode = "A07.2" then A07_2 = A07_2 + 1; errorname.add("A07.2"); errorcode.add(A07_2); endif;
	if tErrorCode = "A08.1" then A08_1 = A08_1 + 1; errorname.add("A08.1"); errorcode.add(A08_1); endif;
	if tErrorCode = "A08.2" then A08_2 = A08_2 + 1; errorname.add("A08.2"); errorcode.add(A08_2); endif;
	if tErrorCode = "A09.1" then A09_1 = A09_1 + 1; errorname.add("A09.1"); errorcode.add(A09_1); endif;
	if tErrorCode = "A09.2" then A09_2 = A09_2 + 1; errorname.add("A09.2"); errorcode.add(A09_2); endif;
	if tErrorCode = "A09.3" then A09_3 = A09_3 + 1; errorname.add("A09.3"); errorcode.add(A09_3); endif;
	if tErrorCode = "A10.1" then A10_1 = A10_1 + 1; errorname.add("A10.1"); errorcode.add(A10_1); endif;
	if tErrorCode = "A10.2" then A10_2 = A10_2 + 1; errorname.add("A10.2"); errorcode.add(A10_2); endif;
	if tErrorCode = "A10A.1" then A10A_1 = A10A_1 + 1; errorname.add("A10A.1"); errorcode.add(A10A_1); endif;
	if tErrorCode = "A11.1" then A11_1 = A11_1 + 1; errorname.add("A11.1"); errorcode.add(A11_1); endif;
	if tErrorCode = "A11.2" then A11_2 = A11_2 + 1; errorname.add("A11.2"); errorcode.add(A11_2); endif;
	if tErrorCode = "A11A.1" then A11A_1 = A11A_1 + 1; errorname.add("A11A.1"); errorcode.add(A11A_1); endif;
	if tErrorCode = "A12.1" then A12_1 = A12_1 + 1; errorname.add("A12.1"); errorcode.add(A12_1); endif;
	if tErrorCode = "A12.2" then A12_2 = A12_2 + 1; errorname.add("A12.2"); errorcode.add(A12_2); endif;
	if tErrorCode = "A13.1" then A13_1 = A13_1 + 1; errorname.add("A13.1"); errorcode.add(A13_1); endif;
	if tErrorCode = "A13.2" then A13_2 = A13_2 + 1; errorname.add("A13.2"); errorcode.add(A13_2); endif;
	if tErrorCode = "A13A.1" then A13A_1 = A13A_1 + 1; errorname.add("A13A.1"); errorcode.add(A13A_1); endif;
	if tErrorCode = "A14.1" then A14_1 = A14_1 + 1; errorname.add("A14.1"); errorcode.add(A14_1); endif;
	if tErrorCode = "A14.2" then A14_2 = A14_2 + 1; errorname.add("A14.2"); errorcode.add(A14_2); endif;
	if tErrorCode = "A15.1" then A15_1 = A15_1 + 1; errorname.add("A15.1"); errorcode.add(A15_1); endif;
	if tErrorCode = "A15.2" then A15_2 = A15_2 + 1; errorname.add("A15.2"); errorcode.add(A15_2); endif;
	if tErrorCode = "A16.1" then A16_1 = A16_1 + 1; errorname.add("A16.1"); errorcode.add(A16_1); endif;
	if tErrorCode = "A17.1" then A17_1 = A17_1 + 1; errorname.add("A17.1"); errorcode.add(A17_1); endif;
	if tErrorCode = "A17.2" then A17_2 = A17_2 + 1; errorname.add("A17.2"); errorcode.add(A17_2); endif;
	if tErrorCode = "A17.3" then A17_3 = A17_3 + 1; errorname.add("A17.3"); errorcode.add(A17_3); endif;
	if tErrorCode = "A18.1" then A18_1 = A18_1 + 1; errorname.add("A18.1"); errorcode.add(A18_1); endif;
	if tErrorCode = "A18.2" then A18_2 = A18_2 + 1; errorname.add("A18.2"); errorcode.add(A18_2); endif;
	if tErrorCode = "A18.3" then A18_3 = A18_3 + 1; errorname.add("A18.3"); errorcode.add(A18_3); endif;
	if tErrorCode = "A18.4" then A18_4 = A18_4 + 1; errorname.add("A18.4"); errorcode.add(A18_4); endif;
	if tErrorCode = "A19.1" then A19_1 = A19_1 + 1; errorname.add("A19.1"); errorcode.add(A19_1); endif;
	if tErrorCode = "A19.2" then A19_2 = A19_2 + 1; errorname.add("A19.2"); errorcode.add(A19_2); endif;
	if tErrorCode = "A19.3" then A19_3 = A19_3 + 1; errorname.add("A19.3"); errorcode.add(A19_3); endif;		
	if tErrorCode = "A20A.1" then A20A_1 = A20A_1 + 1; errorname.add("A20A.1"); errorcode.add(A20A_1); endif;		
	if tErrorCode = "A20A.2" then A20A_2 = A20A_2 + 1; errorname.add("A20A.2"); errorcode.add(A20A_2); endif;		
	if tErrorCode = "A20A.3" then A20A_3 = A20A_3 + 1; errorname.add("A20A.3"); errorcode.add(A20A_3); endif;		
	if tErrorCode = "A20B.1" then A20B_1 = A20B_1 + 1; errorname.add("A20B.1"); errorcode.add(A20B_1); endif;		
	if tErrorCode = "A20B.2" then A20B_2 = A20B_2 + 1; errorname.add("A20B.2"); errorcode.add(A20B_2); endif;		
	if tErrorCode = "A20B.3" then A20B_3 = A20B_3 + 1; errorname.add("A20B.3"); errorcode.add(A20B_3); endif;		
	if tErrorCode = "A20C.1" then A20C_1 = A20C_1 + 1; errorname.add("A20C.1"); errorcode.add(A20C_1); endif;		
	if tErrorCode = "A20C.2" then A20C_2 = A20C_2 + 1; errorname.add("A20C.2"); errorcode.add(A20C_2); endif;		
	if tErrorCode = "A20C.3" then A20C_3 = A20C_3 + 1; errorname.add("A20C.3"); errorcode.add(A20C_3); endif;
	if tErrorCode = "A20D.1" then A20D_1 = A20D_1 + 1; errorname.add("A20D.1"); errorcode.add(A20D_1); endif;		
	if tErrorCode = "A20D.2" then A20D_2 = A20D_2 + 1; errorname.add("A20D.2"); errorcode.add(A20D_2); endif;		
	if tErrorCode = "A20D.3" then A20D_3 = A20D_3 + 1; errorname.add("A20D.3"); errorcode.add(A20D_3); endif;
	if tErrorCode = "A20E.1" then A20E_1 = A20E_1 + 1; errorname.add("A20E.1"); errorcode.add(A20E_1); endif;		
	if tErrorCode = "A20E.2" then A20E_2 = A20E_2 + 1; errorname.add("A20E.2"); errorcode.add(A20E_2); endif;		
	if tErrorCode = "A20E.3" then A20E_3 = A20E_3 + 1; errorname.add("A20E.3"); errorcode.add(A20E_3); endif;
	if tErrorCode = "A20F.1" then A20F_1 = A20F_1 + 1; errorname.add("A20F.1"); errorcode.add(A20F_1); endif;		
	if tErrorCode = "A20F.2" then A20F_2 = A20F_2 + 1; errorname.add("A20F.2"); errorcode.add(A20F_2); endif;		
	if tErrorCode = "A20F.3" then A20F_3 = A20F_3 + 1; errorname.add("A20F.3"); errorcode.add(A20F_3); endif;
	
	if tErrorCode = "B01.1" then B01_1 = B01_1 + 1; errorname.add("B01.1"); errorcode.add(B01_1); endif;	
	if tErrorCode = "B01.2" then B01_2 = B01_2 + 1; errorname.add("B01.2"); errorcode.add(B01_2); endif;	
	if tErrorCode = "B01.3" then B01_3 = B01_3 + 1; errorname.add("B01.3"); errorcode.add(B01_3); endif;	
	if tErrorCode = "B01A.1" then B01A_1 = B01A_1 + 1; errorname.add("B01A.1"); errorcode.add(B01A_1); endif;	
	if tErrorCode = "B01A.2" then B01A_2 = B01A_2 + 1; errorname.add("B01A.2"); errorcode.add(B01A_2); endif;	
	if tErrorCode = "B01A.3" then B01A_3 = B01A_3 + 1; errorname.add("B01A.3"); errorcode.add(B01A_3); endif;	
	if tErrorCode = "B01A.4" then B01A_4 = B01A_4 + 1; errorname.add("B01A.4"); errorcode.add(B01A_4); endif;	
	if tErrorCode = "B01A.5" then B01A_5 = B01A_5 + 1; errorname.add("B01A.5"); errorcode.add(B01A_5); endif;	
	if tErrorCode = "B01A.6" then B01A_6 = B01A_6 + 1; errorname.add("B01A.6"); errorcode.add(B01A_6); endif;	
	if tErrorCode = "B01A.7" then B01A_7 = B01A_7 + 1; errorname.add("B01A.7"); errorcode.add(B01A_7); endif;	
	if tErrorCode = "B01A.8" then B01A_8 = B01A_8 + 1; errorname.add("B01A.8"); errorcode.add(B01A_8); endif;	
	if tErrorCode = "B01A.9" then B01A_9 = B01A_9 + 1; errorname.add("B01A.9"); errorcode.add(B01A_9); endif;	
	if tErrorCode = "B02.1" then B02_1 = B02_1 + 1; errorname.add("B02.1"); errorcode.add(B02_1); endif;	
	if tErrorCode = "B02.2" then B02_2 = B02_2 + 1; errorname.add("B02.2"); errorcode.add(B02_2); endif;	
	if tErrorCode = "B02.3" then B02_3 = B02_3 + 1; errorname.add("B02.3"); errorcode.add(B02_3); endif;	
	if tErrorCode = "B02A.1" then B02A_1 = B02A_1 + 1; errorname.add("B02A.1"); errorcode.add(B02A_1); endif;
	if tErrorCode = "B02A.2" then B02A_2 = B02A_2 + 1; errorname.add("B02A.2"); errorcode.add(B02A_2); endif;
	if tErrorCode = "B02A.3" then B02A_3 = B02A_3 + 1; errorname.add("B02A.3"); errorcode.add(B02A_3); endif;
	if tErrorCode = "B02A.4" then B02A_4 = B02A_4 + 1; errorname.add("B02A.4"); errorcode.add(B02A_4); endif;
	if tErrorCode = "B02A.5" then B02B_1 = B02B_1 + 1; errorname.add("B02B.1"); errorcode.add(B02B_1); endif;
	if tErrorCode = "B02A.6" then B02B_2 = B02B_2 + 1; errorname.add("B02B.2"); errorcode.add(B02B_2); endif;
	if tErrorCode = "B02A.7" then B02B_3 = B02B_3 + 1; errorname.add("B02B.3"); errorcode.add(B02B_3); endif;
	if tErrorCode = "B02A.8" then B02B_4 = B02B_4 + 1; errorname.add("B02B.4"); errorcode.add(B02B_4); endif;
	if tErrorCode = "B02A.9" then B02B_5 = B02B_5 + 1; errorname.add("B02B.5"); errorcode.add(B02B_5); endif;
	if tErrorCode = "B03.1" then B03_1 = B03_1 + 1; errorname.add("B03.1"); errorcode.add(B03_1); endif;
	if tErrorCode = "B03.2" then B03_2 = B03_2 + 1; errorname.add("B03.2"); errorcode.add(B03_2); endif;
	if tErrorCode = "B03.3" then B03_3 = B03_3 + 1; errorname.add("B03.3"); errorcode.add(B03_3); endif;
	if tErrorCode = "B03.4" then B03_4 = B03_4 + 1; errorname.add("B03.4"); errorcode.add(B03_4); endif;
	if tErrorCode = "B03A.1" then B03A_1 = B03A_1 + 1; errorname.add("B03A.1"); errorcode.add(B03A_1); endif;
	if tErrorCode = "B04.1" then B04_1 = B04_1 + 1; errorname.add("B04.1"); errorcode.add(B04_1); endif;
	if tErrorCode = "B04.2" then B04_2 = B04_2 + 1; errorname.add("B04.2"); errorcode.add(B04_2); endif;
	if tErrorCode = "B04.3" then B04_3 = B04_3 + 1; errorname.add("B04.3"); errorcode.add(B04_3); endif;
	if tErrorCode = "B04A.1" then B04A_1 = B04A_1 + 1; errorname.add("B04A.1"); errorcode.add(B04A_1); endif;
	if tErrorCode = "B04A.2" then B04A_2 = B04A_2 + 1; errorname.add("B04A.2"); errorcode.add(B04A_2); endif;
	if tErrorCode = "B04A.3" then B04A_3 = B04A_3 + 1; errorname.add("B04A.3"); errorcode.add(B04A_3); endif;
	if tErrorCode = "B04A.4" then B04A_4 = B04A_4 + 1; errorname.add("B04A.4"); errorcode.add(B04A_4); endif;
	if tErrorCode = "B04A.5" then B04A_5 = B04A_5 + 1; errorname.add("B04A.5"); errorcode.add(B04A_5); endif;
	if tErrorCode = "B04A.6" then B04A_6 = B04A_6 + 1; errorname.add("B04A.6"); errorcode.add(B04A_6); endif;
	if tErrorCode = "B04A.7" then B04A_7 = B04A_7 + 1; errorname.add("B04A.7"); errorcode.add(B04A_7); endif;
	if tErrorCode = "B04A.8" then B04A_8 = B04A_8 + 1; errorname.add("B04A.8"); errorcode.add(B04A_8); endif;
	if tErrorCode = "B04A.9" then B04A_9 = B04A_9 + 1; errorname.add("B04A.9"); errorcode.add(B04A_9); endif;
	if tErrorCode = "B05.1" then B05_1 = B05_1 + 1; errorname.add("B05.1"); errorcode.add(B05_1); endif;
	if tErrorCode = "B05.2" then B05_2 = B05_2 + 1; errorname.add("B05.2"); errorcode.add(B05_2); endif;
	if tErrorCode = "B05.3" then B05_3 = B05_3 + 1; errorname.add("B05.3"); errorcode.add(B05_3); endif;
	if tErrorCode = "B05.4" then B05_4 = B05_4 + 1; errorname.add("B05.4"); errorcode.add(B05_4); endif;
	if tErrorCode = "B05A.1" then B05A_1 = B05A_1 + 1; errorname.add("B05A.1"); errorcode.add(B05A_1); endif;
	if tErrorCode = "B05A.2" then B05A_2 = B05A_2 + 1; errorname.add("B05A.2"); errorcode.add(B05A_2); endif;
	if tErrorCode = "B06.1" then B06_1 = B06_1 + 1; errorname.add("B06.1"); errorcode.add(B06_1); endif;
	if tErrorCode = "B06.2" then B06_2 = B06_2 + 1; errorname.add("B06.2"); errorcode.add(B06_2); endif;
	if tErrorCode = "B06.3" then B06_3 = B06_3 + 1; errorname.add("B06.3"); errorcode.add(B06_3); endif;
	if tErrorCode = "B06.4" then B06_4 = B06_4 + 1; errorname.add("B06.4"); errorcode.add(B06_4); endif;
	if tErrorCode = "B07.1" then B07_1 = B07_1 + 1; errorname.add("B07.1"); errorcode.add(B07_1); endif;
	if tErrorCode = "B07.2" then B07_2 = B07_2 + 1; errorname.add("B07.2"); errorcode.add(B07_2); endif;
	if tErrorCode = "B07.3" then B07_3 = B07_3 + 1; errorname.add("B07.3"); errorcode.add(B07_3); endif;
	if tErrorCode = "B08.1" then B08_1 = B08_1 + 1; errorname.add("B08.1"); errorcode.add(B08_1); endif;
	if tErrorCode = "B08.2" then B08_2 = B08_2 + 1; errorname.add("B08.2"); errorcode.add(B08_2); endif;
	if tErrorCode = "B08.3" then B08_3 = B08_3 + 1; errorname.add("B08.3"); errorcode.add(B08_3); endif;
	if tErrorCode = "B09.1" then B09_1 = B09_1 + 1; errorname.add("B09.1"); errorcode.add(B09_1); endif;
	if tErrorCode = "B09.2" then B09_2 = B09_2 + 1; errorname.add("B09.2"); errorcode.add(B09_2); endif;
	if tErrorCode = "B09.3" then B09_3 = B09_3 + 1; errorname.add("B09.3"); errorcode.add(B09_3); endif;
	if tErrorCode = "B10.1" then B10_1 = B10_1 + 1; errorname.add("B10.1"); errorcode.add(B10_1); endif;
	if tErrorCode = "B10.2" then B10_2 = B10_2 + 1; errorname.add("B10.2"); errorcode.add(B10_2); endif;
	if tErrorCode = "B10.3" then B10_3 = B10_3 + 1; errorname.add("B10.3"); errorcode.add(B10_3); endif;
	
	if tErrorCode = "C01.1" then C01_1 = C01_1 + 1; errorname.add("C01.1"); errorcode.add(C01_1); endif;
	if tErrorCode = "C01.2" then C01_2 = C01_2 + 1; errorname.add("C01.2"); errorcode.add(C01_2); endif;
	if tErrorCode = "C01.3" then C01_3 = C01_3 + 1; errorname.add("C01.3"); errorcode.add(C01_3); endif;
	if tErrorCode = "C01.4" then C01_4 = C01_4 + 1; errorname.add("C01.4"); errorcode.add(C01_4); endif;
	if tErrorCode = "C02.1" then C02_1 = C02_1 + 1; errorname.add("C02.1"); errorcode.add(C02_1); endif;
	if tErrorCode = "C02.2" then C02_2 = C02_2 + 1; errorname.add("C02.2"); errorcode.add(C02_2); endif;
	if tErrorCode = "C02.3" then C02_3 = C02_3 + 1; errorname.add("C02.3"); errorcode.add(C02_3); endif;
	if tErrorCode = "C02.4" then C02_4 = C02_4 + 1; errorname.add("C02.4"); errorcode.add(C02_4); endif;
	if tErrorCode = "C02.5" then C02_5 = C02_5 + 1; errorname.add("C02.5"); errorcode.add(C02_5); endif;
	if tErrorCode = "C02.6" then C02_6 = C02_6 + 1; errorname.add("C02.6"); errorcode.add(C02_6); endif;
	if tErrorCode = "C02.7" then C02_7 = C02_7 + 1; errorname.add("C02.7"); errorcode.add(C02_7); endif;
	if tErrorCode = "C02.8" then C02_8 = C02_8 + 1; errorname.add("C02.8"); errorcode.add(C02_8); endif;
	if tErrorCode = "C02.9" then C02_9 = C02_9 + 1; errorname.add("C02.9"); errorcode.add(C02_9); endif;
	if tErrorCode = "C02.10" then C02_10 = C02_10 + 1; errorname.add("C02.10"); errorcode.add(C02_10); endif;
	if tErrorCode = "C02.11" then C02_11 = C02_11 + 1; errorname.add("C02.11"); errorcode.add(C02_11); endif;
	if tErrorCode = "C02.12" then C02_12 = C02_12 + 1; errorname.add("C02.12"); errorcode.add(C02_12); endif;
	if tErrorCode = "C02.13" then C02_13 = C02_13 + 1; errorname.add("C02.13"); errorcode.add(C02_13); endif;
	if tErrorCode = "C02.14" then C02_14 = C02_14 + 1; errorname.add("C02.14"); errorcode.add(C02_14); endif;
	if tErrorCode = "C02.15" then C02_15 = C02_15 + 1; errorname.add("C02.15"); errorcode.add(C02_15); endif;
	if tErrorCode = "C02.16" then C02_16 = C02_16 + 1; errorname.add("C02.16"); errorcode.add(C02_16); endif;
	if tErrorCode = "C02.17" then C02_17 = C02_17 + 1; errorname.add("C02.17"); errorcode.add(C02_17); endif;
	if tErrorCode = "C02.18" then C02_18 = C02_18 + 1; errorname.add("C02.18"); errorcode.add(C02_18); endif;
	if tErrorCode = "C02.19" then C02_19 = C02_19 + 1; errorname.add("C02.19"); errorcode.add(C02_19); endif;
	if tErrorCode = "C02.20" then C02_20 = C02_20 + 1; errorname.add("C02.20"); errorcode.add(C02_20); endif;
	if tErrorCode = "C02.21" then C02_21 = C02_21 + 1; errorname.add("C02.21"); errorcode.add(C02_21); endif;
	if tErrorCode = "C02.22" then C02_22 = C02_22 + 1; errorname.add("C02.22"); errorcode.add(C02_22); endif;
	if tErrorCode = "C02.23" then C02_23 = C02_23 + 1; errorname.add("C02.23"); errorcode.add(C02_23); endif;
	if tErrorCode = "C02.24" then C02_24 = C02_24 + 1; errorname.add("C02.24"); errorcode.add(C02_24); endif;
	if tErrorCode = "C03.1" then C03_1 = C03_1 + 1; errorname.add("C03.1"); errorcode.add(C03_1); endif;
	if tErrorCode = "C03.2" then C03_2 = C03_2 + 1; errorname.add("C03.2"); errorcode.add(C03_2); endif;
	if tErrorCode = "C04.1" then C04_1 = C04_1 + 1; errorname.add("C04.1"); errorcode.add(C04_1); endif;
	if tErrorCode = "C04.2" then C04_2 = C04_2 + 1; errorname.add("C04.2"); errorcode.add(C04_2); endif;
	if tErrorCode = "C04.3" then C04_3 = C04_3 + 1; errorname.add("C04.3"); errorcode.add(C04_3); endif;
	if tErrorCode = "C05A.1" then C05A_1 = C05A_1 + 1; errorname.add("C05A.1"); errorcode.add(C05A_1); endif;
	if tErrorCode = "C05A.2" then C05A_2 = C05A_2 + 1; errorname.add("C05A.2"); errorcode.add(C05A_2); endif;
	if tErrorCode = "C05A.3" then C05A_3 = C05A_3 + 1; errorname.add("C05A.3"); errorcode.add(C05A_3); endif;
	if tErrorCode = "C05.1" then C05_1 = C05_1 + 1; errorname.add("C05.1"); errorcode.add(C05_1); endif;
	if tErrorCode = "C05.2" then C05_2 = C05_2 + 1; errorname.add("C05.2"); errorcode.add(C05_2); endif;
	if tErrorCode = "C05.3" then C05_3 = C05_3 + 1; errorname.add("C05.3"); errorcode.add(C05_3); endif;
	if tErrorCode = "C05.4" then C05_4 = C05_4 + 1; errorname.add("C05.4"); errorcode.add(C05_4); endif;
	if tErrorCode = "C05.5" then C05_5 = C05_5 + 1; errorname.add("C05.5"); errorcode.add(C05_5); endif;
	if tErrorCode = "C05.6" then C05_6 = C05_6 + 1; errorname.add("C05.6"); errorcode.add(C05_6); endif;
	if tErrorCode = "C05.7" then C05_7 = C05_7 + 1; errorname.add("C05.7"); errorcode.add(C05_7); endif;
	if tErrorCode = "C05.8" then C05_8 = C05_8 + 1; errorname.add("C05.8"); errorcode.add(C05_8); endif;
	if tErrorCode = "C05.9" then C05_9 = C05_9 + 1; errorname.add("C05.9"); errorcode.add(C05_9); endif;
	if tErrorCode = "C05.10" then C05_10 = C05_10 + 1; errorname.add("C05.10"); errorcode.add(C05_10); endif;
	if tErrorCode = "C05.11" then C05_11 = C05_11 + 1; errorname.add("C05.11"); errorcode.add(C05_11); endif;
	if tErrorCode = "C05.12" then C05_12 = C05_12 + 1; errorname.add("C05.12"); errorcode.add(C05_12); endif;
	if tErrorCode = "C05.13" then C05_13 = C05_13 + 1; errorname.add("C05.13"); errorcode.add(C05_13); endif;
	if tErrorCode = "C05.14" then C05_14 = C05_14 + 1; errorname.add("C05.14"); errorcode.add(C05_14); endif;
	if tErrorCode = "C05.15" then C05_15 = C05_15 + 1; errorname.add("C05.15"); errorcode.add(C05_15); endif;
	if tErrorCode = "C05.16" then C05_16 = C05_16 + 1; errorname.add("C05.16"); errorcode.add(C05_16); endif;
	if tErrorCode = "C05.17" then C05_17 = C05_17 + 1; errorname.add("C05.17"); errorcode.add(C05_17); endif;
	if tErrorCode = "C05.18" then C05_18 = C05_18 + 1; errorname.add("C05.18"); errorcode.add(C05_18); endif;
	if tErrorCode = "C05.19" then C05_19 = C05_19 + 1; errorname.add("C05.19"); errorcode.add(C05_19); endif;
	if tErrorCode = "C05.20" then C05_20 = C05_20 + 1; errorname.add("C05.20"); errorcode.add(C05_20); endif;
	if tErrorCode = "C05.21" then C05_21 = C05_21 + 1; errorname.add("C05.21"); errorcode.add(C05_21); endif;
	if tErrorCode = "C05.22" then C05_22 = C05_22 + 1; errorname.add("C05.22"); errorcode.add(C05_22); endif;
	if tErrorCode = "C05.23" then C05_23 = C05_23 + 1; errorname.add("C05.23"); errorcode.add(C05_23); endif;
	if tErrorCode = "C06.1" then C06_1 = C06_1 + 1; errorname.add("C06.1"); errorcode.add(C06_1); endif;
	if tErrorCode = "C06.2" then C06_2 = C06_2 + 1; errorname.add("C06.2"); errorcode.add(C06_2); endif;
	if tErrorCode = "C06.3" then C06_3 = C06_3 + 1; errorname.add("C06.3"); errorcode.add(C06_3); endif;
	if tErrorCode = "C06.4" then C06_4 = C06_4 + 1; errorname.add("C06.4"); errorcode.add(C06_4); endif;
	if tErrorCode = "C07.1" then C07_1 = C07_1 + 1; errorname.add("C07.1"); errorcode.add(C07_1); endif;
	if tErrorCode = "C07.2" then C07_2 = C07_2 + 1; errorname.add("C07.2"); errorcode.add(C07_2); endif;

	if tErrorCode = "D01.1" then D01_1 = D01_1 + 1; errorname.add("D01.1"); errorcode.add(D01_1); endif;
	if tErrorCode = "D01.2" then D01_2 = D01_2 + 1; errorname.add("D01.2"); errorcode.add(D01_2); endif;
	if tErrorCode = "D01.3" then D01_3 = D01_3 + 1; errorname.add("D01.3"); errorcode.add(D01_3); endif;
	if tErrorCode = "D02.1" then D02_1 = D02_1 + 1; errorname.add("D02.1"); errorcode.add(D02_1); endif;
	if tErrorCode = "D02.2" then D02_2 = D02_2 + 1; errorname.add("D02.2"); errorcode.add(D02_2); endif;
	if tErrorCode = "D02.3" then D02_3 = D02_3 + 1; errorname.add("D02.3"); errorcode.add(D02_3); endif;
	if tErrorCode = "D03.1" then D03_1 = D03_1 + 1; errorname.add("D03.1"); errorcode.add(D03_1); endif;
	if tErrorCode = "D03.2" then D03_2 = D03_2 + 1; errorname.add("D03.2"); errorcode.add(D03_2); endif;
	if tErrorCode = "D03.3" then D03_3 = D03_3 + 1; errorname.add("D03.3"); errorcode.add(D03_3); endif;
	if tErrorCode = "D04.1" then D04_1 = D04_1 + 1; errorname.add("D04.1"); errorcode.add(D04_1); endif;
	if tErrorCode = "D04.2" then D04_2 = D04_2 + 1; errorname.add("D04.2"); errorcode.add(D04_2); endif;
	if tErrorCode = "D04.3" then D04_3 = D04_3 + 1; errorname.add("D04.3"); errorcode.add(D04_3); endif;
	if tErrorCode = "D05.1" then D05_1 = D05_1 + 1; errorname.add("D05.1"); errorcode.add(D05_1); endif;
	if tErrorCode = "D05.2" then D05_2 = D05_2 + 1; errorname.add("D05.2"); errorcode.add(D05_2); endif;
	if tErrorCode = "D05.3" then D05_3 = D05_3 + 1; errorname.add("D05.3"); errorcode.add(D05_3); endif;
	if tErrorCode = "D06.1" then D06_1 = D06_1 + 1; errorname.add("D06.1"); errorcode.add(D06_1); endif;
	if tErrorCode = "D06.2" then D06_2 = D06_2 + 1; errorname.add("D06.2"); errorcode.add(D06_2); endif;
	if tErrorCode = "D06.3" then D06_3 = D06_3 + 1; errorname.add("D06.3"); errorcode.add(D06_3); endif;
	if tErrorCode = "D06.4" then D06_4 = D06_4 + 1; errorname.add("D06.4"); errorcode.add(D06_4); endif;
	if tErrorCode = "D07.1" then D07_1 = D07_1 + 1; errorname.add("D07.1"); errorcode.add(D07_1); endif;
	if tErrorCode = "D07.2" then D07_2 = D07_2 + 1; errorname.add("D07.2"); errorcode.add(D07_2); endif;
	if tErrorCode = "D07.3" then D07_3 = D07_3 + 1; errorname.add("D07.3"); errorcode.add(D07_3); endif;
	if tErrorCode = "D08.1" then D08_1 = D08_1 + 1; errorname.add("D08.1"); errorcode.add(D08_1); endif;
	if tErrorCode = "D08.2" then D08_2 = D08_2 + 1; errorname.add("D08.2"); errorcode.add(D08_2); endif;
	if tErrorCode = "D09.1" then D09_1 = D09_1 + 1; errorname.add("D09.1"); errorcode.add(D09_1); endif;
	if tErrorCode = "D09.2" then D09_2 = D09_2 + 1; errorname.add("D09.2"); errorcode.add(D09_2); endif;
	if tErrorCode = "D10.1" then D10_1 = D10_1 + 1; errorname.add("D10.1"); errorcode.add(D10_1); endif;
	if tErrorCode = "D10.2" then D10_2 = D10_2 + 1; errorname.add("D10.2"); errorcode.add(D10_2); endif;
	if tErrorCode = "D10.3" then D10_3 = D10_3 + 1; errorname.add("D10.3"); errorcode.add(D10_3); endif;
	if tErrorCode = "D11.1" then D11_1 = D11_1 + 1; errorname.add("D11.1"); errorcode.add(D11_1); endif;
	if tErrorCode = "D11.2" then D11_2 = D11_2 + 1; errorname.add("D11.2"); errorcode.add(D11_2); endif;
	if tErrorCode = "D11.3" then D11_3 = D11_3 + 1; errorname.add("D11.3"); errorcode.add(D11_3); endif;
	if tErrorCode = "D11.4" then D11_4 = D11_4 + 1; errorname.add("D11.4"); errorcode.add(D11_4); endif;
	if tErrorCode = "D12.1" then D12_1 = D12_1 + 1; errorname.add("D12.1"); errorcode.add(D12_1); endif;
	if tErrorCode = "D12.2" then D12_2 = D12_2 + 1; errorname.add("D12.2"); errorcode.add(D12_2); endif;
	if tErrorCode = "D12.3" then D12_3 = D12_3 + 1; errorname.add("D12.3"); errorcode.add(D12_3); endif;
	if tErrorCode = "D13.1" then D13_1 = D13_1 + 1; errorname.add("D13.1"); errorcode.add(D13_1); endif;
	if tErrorCode = "D13.2" then D13_2 = D13_2 + 1; errorname.add("D13.2"); errorcode.add(D13_2); endif;
	if tErrorCode = "D13.3" then D13_3 = D13_3 + 1; errorname.add("D13.3"); errorcode.add(D13_3); endif;
	if tErrorCode = "D13A.1" then D13A_1 = D13A_1 + 1; errorname.add("D13A.1"); errorcode.add(D13A_1); endif;
	if tErrorCode = "D13A.2" then D13A_2 = D13A_2 + 1; errorname.add("D13A.2"); errorcode.add(D13A_2); endif;
	
	if tErrorCode = "E01.1" then E01_1 = E01_1 + 1; errorname.add("E01.1"); errorcode.add(E01_1); endif;
	if tErrorCode = "E01.2" then E01_2 = E01_2 + 1; errorname.add("E01.2"); errorcode.add(E01_2); endif;
	if tErrorCode = "E01.3" then E01_3 = E01_3 + 1; errorname.add("E01.3"); errorcode.add(E01_3); endif;
	if tErrorCode = "E02.1" then E02_1 = E02_1 + 1; errorname.add("E02.1"); errorcode.add(E02_1); endif;
	if tErrorCode = "E02.2" then E02_2 = E02_2 + 1; errorname.add("E02.2"); errorcode.add(E02_2); endif;
	if tErrorCode = "E02.3" then E02_3 = E02_3 + 1; errorname.add("E02.3"); errorcode.add(E02_3); endif;
	if tErrorCode = "E03.1" then E03_1 = E03_1 + 1; errorname.add("E03.1"); errorcode.add(E03_1); endif;
	if tErrorCode = "E03.2" then E03_2 = E03_2 + 1; errorname.add("E03.2"); errorcode.add(E03_2); endif;
	if tErrorCode = "E03.3" then E03_3 = E03_3 + 1; errorname.add("E03.3"); errorcode.add(E03_3); endif;
	if tErrorCode = "E04.1" then E04_1 = E04_1 + 1; errorname.add("E04.1"); errorcode.add(E04_1); endif;
	if tErrorCode = "E04.2" then E04_2 = E04_2 + 1; errorname.add("E04.2"); errorcode.add(E04_2); endif;
	if tErrorCode = "E04.3" then E04_3 = E04_3 + 1; errorname.add("E04.3"); errorcode.add(E04_3); endif;
	if tErrorCode = "E04.4" then E04_4 = E04_4 + 1; errorname.add("E04.4"); errorcode.add(E04_4); endif;
	if tErrorCode = "E05.1" then E05_1 = E05_1 + 1; errorname.add("E05.1"); errorcode.add(E05_1); endif;
	if tErrorCode = "E05.2" then E05_2 = E05_2 + 1; errorname.add("E05.2"); errorcode.add(E05_2); endif;
	if tErrorCode = "E05.3" then E05_3 = E05_3 + 1; errorname.add("E05.3"); errorcode.add(E05_3); endif;
	if tErrorCode = "E05.4" then E05_4 = E05_4 + 1; errorname.add("E05.4"); errorcode.add(E05_4); endif;
	if tErrorCode = "E05.5" then E05_5 = E05_5 + 1; errorname.add("E05.5"); errorcode.add(E05_5); endif;
	if tErrorCode = "E05.6" then E05_6 = E05_6 + 1; errorname.add("E05.6"); errorcode.add(E05_6); endif;
	if tErrorCode = "E05.7" then E05_7 = E05_7 + 1; errorname.add("E05.7"); errorcode.add(E05_7); endif;
	if tErrorCode = "E07.1" then E07_1 = E07_1 + 1; errorname.add("E07.1"); errorcode.add(E07_1); endif;
	if tErrorCode = "E07.2" then E07_2 = E07_2 + 1; errorname.add("E07.2"); errorcode.add(E07_2); endif;
	if tErrorCode = "E07.3" then E07_3 = E07_3 + 1; errorname.add("E07.3"); errorcode.add(E07_3); endif;
	if tErrorCode = "E08.1" then E08_1 = E08_1 + 1; errorname.add("E08.1"); errorcode.add(E08_1); endif;
	if tErrorCode = "E08.2" then E08_2 = E08_2 + 1; errorname.add("E08.2"); errorcode.add(E08_2); endif;
	if tErrorCode = "E08.3" then E08_3 = E08_3 + 1; errorname.add("E08.3"); errorcode.add(E08_3); endif;
	if tErrorCode = "E08.4" then E08_4 = E08_4 + 1; errorname.add("E08.4"); errorcode.add(E08_4); endif;
	if tErrorCode = "E08.5" then E08_5 = E08_5 + 1; errorname.add("E08.5"); errorcode.add(E08_5); endif;
	if tErrorCode = "E08.6" then E08_6 = E08_6 + 1; errorname.add("E08.6"); errorcode.add(E08_6); endif;
	if tErrorCode = "E08.7" then E08_7 = E08_7 + 1; errorname.add("E08.7"); errorcode.add(E08_7); endif;
	if tErrorCode = "E08.8" then E08_8 = E08_8 + 1; errorname.add("E08.8"); errorcode.add(E08_8); endif;
	if tErrorCode = "E08.9" then E08_9 = E08_9 + 1; errorname.add("E08.9"); errorcode.add(E08_9); endif;
	if tErrorCode = "E08.10" then E08_10 = E08_10 + 1; errorname.add("E08.10"); errorcode.add(E08_10); endif;
	if tErrorCode = "E08.11" then E08_11 = E08_11 + 1; errorname.add("E08.11"); errorcode.add(E08_11); endif;
	if tErrorCode = "E08.12" then E08_12 = E08_12 + 1; errorname.add("E08.12"); errorcode.add(E08_12); endif;
	if tErrorCode = "E08.13" then E08_13 = E08_13 + 1; errorname.add("E08.13"); errorcode.add(E08_13); endif;
	if tErrorCode = "E08.14" then E08_14 = E08_14 + 1; errorname.add("E08.14"); errorcode.add(E08_14); endif;
	if tErrorCode = "E08.15" then E08_15 = E08_15 + 1; errorname.add("E08.15"); errorcode.add(E08_15); endif;
	if tErrorCode = "E08.16" then E08_16 = E08_16 + 1; errorname.add("E08.16"); errorcode.add(E08_16); endif;
	if tErrorCode = "E09.1" then E09_1 = E09_1 + 1; errorname.add("E09.1"); errorcode.add(E09_1); endif;
	if tErrorCode = "E09.2" then E09_2 = E09_2 + 1; errorname.add("E09.2"); errorcode.add(E09_2); endif;
	if tErrorCode = "E09.3" then E09_3 = E09_3 + 1; errorname.add("E09.3"); errorcode.add(E09_3); endif;
	if tErrorCode = "E10.1" then E10_1 = E10_1 +  1; errorname.add("E10.1"); errorcode.add(E10_1); endif;
	if tErrorCode = "E10.2" then E10_2 = E10_2 +  1; errorname.add("E10.2"); errorcode.add(E10_2); endif;
	if tErrorCode = "E10.3" then E10_3 = E10_3 +  1; errorname.add("E10.3"); errorcode.add(E10_3); endif;
	if tErrorCode = "E10.4" then E10_4 = E10_4 +  1; errorname.add("E10.4"); errorcode.add(E10_4); endif;
	if tErrorCode = "E10.5" then E10_5 = E10_5 +  1; errorname.add("E10.5"); errorcode.add(E10_5); endif;
	if tErrorCode = "E10.6" then E10_6 = E10_6 +  1; errorname.add("E10.6"); errorcode.add(E10_6); endif;
	if tErrorCode = "E10.7" then E10_7 = E10_7 +  1; errorname.add("E10.7"); errorcode.add(E10_7); endif;
	if tErrorCode = "E10.8" then E10_8 = E10_8 +  1; errorname.add("E10.8"); errorcode.add(E10_8); endif;
	if tErrorCode = "E10.9" then E10_9 = E10_9 +  1; errorname.add("E10.9"); errorcode.add(E10_9); endif;
	if tErrorCode = "E10.10" then E10_10 = E10_10 +  1; errorname.add("E10.10"); errorcode.add(E10_10); endif;
	if tErrorCode = "E11.1" then E11_1 = E11_1 +  1; errorname.add("E11.1"); errorcode.add(E11_1); endif;
	if tErrorCode = "E11.2" then E11_2 = E11_2 +  1; errorname.add("E11.2"); errorcode.add(E11_2); endif;
	if tErrorCode = "E11.3" then E11_3 = E11_3 +  1; errorname.add("E11.3"); errorcode.add(E11_3); endif;
	if tErrorCode = "E11.4" then E11_4 = E11_4 +  1; errorname.add("E11.4"); errorcode.add(E11_4); endif;
	if tErrorCode = "E12.1" then E12_1 = E12_1 +  1; errorname.add("E12.1"); errorcode.add(E12_1); endif;
	if tErrorCode = "E12.2" then E12_2 = E12_2 +  1; errorname.add("E12.2"); errorcode.add(E12_2); endif;
	if tErrorCode = "E12.3" then E12_3 = E12_3 +  1; errorname.add("E12.3"); errorcode.add(E12_3); endif;
	if tErrorCode = "E12.4" then E12_4 = E12_4 +  1; errorname.add("E12.4"); errorcode.add(E12_4); endif;
	if tErrorCode = "E12.5" then E12_5 = E12_5 +  1; errorname.add("E12.5"); errorcode.add(E12_5); endif;
	if tErrorCode = "E13.1" then E13_1 = E13_1 +  1; errorname.add("E13.1"); errorcode.add(E13_1); endif;
	if tErrorCode = "E13.2" then E13_2 = E13_2 +  1; errorname.add("E13.2"); errorcode.add(E13_2); endif;
	if tErrorCode = "E13.3" then E13_3 = E13_3 +  1; errorname.add("E13.3"); errorcode.add(E13_3); endif;
	if tErrorCode = "E13.4" then E13_4 = E13_4 +  1; errorname.add("E13.4"); errorcode.add(E13_4); endif;
	if tErrorCode = "E13.5" then E13_5 = E13_5 +  1; errorname.add("E13.5"); errorcode.add(E13_5); endif;
	if tErrorCode = "E13.6" then E13_6 = E13_6 +  1; errorname.add("E13.6"); errorcode.add(E13_6); endif;
	if tErrorCode = "E13.7" then E13_7 = E13_7 +  1; errorname.add("E13.7"); errorcode.add(E13_7); endif;
	if tErrorCode = "E14.1" then E14_1 = E14_1 +  1; errorname.add("E14.1"); errorcode.add(E14_1); endif;
	if tErrorCode = "E14.2" then E14_2 = E14_2 +  1; errorname.add("E14.2"); errorcode.add(E14_2); endif;
	if tErrorCode = "E14.3" then E14_3 = E14_3 +  1; errorname.add("E14.3"); errorcode.add(E14_3); endif;
	if tErrorCode = "E14.4" then E14_4 = E14_4 +  1; errorname.add("E14.4"); errorcode.add(E14_4); endif;
	if tErrorCode = "E14.5" then E14_5 = E14_5 +  1; errorname.add("E14.5"); errorcode.add(E14_5); endif;
	if tErrorCode = "E14.6" then E14_6 = E14_6 +  1; errorname.add("E14.6"); errorcode.add(E14_6); endif;
	if tErrorCode = "E14.7" then E14_7 = E14_7 +  1; errorname.add("E14.7"); errorcode.add(E14_7); endif;
	if tErrorCode = "E14.8" then E14_8 = E14_8 +  1; errorname.add("E14.8"); errorcode.add(E14_8); endif;
	if tErrorCode = "E14.9" then E14_9 = E14_9 +  1; errorname.add("E14.9"); errorcode.add(E14_9); endif;
	if tErrorCode = "E14.10" then E14_10 = E14_10 +  1; errorname.add("E14.10"); errorcode.add(E14_10); endif;
	if tErrorCode = "E14.11" then E14_11 = E14_11 +  1; errorname.add("E14.11"); errorcode.add(E14_11); endif;
	if tErrorCode = "E15.1" then E15_1 = E15_1 +  1; errorname.add("E15.1"); errorcode.add(E15_1); endif;
	if tErrorCode = "E15.2" then E15_2 = E15_2 +  1; errorname.add("E15.2"); errorcode.add(E15_2); endif;
	if tErrorCode = "E15.3" then E15_3 = E15_3 +  1; errorname.add("E15.3"); errorcode.add(E15_3); endif;
	if tErrorCode = "E15.4" then E15_4 = E15_4 +  1; errorname.add("E15.4"); errorcode.add(E15_4); endif;
	if tErrorCode = "E15.5" then E15_5 = E15_5 +  1; errorname.add("E15.5"); errorcode.add(E15_5); endif;
	if tErrorCode = "E16.1" then E16_1 = E16_1 +  1; errorname.add("E16.1"); errorcode.add(E16_1); endif;
	if tErrorCode = "E16.2" then E16_2 = E16_2 +  1; errorname.add("E16.2"); errorcode.add(E16_2); endif;
	if tErrorCode = "E16.3" then E16_3 = E16_3 +  1; errorname.add("E16.3"); errorcode.add(E16_3); endif;
	if tErrorCode = "E16.4" then E16_4 = E16_4 +  1; errorname.add("E16.4"); errorcode.add(E16_4); endif;
	if tErrorCode = "E16.5" then E16_5 = E16_5 +  1; errorname.add("E16.5"); errorcode.add(E16_5); endif;
	if tErrorCode = "E17.1" then E17_1 = E17_1 +  1; errorname.add("E17.1"); errorcode.add(E17_1); endif;
	if tErrorCode = "E17.2" then E17_2 = E17_2 +  1; errorname.add("E17.2"); errorcode.add(E17_2); endif;
	if tErrorCode = "E17.3" then E17_3 = E17_3 +  1; errorname.add("E17.3"); errorcode.add(E17_3); endif;
	if tErrorCode = "E17.4" then E17_4 = E17_4 +  1; errorname.add("E17.4"); errorcode.add(E17_4); endif;
	if tErrorCode = "E17.5" then E17_5 = E17_5 +  1; errorname.add("E17.5"); errorcode.add(E17_5); endif;
	if tErrorCode = "E17.6" then E17_6 = E17_6 +  1; errorname.add("E17.6"); errorcode.add(E17_6); endif;
	if tErrorCode = "E17.7" then E17_7 = E17_7 +  1; errorname.add("E17.7"); errorcode.add(E17_7); endif;
	if tErrorCode = "E18.1" then E18_1 = E18_1 +  1; errorname.add("E18.1"); errorcode.add(E18_1); endif;
	if tErrorCode = "E18.2" then E18_2 = E18_2 +  1; errorname.add("E18.2"); errorcode.add(E18_2); endif;
	if tErrorCode = "E18.3" then E18_3 = E18_3 +  1; errorname.add("E18.3"); errorcode.add(E18_3); endif;
	if tErrorCode = "E18.4" then E18_4 = E18_4 +  1; errorname.add("E18.4"); errorcode.add(E18_4); endif;
	if tErrorCode = "E18.5" then E18_5 = E18_5 +  1; errorname.add("E18.5"); errorcode.add(E18_5); endif;
	if tErrorCode = "E18.6" then E18_6 = E18_6 +  1; errorname.add("E18.6"); errorcode.add(E18_6); endif;
	if tErrorCode = "E18.7" then E18_7 = E18_7 +  1; errorname.add("E18.7"); errorcode.add(E18_7); endif;
	if tErrorCode = "E18.8" then E18_8 = E18_8 +  1; errorname.add("E18.8"); errorcode.add(E18_8); endif;
	if tErrorCode = "E18.9" then E18_9 = E18_9 +  1; errorname.add("E18.9"); errorcode.add(E18_9); endif;
	if tErrorCode = "E18.10" then E18_10 = E18_10 +  1; errorname.add("E18.10"); errorcode.add(E18_10); endif;
	if tErrorCode = "E18.11" then E18_11 = E18_11 +  1; errorname.add("E18.11"); errorcode.add(E18_11); endif;
	if tErrorCode = "E18.12" then E18_12 = E18_12 +  1; errorname.add("E18.12"); errorcode.add(E18_12); endif;
	if tErrorCode = "E18.13" then E18_13 = E18_13 +  1; errorname.add("E18.13"); errorcode.add(E18_13); endif;
	if tErrorCode = "E18.14" then E18_14 = E18_14 +  1; errorname.add("E18.14"); errorcode.add(E18_14); endif;
	if tErrorCode = "E18.15" then E18_15 = E18_15 +  1; errorname.add("E18.15"); errorcode.add(E18_15); endif;
	if tErrorCode = "E18.16" then E18_16 = E18_16 +  1; errorname.add("E18.16"); errorcode.add(E18_16); endif;
	if tErrorCode = "E19.1" then E19_1 = E19_1 +  1; errorname.add("E19.1"); errorcode.add(E19_1); endif;
	if tErrorCode = "E19.2" then E19_2 = E19_2 +  1; errorname.add("E19.2"); errorcode.add(E19_2); endif;
	if tErrorCode = "E19.3" then E19_3 = E19_3 +  1; errorname.add("E19.3"); errorcode.add(E19_3); endif;
	if tErrorCode = "E19.4" then E19_4 = E19_4 +  1; errorname.add("E19.4"); errorcode.add(E19_4); endif;
	if tErrorCode = "E19.5" then E19_5 = E19_5 +  1; errorname.add("E19.5"); errorcode.add(E19_5); endif;
	if tErrorCode = "E19.6" then E19_6 = E19_6 +  1; errorname.add("E19.6"); errorcode.add(E19_6); endif;
	if tErrorCode = "E19.7" then E19_7 = E19_7 +  1; errorname.add("E19.7"); errorcode.add(E19_7); endif;
	if tErrorCode = "E19a.1" then E19a_1 = E19a_1 +  1; errorname.add("E19a.1"); errorcode.add(E19a_1); endif;
	if tErrorCode = "E19a.2" then E19a_2 = E19a_2 +  1; errorname.add("E19a.2"); errorcode.add(E19a_2); endif;
	if tErrorCode = "E20.1" then E20_1 = E20_1 +  1; errorname.add("E20.1"); errorcode.add(E20_1); endif;
	if tErrorCode = "E20.2" then E20_2 = E20_2 +  1; errorname.add("E20.2"); errorcode.add(E20_2); endif;
	if tErrorCode = "E20.3" then E20_3 = E20_3 +  1; errorname.add("E20.3"); errorcode.add(E20_3); endif;
	if tErrorCode = "E20.4" then E20_4 = E20_4 +  1; errorname.add("E20.4"); errorcode.add(E20_4); endif;
	if tErrorCode = "E20.5" then E20_5 = E20_5 +  1; errorname.add("E20.5"); errorcode.add(E20_5); endif;
	if tErrorCode = "E20.6" then E20_6 = E20_6 +  1; errorname.add("E20.6"); errorcode.add(E20_6); endif;
	if tErrorCode = "E20.7" then E20_7 = E20_7 +  1; errorname.add("E20.7"); errorcode.add(E20_7); endif;
	if tErrorCode = "E20.8" then E20_8 = E20_8 +  1; errorname.add("E20.8"); errorcode.add(E20_8); endif;
	if tErrorCode = "E20.9" then E20_9 = E20_9 +  1; errorname.add("E20.9"); errorcode.add(E20_9); endif;
	if tErrorCode = "E21.1" then E21_1 = E21_1 +  1; errorname.add("E21.1"); errorcode.add(E21_1); endif;
	if tErrorCode = "E21.2" then E21_2 = E21_2 +  1; errorname.add("E21.2"); errorcode.add(E21_2); endif;
	if tErrorCode = "E21.3" then E21_3 = E21_3 +  1; errorname.add("E21.3"); errorcode.add(E21_3); endif;
	if tErrorCode = "E21.4" then E21_4 = E21_4 +  1; errorname.add("E21.4"); errorcode.add(E21_4); endif;
	if tErrorCode = "E21.5" then E21_5 = E21_5 +  1; errorname.add("E21.5"); errorcode.add(E21_5); endif;
	if tErrorCode = "E22.1" then E22_1 = E22_1 +  1; errorname.add("E22.1"); errorcode.add(E22_1); endif;
	if tErrorCode = "E22.2" then E22_2 = E22_2 +  1; errorname.add("E22.2"); errorcode.add(E22_2); endif;
	if tErrorCode = "E22.3" then E22_3 = E22_3 +  1; errorname.add("E22.3"); errorcode.add(E22_3); endif;
	if tErrorCode = "E22.4" then E22_4 = E22_4 +  1; errorname.add("E22.4"); errorcode.add(E22_4); endif;
	if tErrorCode = "E22.5" then E22_5 = E22_5 +  1; errorname.add("E22.5"); errorcode.add(E22_5); endif;
	if tErrorCode = "E22.6" then E22_6 = E22_6 +  1; errorname.add("E22.6"); errorcode.add(E22_6); endif;
	if tErrorCode = "E22.7" then E22_7 = E22_7 +  1; errorname.add("E22.7"); errorcode.add(E22_7); endif;
	if tErrorCode = "E22.8" then E22_8 = E22_8 +  1; errorname.add("E22.8"); errorcode.add(E22_8); endif;
	if tErrorCode = "E23.1" then E23_1 = E23_1 +  1; errorname.add("E23.1"); errorcode.add(E23_1); endif;
	if tErrorCode = "E23.2" then E23_2 = E23_2 +  1; errorname.add("E23.2"); errorcode.add(E23_2); endif;
	if tErrorCode = "E23.3" then E23_3 = E23_3 +  1; errorname.add("E23.3"); errorcode.add(E23_3); endif;
	if tErrorCode = "E23.4" then E23_4 = E23_4 +  1; errorname.add("E23.4"); errorcode.add(E23_4); endif;
	if tErrorCode = "E23.5" then E23_5 = E23_5 +  1; errorname.add("E23.5"); errorcode.add(E23_5); endif;
	if tErrorCode = "E23.6" then E23_6 = E23_6 +  1; errorname.add("E23.6"); errorcode.add(E23_6); endif;
	if tErrorCode = "E23.7" then E23_7 = E23_7 +  1; errorname.add("E23.7"); errorcode.add(E23_7); endif;
	if tErrorCode = "E23.8" then E23_8 = E23_8 +  1; errorname.add("E23.8"); errorcode.add(E23_8); endif;
	if tErrorCode = "E23.9" then E23_9 = E23_9 +  1; errorname.add("E23.9"); errorcode.add(E23_9); endif;
	if tErrorCode = "E23.10" then E23_10 = E23_10 +  1; errorname.add("E23.10"); errorcode.add(E23_10); endif;
	if tErrorCode = "E23.11" then E23_11 = E23_11 +  1; errorname.add("E23.11"); errorcode.add(E23_11); endif;
	if tErrorCode = "E23.12" then E23_12 = E23_12 +  1; errorname.add("E23.12"); errorcode.add(E23_12); endif;
	if tErrorCode = "E23.13" then E23_13 = E23_13 +  1; errorname.add("E23.13"); errorcode.add(E23_13); endif;
	if tErrorCode = "E23.14" then E23_14 = E23_14 +  1; errorname.add("E23.14"); errorcode.add(E23_14); endif;
	if tErrorCode = "E24.1" then E24_1 = E24_1 +  1; errorname.add("E24.1"); errorcode.add(E24_1); endif;
	if tErrorCode = "E24.2" then E24_2 = E24_2 +  1; errorname.add("E24.2"); errorcode.add(E24_2); endif;
	if tErrorCode = "E24.3" then E24_3 = E24_3 +  1; errorname.add("E24.3"); errorcode.add(E24_3); endif;
	
	if tErrorCode = "F01.1" then F01_1 = F01_1 +  1; errorname.add("F01.1"); errorcode.add(F01_1); endif;
	if tErrorCode = "F01.2" then F01_2 = F01_2 +  1; errorname.add("F01.2"); errorcode.add(F01_2); endif;
	if tErrorCode = "F03A.1" then F03A_1 = F03A_1 +  1; errorname.add("F03A.1"); errorcode.add(F03A_1); endif;
	if tErrorCode = "F03A.2" then F03A_2 = F03A_2 +  1; errorname.add("F03A.2"); errorcode.add(F03A_2); endif;
	if tErrorCode = "F03B.1" then F03B_1 = F03B_1 +  1; errorname.add("F03B.1"); errorcode.add(F03B_1); endif;
	if tErrorCode = "F03B.2" then F03B_2 = F03B_2 +  1; errorname.add("F03B.2"); errorcode.add(F03B_2); endif;
	if tErrorCode = "F03C.1" then F03C_1 = F03C_1 +  1; errorname.add("F03C.1"); errorcode.add(F03C_1); endif;
	if tErrorCode = "F03C.2" then F03C_2 = F03C_2 +  1; errorname.add("F03C.2"); errorcode.add(F03C_2); endif;
	if tErrorCode = "F03D.1" then F03D_1 = F03D_1 +  1; errorname.add("F03D.1"); errorcode.add(F03D_1); endif;
	if tErrorCode = "F03D.2" then F03D_2 = F03D_2 +  1; errorname.add("F03D.2"); errorcode.add(F03D_2); endif;
	if tErrorCode = "F03E.1" then F03E_1 = F03E_1 +  1; errorname.add("F03E.1"); errorcode.add(F03E_1); endif;
	if tErrorCode = "F03E.2" then F03E_2 = F03E_2 +  1; errorname.add("F03E.2"); errorcode.add(F03E_2); endif;
	if tErrorCode = "F03F.1" then F03F_1 = F03F_1 +  1; errorname.add("F03F.1"); errorcode.add(F03F_1); endif;
	if tErrorCode = "F03F.2" then F03F_2 = F03F_2 +  1; errorname.add("F03F.2"); errorcode.add(F03F_2); endif;
	if tErrorCode = "F03G.1" then F03G_1 = F03G_1 +  1; errorname.add("F03G.1"); errorcode.add(F03G_1); endif;
	if tErrorCode = "F03G.2" then F03G_2 = F03G_2 +  1; errorname.add("F03G.2"); errorcode.add(F03G_2); endif;
	if tErrorCode = "F03H.1" then F03H_1 = F03H_1 +  1; errorname.add("F03H.1"); errorcode.add(F03H_1); endif;
	if tErrorCode = "F03H.2" then F03H_2 = F03H_2 +  1; errorname.add("F03H.2"); errorcode.add(F03H_2); endif;
	if tErrorCode = "F03I.1" then F03I_1 = F03I_1 +  1; errorname.add("F03I.1"); errorcode.add(F03I_1); endif;
	if tErrorCode = "F03I.2" then F03I_2 = F03I_2 +  1; errorname.add("F03I.2"); errorcode.add(F03I_2); endif;
	if tErrorCode = "F03J.1" then F03J_1 = F03J_1 +  1; errorname.add("F03J.1"); errorcode.add(F03J_1); endif;
	if tErrorCode = "F03J.2" then F03J_2 = F03J_2 +  1; errorname.add("F03J.2"); errorcode.add(F03J_2); endif;
	if tErrorCode = "F03K.1" then F03K_1 = F03K_1 +  1; errorname.add("F03K.1"); errorcode.add(F03K_1); endif;
	if tErrorCode = "F03K.2" then F03K_2 = F03K_2 +  1; errorname.add("F03K.2"); errorcode.add(F03K_2); endif;
	if tErrorCode = "F03L.1" then F03L_1 = F03L_1 +  1; errorname.add("F03L.1"); errorcode.add(F03L_1); endif;
	if tErrorCode = "F03L.2" then F03L_2 = F03L_2 +  1; errorname.add("F03L.2"); errorcode.add(F03L_2); endif;
	if tErrorCode = "F03M.1" then F03M_1 = F03M_1 +  1; errorname.add("F03M.1"); errorcode.add(F03M_1); endif;
	if tErrorCode = "F03M.2" then F03M_2 = F03M_2 +  1; errorname.add("F03M.2"); errorcode.add(F03M_2); endif;
	if tErrorCode = "F03N.1" then F03N_1 = F03N_1 +  1; errorname.add("F03N.1"); errorcode.add(F03N_1); endif;
	if tErrorCode = "F03N.2" then F03N_2 = F03N_2 +  1; errorname.add("F03N.2"); errorcode.add(F03N_2); endif;
	if tErrorCode = "F03O.1" then F03O_1 = F03O_1 +  1; errorname.add("F03O.1"); errorcode.add(F03O_1); endif;
	if tErrorCode = "F03O.2" then F03O_2 = F03O_2 +  1; errorname.add("F03O.2"); errorcode.add(F03O_2); endif;
	if tErrorCode = "F03P.1" then F03P_1 = F03P_1 +  1; errorname.add("F03P.1"); errorcode.add(F03P_1); endif;
	if tErrorCode = "F03P.2" then F03P_2 = F03P_2 +  1; errorname.add("F03P.2"); errorcode.add(F03P_2); endif;
	if tErrorCode = "F03Q.1" then F03Q_1 = F03Q_1 +  1; errorname.add("F03Q.1"); errorcode.add(F03Q_1); endif;
	if tErrorCode = "F03Q.2" then F03Q_2 = F03Q_2 +  1; errorname.add("F03Q.2"); errorcode.add(F03Q_2); endif;
	if tErrorCode = "F03R.1" then F03R_1 = F03R_1 +  1; errorname.add("F03R.1"); errorcode.add(F03R_1); endif;
	if tErrorCode = "F03R.2" then F03R_2 = F03R_2 +  1; errorname.add("F03R.2"); errorcode.add(F03R_2); endif;
	if tErrorCode = "F03S.1" then F03S_1 = F03S_1 +  1; errorname.add("F03S.1"); errorcode.add(F03S_1); endif;
	if tErrorCode = "F03S.2" then F03S_2 = F03S_2 +  1; errorname.add("F03S.2"); errorcode.add(F03S_2); endif;
	if tErrorCode = "F03T.1" then F03T_1 = F03T_1 +  1; errorname.add("F03T.1"); errorcode.add(F03T_1); endif;
	if tErrorCode = "F03T.2" then F03T_2 = F03T_2 +  1; errorname.add("F03T.2"); errorcode.add(F03T_2); endif;
	if tErrorCode = "F03U.1" then F03U_1 = F03U_1 +  1; errorname.add("F03U.1"); errorcode.add(F03U_1); endif;
	if tErrorCode = "F03U.2" then F03U_2 = F03U_2 +  1; errorname.add("F03U.2"); errorcode.add(F03U_2); endif;
	if tErrorCode = "F03V.1" then F03V_1 = F03V_1 +  1; errorname.add("F03V.1"); errorcode.add(F03V_1); endif;
	if tErrorCode = "F03V.2" then F03V_2 = F03V_2 +  1; errorname.add("F03V.2"); errorcode.add(F03V_2); endif;
	if tErrorCode = "F04.1" then F04_1 = F04_1 +  1; errorname.add("F04.1"); errorcode.add(F04_1); endif;
	if tErrorCode = "F05.1" then F05_1 = F05_1 +  1; errorname.add("F05.1"); errorcode.add(F05_1); endif;
	if tErrorCode = "F06.1" then F06_1 = F06_1 +  1; errorname.add("F06.1"); errorcode.add(F06_1); endif;
	if tErrorCode = "F07.1" then F07_1 = F07_1 +  1; errorname.add("F07.1"); errorcode.add(F07_1); endif;
	if tErrorCode = "F08.1" then F08_1 = F08_1 +  1; errorname.add("F08.1"); errorcode.add(F08_1); endif;
	if tErrorCode = "F09.1" then F09_1 = F09_1 +  1; errorname.add("F09.1"); errorcode.add(F09_1); endif;
	if tErrorCode = "F10A.1" then F10A_1 = F10A_1 +  1; errorname.add("F10A.1"); errorcode.add(F10A_1); endif;
	if tErrorCode = "F10B.1" then F10B_1 = F10B_1 +  1; errorname.add("F10B.1"); errorcode.add(F10B_1); endif;
	if tErrorCode = "F10C.1" then F10C_1 = F10C_1 +  1; errorname.add("F10C.1"); errorcode.add(F10C_1); endif;
	if tErrorCode = "F10C.2" then F10C_2 = F10C_2 +  1; errorname.add("F10C.2"); errorcode.add(F10C_2); endif;
	if tErrorCode = "F11.1" then F11_1 = F11_1 +  1; errorname.add("F11.1"); errorcode.add(F11_1); endif;


	if tErrorCode = "G01.1" then G01_1 = G01_1 +  1; errorname.add("G01.1"); errorcode.add(G01_1); endif;
	if tErrorCode = "G01.2" then G01_2 = G01_2 +  1; errorname.add("G01.2"); errorcode.add(G01_2); endif;
	if tErrorCode = "G02.1" then G02_1 = G02_1 +  1; errorname.add("G02.1"); errorcode.add(G02_1); endif;
	if tErrorCode = "G02.2" then G02_2 = G02_2 +  1; errorname.add("G02.2"); errorcode.add(G02_2); endif;
	if tErrorCode = "G03.1" then G03_1 = G03_1 +  1; errorname.add("G03.1"); errorcode.add(G03_1); endif;
	if tErrorCode = "G03.2" then G03_2 = G03_2 +  1; errorname.add("G03.2"); errorcode.add(G03_2); endif;
	if tErrorCode = "G04.1" then G04_1 = G04_1 +  1; errorname.add("G04.1"); errorcode.add(G04_1); endif;
	if tErrorCode = "G04.2" then G04_2 = G04_2 +  1; errorname.add("G04.2"); errorcode.add(G04_2); endif;
	if tErrorCode = "G05.1" then G05_1 = G05_1 +  1; errorname.add("G05.1"); errorcode.add(G05_1); endif;
	if tErrorCode = "G05.2" then G05_2 = G05_2 +  1; errorname.add("G05.2"); errorcode.add(G05_2); endif;
	if tErrorCode = "G06.1" then G06_1 = G06_1 +  1; errorname.add("G06.1"); errorcode.add(G06_1); endif;
	if tErrorCode = "G06.2" then G06_2 = G06_2 +  1; errorname.add("G06.2"); errorcode.add(G06_2); endif;
	if tErrorCode = "G07.1" then G07_1 = G07_1 +  1; errorname.add("G07.1"); errorcode.add(G07_1); endif;
	if tErrorCode = "G07.2" then G07_2 = G07_2 +  1; errorname.add("G07.2"); errorcode.add(G07_2); endif;
	if tErrorCode = "G08.1" then G08_1 = G08_1 +  1; errorname.add("G08.1"); errorcode.add(G08_1); endif;
	if tErrorCode = "G08.2" then G08_2 = G08_2 +  1; errorname.add("G08.2"); errorcode.add(G08_2); endif;
	if tErrorCode = "G09.1" then G09_1 = G09_1 +  1; errorname.add("G09.1"); errorcode.add(G09_1); endif;
	if tErrorCode = "G09.2" then G09_2 = G09_2 +  1; errorname.add("G09.2"); errorcode.add(G09_2); endif;
	if tErrorCode = "G10.1" then G10_1 = G10_1 +  1; errorname.add("G10.1"); errorcode.add(G10_1); endif;
	if tErrorCode = "G11.1" then G11_1 = G11_1 +  1; errorname.add("G11.1"); errorcode.add(G11_1); endif;
	if tErrorCode = "G12a.1" then G12a_1 = G12a_1 +  1; errorname.add("G12a.1"); errorcode.add(G12a_1); endif;
	if tErrorCode = "G12a.2" then G12a_2 = G12a_2 +  1; errorname.add("G12a.2"); errorcode.add(G12a_2); endif;
	if tErrorCode = "G12b.1" then G12b_1 = G12b_1 +  1; errorname.add("G12b.1"); errorcode.add(G12b_1); endif;
	if tErrorCode = "G12b.2" then G12b_2 = G12b_2 +  1; errorname.add("G12b.2"); errorcode.add(G12b_2); endif;
	if tErrorCode = "G12c.1" then G12c_1 = G12c_1 +  1; errorname.add("G12c.1"); errorcode.add(G12c_1); endif;
	if tErrorCode = "G12c.2" then G12c_2 = G12c_2 +  1; errorname.add("G12c.2"); errorcode.add(G12c_2); endif;
	if tErrorCode = "G12d.1" then G12d_1 = G12d_1 +  1; errorname.add("G12d.1"); errorcode.add(G12d_1); endif;
	if tErrorCode = "G12d.2" then G12d_2 = G12d_2 +  1; errorname.add("G12d.2"); errorcode.add(G12d_2); endif;
	if tErrorCode = "G12e.1" then G12e_1 = G12e_1 +  1; errorname.add("G12e.1"); errorcode.add(G12e_1); endif;
	if tErrorCode = "G12e.2" then G12e_2 = G12e_2 +  1; errorname.add("G12e.2"); errorcode.add(G12e_2); endif;
	if tErrorCode = "G12f.1" then G12f_1 = G12f_1 +  1; errorname.add("G12f.1"); errorcode.add(G12f_1); endif;
	if tErrorCode = "G12f.2" then G12f_2 = G12f_2 +  1; errorname.add("G12f.2"); errorcode.add(G12f_2); endif;
	if tErrorCode = "G12z.1" then G12z_1 = G12z_1 +  1; errorname.add("G12z.1"); errorcode.add(G12z_1); endif;
	if tErrorCode = "G12z.2" then G12z_2 = G12z_2 +  1; errorname.add("G12z.2"); errorcode.add(G12z_2); endif;
	if tErrorCode = "G12za.1" then G12za_1 = G12za_1 +  1; errorname.add("G12za.1"); errorcode.add(G12za_1); endif;
	if tErrorCode = "G13.1" then G13_1 = G13_1 +  1; errorname.add("G13.1"); errorcode.add(G13_1); endif;
	if tErrorCode = "G13.2" then G13_2 = G13_2 +  1; errorname.add("G13.2"); errorcode.add(G13_2); endif;
	if tErrorCode = "G13.3" then G13_3 = G13_3 +  1; errorname.add("G13.3"); errorcode.add(G13_3); endif;
	if tErrorCode = "G13.4" then G13_4 = G13_4 +  1; errorname.add("G13.4"); errorcode.add(G13_4); endif;
	if tErrorCode = "G14a.1" then G14a_1 = G14a_1 +  1; errorname.add("G14a.1"); errorcode.add(G14a_1); endif;
	if tErrorCode = "G14a.2" then G14a_2 = G14a_2 +  1; errorname.add("G14a.2"); errorcode.add(G14a_2); endif;
	if tErrorCode = "G14a.3" then G14a_3 = G14a_3 +  1; errorname.add("G14a.3"); errorcode.add(G14a_3); endif;
	if tErrorCode = "G14a.4" then G14a_4 = G14a_4 +  1; errorname.add("G14a.4"); errorcode.add(G14a_4); endif;
	if tErrorCode = "G14b.1" then G14b_1 = G14b_1 +  1; errorname.add("G14b.1"); errorcode.add(G14b_1); endif;
	if tErrorCode = "G14b.2" then G14b_2 = G14b_2 +  1; errorname.add("G14b.2"); errorcode.add(G14b_2); endif;
	if tErrorCode = "G14b.3" then G14b_3 = G14b_3 +  1; errorname.add("G14b.3"); errorcode.add(G14b_3); endif;
	if tErrorCode = "G14b.4" then G14b_4 = G14b_4 +  1; errorname.add("G14b.4"); errorcode.add(G14b_4); endif;
	if tErrorCode = "G14c.1" then G14c_1 = G14c_1 +  1; errorname.add("G14c.1"); errorcode.add(G14c_1); endif;
	if tErrorCode = "G14c.2" then G14c_2 = G14c_2 +  1; errorname.add("G14c.2"); errorcode.add(G14c_2); endif;
	if tErrorCode = "G14c.3" then G14c_3 = G14c_3 +  1; errorname.add("G14c.3"); errorcode.add(G14c_3); endif;
	if tErrorCode = "G14c.4" then G14c_4 = G14c_4 +  1; errorname.add("G14c.4"); errorcode.add(G14c_4); endif;
	if tErrorCode = "G14d.1" then G14d_1 = G14d_1 +  1; errorname.add("G14d.1"); errorcode.add(G14d_1); endif;
	if tErrorCode = "G14d.2" then G14d_2 = G14d_2 +  1; errorname.add("G14d.2"); errorcode.add(G14d_2); endif;
	if tErrorCode = "G14d.3" then G14d_3 = G14d_3 +  1; errorname.add("G14d.3"); errorcode.add(G14d_3); endif;
	if tErrorCode = "G14d.4" then G14d_4 = G14d_4 +  1; errorname.add("G14d.4"); errorcode.add(G14d_4); endif;
	if tErrorCode = "G14e.1" then G14e_1 = G14e_1 +  1; errorname.add("G14e.1"); errorcode.add(G14e_1); endif;
	if tErrorCode = "G14e.2" then G14e_2 = G14e_2 +  1; errorname.add("G14e.2"); errorcode.add(G14e_2); endif;
	if tErrorCode = "G14e.3" then G14e_3 = G14e_3 +  1; errorname.add("G14e.3"); errorcode.add(G14e_3); endif;
	if tErrorCode = "G14e.4" then G14e_4 = G14e_4 +  1; errorname.add("G14e.4"); errorcode.add(G14e_4); endif;
	if tErrorCode = "G14f.1" then G14f_1 = G14f_1 +  1; errorname.add("G14f.1"); errorcode.add(G14f_1); endif;
	if tErrorCode = "G14f.2" then G14f_2 = G14f_2 +  1; errorname.add("G14f.2"); errorcode.add(G14f_2); endif;
	if tErrorCode = "G14f.3" then G14f_3 = G14f_3 +  1; errorname.add("G14f.3"); errorcode.add(G14f_3); endif;
	if tErrorCode = "G14f.4" then G14f_4 = G14f_4 +  1; errorname.add("G14f.4"); errorcode.add(G14f_4); endif;
	if tErrorCode = "G14z.1" then G14z_1 = G14z_1 +  1; errorname.add("G14z.1"); errorcode.add(G14z_1); endif;
	if tErrorCode = "G14z.2" then G14z_2 = G14z_2 +  1; errorname.add("G14z.2"); errorcode.add(G14z_2); endif;
	if tErrorCode = "G14z.3" then G14z_3 = G14z_3 +  1; errorname.add("G14z.3"); errorcode.add(G14z_3); endif;
	if tErrorCode = "G14z.4" then G14z_4 = G14z_4 +  1; errorname.add("G14z.4"); errorcode.add(G14z_4); endif;
	if tErrorCode = "G14za.1" then G14za_1 = G14za_1 +  1; errorname.add("G14za.1"); errorcode.add(G14za_1); endif;
	if tErrorCode = "G15.1" then G15_1 = G15_1 +  1; errorname.add("G15.1"); errorcode.add(G15_1); endif;
	if tErrorCode = "G15.2" then G15_2 = G15_2 +  1; errorname.add("G15.2"); errorcode.add(G15_2); endif;
	if tErrorCode = "G15.3" then G15_3 = G15_3 +  1; errorname.add("G15.3"); errorcode.add(G15_3); endif;
	if tErrorCode = "G15.4" then G15_4 = G15_4 +  1; errorname.add("G15.4"); errorcode.add(G15_4); endif;
	if tErrorCode = "G16A.1" then G16A_1 = G16A_1 +  1; errorname.add("G16A.1"); errorcode.add(G16A_1); endif;
	if tErrorCode = "G16A.2" then G16A_2 = G16A_2 +  1; errorname.add("G16A.2"); errorcode.add(G16A_2); endif;
	if tErrorCode = "G16A.3" then G16A_3 = G16A_3 +  1; errorname.add("G16A.3"); errorcode.add(G16A_3); endif;
	if tErrorCode = "G16B.1" then G16B_1 = G16B_1 +  1; errorname.add("G16B.1"); errorcode.add(G16B_1); endif;
	if tErrorCode = "G16B.2" then G16B_2 = G16B_2 +  1; errorname.add("G16B.2"); errorcode.add(G16B_2); endif;
	if tErrorCode = "G16B.3" then G16B_3 = G16B_3 +  1; errorname.add("G16B.3"); errorcode.add(G16B_3); endif;
	if tErrorCode = "G16C.1" then G16C_1 = G16C_1 +  1; errorname.add("G16C.1"); errorcode.add(G16C_1); endif;
	if tErrorCode = "G16C.2" then G16C_2 = G16C_2 +  1; errorname.add("G16C.2"); errorcode.add(G16C_2); endif;
	if tErrorCode = "G16C.3" then G16C_3 = G16C_3 +  1; errorname.add("G16C.3"); errorcode.add(G16C_3); endif;
	if tErrorCode = "G16D.1" then G16D_1 = G16D_1 +  1; errorname.add("G16D.1"); errorcode.add(G16D_1); endif;
	if tErrorCode = "G16D.2" then G16D_2 = G16D_2 +  1; errorname.add("G16D.2"); errorcode.add(G16D_2); endif;
	if tErrorCode = "G16D.3" then G16D_3 = G16D_3 +  1; errorname.add("G16D.3"); errorcode.add(G16D_3); endif;
	if tErrorCode = "G16E.1" then G16E_1 = G16E_1 +  1; errorname.add("G16E.1"); errorcode.add(G16E_1); endif;
	if tErrorCode = "G16E.2" then G16E_2 = G16E_2 +  1; errorname.add("G16E.2"); errorcode.add(G16E_2); endif;
	if tErrorCode = "G16E.3" then G16E_3 = G16E_3 +  1; errorname.add("G16E.3"); errorcode.add(G16E_3); endif;
	if tErrorCode = "G17.1" then G17_1 = G17_1 +  1; errorname.add("G17.1"); errorcode.add(G17_1); endif;
	if tErrorCode = "G17.2" then G17_2 = G17_2 +  1; errorname.add("G17.2"); errorcode.add(G17_2); endif;
	if tErrorCode = "G17.3" then G17_3 = G17_3 +  1; errorname.add("G17.3"); errorcode.add(G17_3); endif;
	if tErrorCode = "G18.1" then G18_1 = G18_1 +  1; errorname.add("G18.1"); errorcode.add(G18_1); endif;
	if tErrorCode = "G18.2" then G18_2 = G18_2 +  1; errorname.add("G18.2"); errorcode.add(G18_2); endif;
	if tErrorCode = "G18.3" then G18_3 = G18_3 +  1; errorname.add("G18.3"); errorcode.add(G18_3); endif;
	if tErrorCode = "G18A.1" then G18A_1 = G18A_1 +  1; errorname.add("G18A.1"); errorcode.add(G18A_1); endif;
	if tErrorCode = "G18A.2" then G18A_2 = G18A_2 +  1; errorname.add("G18A.2"); errorcode.add(G18A_2); endif;
	if tErrorCode = "G18A.3" then G18A_3 = G18A_3 +  1; errorname.add("G18A.3"); errorcode.add(G18A_3); endif;
	if tErrorCode = "G19A.1" then G19A_1 = G19A_1 +  1; errorname.add("G19A.1"); errorcode.add(G19A_1); endif;
	if tErrorCode = "G19A.2" then G19A_2 = G19A_2 +  1; errorname.add("G19A.2"); errorcode.add(G19A_2); endif;
	if tErrorCode = "G19A.3" then G19A_3 = G19A_3 +  1; errorname.add("G19A.3"); errorcode.add(G19A_3); endif;
	if tErrorCode = "G19B.1" then G19B_1 = G19B_1 +  1; errorname.add("G19B.1"); errorcode.add(G19B_1); endif;
	if tErrorCode = "G19B.2" then G19B_2 = G19B_2 +  1; errorname.add("G19B.2"); errorcode.add(G19B_2); endif;
	if tErrorCode = "G19B.3" then G19B_3 = G19B_3 +  1; errorname.add("G19B.3"); errorcode.add(G19B_3); endif;
	if tErrorCode = "G19C.1" then G19C_1 = G19C_1 +  1; errorname.add("G19C.1"); errorcode.add(G19C_1); endif;
	if tErrorCode = "G19C.2" then G19C_2 = G19C_2 +  1; errorname.add("G19C.2"); errorcode.add(G19C_2); endif;
	if tErrorCode = "G19C.3" then G19C_3 = G19C_3 +  1; errorname.add("G19C.3"); errorcode.add(G19C_3); endif;
	if tErrorCode = "G19D.1" then G19D_1 = G19D_1 +  1; errorname.add("G19D.1"); errorcode.add(G19D_1); endif;
	if tErrorCode = "G19D.2" then G19D_2 = G19D_2 +  1; errorname.add("G19D.2"); errorcode.add(G19D_2); endif;
	if tErrorCode = "G19D.3" then G19D_3 = G19D_3 +  1; errorname.add("G19D.3"); errorcode.add(G19D_3); endif;
	if tErrorCode = "G19F.1" then G19F_1 = G19F_1 +  1; errorname.add("G19F.1"); errorcode.add(G19F_1); endif;
	if tErrorCode = "G19F.2" then G19F_2 = G19F_2 +  1; errorname.add("G19F.2"); errorcode.add(G19F_2); endif;
	if tErrorCode = "G19F.3" then G19F_3 = G19F_3 +  1; errorname.add("G19F.3"); errorcode.add(G19F_3); endif;
	if tErrorCode = "G19Z.1" then G19Z_1 = G19Z_1 +  1; errorname.add("G19Z.1"); errorcode.add(G19Z_1); endif;
	if tErrorCode = "G19Z.2" then G19Z_2 = G19Z_2 +  1; errorname.add("G19Z.2"); errorcode.add(G19Z_2); endif;
	if tErrorCode = "G19Z.3" then G19Z_3 = G19Z_3 +  1; errorname.add("G19Z.3"); errorcode.add(G19Z_3); endif;
	if tErrorCode = "G19ZA.1" then G19ZA_1 = G19ZA_1 +  1; errorname.add("G19ZA.1"); errorcode.add(G19ZA_1); endif;
	if tErrorCode = "G19ZA.2" then G19ZA_2 = G19ZA_2 +  1; errorname.add("G19ZA.2"); errorcode.add(G19ZA_2); endif;
	if tErrorCode = "G19ZA.3" then G19ZA_3 = G19ZA_3 +  1; errorname.add("G19ZA.3"); errorcode.add(G19ZA_3); endif;
	if tErrorCode = "G20.1" then G20_1 = G20_1 +  1; errorname.add("G20.1"); errorcode.add(G20_1); endif;
	if tErrorCode = "G20.2" then G20_2 = G20_2 +  1; errorname.add("G20.2"); errorcode.add(G20_2); endif;
	if tErrorCode = "G20.3" then G20_3 = G20_3 +  1; errorname.add("G20.3"); errorcode.add(G20_3); endif;
	if tErrorCode = "G21.1" then G21_1 = G21_1 +  1; errorname.add("G21.1"); errorcode.add(G21_1); endif;
	if tErrorCode = "G21.2" then G21_2 = G21_2 +  1; errorname.add("G21.2"); errorcode.add(G21_2); endif;
	if tErrorCode = "G21.3" then G21_3 = G21_3 +  1; errorname.add("G21.3"); errorcode.add(G21_3); endif;
	if tErrorCode = "G21A.1" then G21A_1 = G21A_1 +  1; errorname.add("G21A.1"); errorcode.add(G21A_1); endif;
	if tErrorCode = "G21A.2" then G21A_2 = G21A_2 +  1; errorname.add("G21A.2"); errorcode.add(G21A_2); endif;
	if tErrorCode = "G21A.3" then G21A_3 = G21A_3 +  1; errorname.add("G21A.3"); errorcode.add(G21A_3); endif;
	if tErrorCode = "G22.1" then G22_1 = G22_1 +  1; errorname.add("G22.1"); errorcode.add(G22_1); endif;
	if tErrorCode = "G22.2" then G22_2 = G22_2 +  1; errorname.add("G22.2"); errorcode.add(G22_2); endif;
	if tErrorCode = "G22.3" then G22_3 = G22_3 +  1; errorname.add("G22.3"); errorcode.add(G22_3); endif;
	if tErrorCode = "G23.1" then G23_1 = G23_1 +  1; errorname.add("G23.1"); errorcode.add(G23_1); endif;
	if tErrorCode = "G23.2" then G23_2 = G23_2 +  1; errorname.add("G23.2"); errorcode.add(G23_2); endif;
	if tErrorCode = "G23.3" then G23_3 = G23_3 +  1; errorname.add("G23.3"); errorcode.add(G23_3); endif;
	if tErrorCode = "G24.1" then G24_1 = G24_1 +  1; errorname.add("G24.1"); errorcode.add(G24_1); endif;
	if tErrorCode = "G24.2" then G24_2 = G24_2 +  1; errorname.add("G24.2"); errorcode.add(G24_2); endif;
	
	if tErrorCode = "H01.1" then H01_1 = H01_1 +  1; errorname.add("H01.1"); errorcode.add(H01_1); endif;
	if tErrorCode = "H01.2" then H01_2 = H01_2 +  1; errorname.add("H01.2"); errorcode.add(H01_2); endif;
	if tErrorCode = "H02A.1" then H02A_1 = H02A_1 +  1; errorname.add("H02A.1"); errorcode.add(H02A_1); endif;
	if tErrorCode = "H02B.1" then H02B_1 = H02B_1 +  1; errorname.add("H02B.1"); errorcode.add(H02B_1); endif;
	if tErrorCode = "H02C.1" then H02C_1 = H02C_1 +  1; errorname.add("H02C.1"); errorcode.add(H02C_1); endif;
	if tErrorCode = "H03D.1" then H03D_1 = H03D_1 +  1; errorname.add("H03D.1"); errorcode.add(H03D_1); endif;
	if tErrorCode = "H03E.1" then H03E_1 = H03E_1 +  1; errorname.add("H03E.1"); errorcode.add(H03E_1); endif;
	if tErrorCode = "H03F.1" then H03F_1 = H03F_1 +  1; errorname.add("H03F.1"); errorcode.add(H03F_1); endif;
	if tErrorCode = "H03G.1" then H03G_1 = H03G_1 +  1; errorname.add("H03G.1"); errorcode.add(H03G_1); endif;
	if tErrorCode = "H03H.1" then H03H_1 = H03H_1 +  1; errorname.add("H03H.1"); errorcode.add(H03H_1); endif;
	if tErrorCode = "H03I.1" then H03I_1 = H03I_1 +  1; errorname.add("H03I.1"); errorcode.add(H03I_1); endif;
	if tErrorCode = "H03J.1" then H03J_1 = H03J_1 +  1; errorname.add("H03J.1"); errorcode.add(H03J_1); endif;
	if tErrorCode = "H03K.1" then H03K_1 = H03K_1 +  1; errorname.add("H03K.1"); errorcode.add(H03K_1); endif;
	if tErrorCode = "H03L.1" then H03L_1 = H03L_1 +  1; errorname.add("H03L.1"); errorcode.add(H03L_1); endif;
	if tErrorCode = "H03M.1" then H03M_1 = H03M_1 +  1; errorname.add("H03M.1"); errorcode.add(H03M_1); endif;
	if tErrorCode = "H03N.1" then H03N_1 = H03N_1 +  1; errorname.add("H03N.1"); errorcode.add(H03N_1); endif;
	if tErrorCode = "H03O.1" then H03O_1 = H03O_1 +  1; errorname.add("H03O.1"); errorcode.add(H03O_1); endif;
	if tErrorCode = "H03P.1" then H03P_1 = H03P_1 +  1; errorname.add("H03P.1"); errorcode.add(H03P_1); endif;
	if tErrorCode = "H03Z.1" then H03Z_1 = H03Z_1 +  1; errorname.add("H03Z.1"); errorcode.add(H03Z_1); endif;
	if tErrorCode = "H03ZA.1" then H03ZA_1 = H03ZA_1 +  1; errorname.add("H03ZA.1"); errorcode.add(H03ZA_1); endif;
	if tErrorCode = "H03ZN.1" then H03ZN_1 = H03ZN_1 +  1; errorname.add("H03ZN.1"); errorcode.add(H03ZN_1); endif;
	if tErrorCode = "H04.1" then H04_1 = H04_1 +  1; errorname.add("H04.1"); errorcode.add(H04_1); endif;
	if tErrorCode = "H04.2" then H04_2 = H04_2 +  1; errorname.add("H04.2"); errorcode.add(H04_2); endif;
	if tErrorCode = "H05.1" then H05_1 = H05_1 +  1; errorname.add("H05.1"); errorcode.add(H05_1); endif;
	if tErrorCode = "H06.1" then H06_1 = H06_1 +  1; errorname.add("H06.1"); errorcode.add(H06_1); endif;

	if tErrorCode = "I01A.1" then I01A_1 = I01A_1 +  1; errorname.add("I01A.1"); errorcode.add(I01A_1); endif;
	if tErrorCode = "I01A.2" then I01A_2 = I01A_2 +  1; errorname.add("I01A.2"); errorcode.add(I01A_2); endif;
	if tErrorCode = "I01A.3" then I01A_3 = I01A_3 +  1; errorname.add("I01A.3"); errorcode.add(I01A_3); endif;
	if tErrorCode = "I01B.1" then I01B_1 = I01B_1 +  1; errorname.add("I01B.1"); errorcode.add(I01B_1); endif;
	if tErrorCode = "I01B.2" then I01B_2 = I01B_2 +  1; errorname.add("I01B.2"); errorcode.add(I01B_2); endif;
	if tErrorCode = "I01B.3" then I01B_3 = I01B_3 +  1; errorname.add("I01B.3"); errorcode.add(I01B_3); endif;
	if tErrorCode = "I01C.1" then I01C_1 = I01C_1 +  1; errorname.add("I01C.1"); errorcode.add(I01C_1); endif;
	if tErrorCode = "I01C.2" then I01C_2 = I01C_2 +  1; errorname.add("I01C.2"); errorcode.add(I01C_2); endif;
	if tErrorCode = "I01C.3" then I01C_3 = I01C_3 +  1; errorname.add("I01C.3"); errorcode.add(I01C_3); endif;
	if tErrorCode = "I01D.1" then I01D_1 = I01D_1 +  1; errorname.add("I01D.1"); errorcode.add(I01D_1); endif;
	if tErrorCode = "I01D.2" then I01D_2 = I01D_2 +  1; errorname.add("I01D.2"); errorcode.add(I01D_2); endif;
	if tErrorCode = "I01D.3" then I01D_3 = I01D_3 +  1; errorname.add("I01D.3"); errorcode.add(I01D_3); endif;
	if tErrorCode = "I01E.1" then I01E_1 = I01E_1 +  1; errorname.add("I01E.1"); errorcode.add(I01E_1); endif;
	if tErrorCode = "I01E.2" then I01E_2 = I01E_2 +  1; errorname.add("I01E.2"); errorcode.add(I01E_2); endif;
	if tErrorCode = "I01E.3" then I01E_3 = I01E_3 +  1; errorname.add("I01E.3"); errorcode.add(I01E_3); endif;
	if tErrorCode = "I01F.1" then I01F_1 = I01F_1 +  1; errorname.add("I01F.1"); errorcode.add(I01F_1); endif;
	if tErrorCode = "I01F.2" then I01F_2 = I01F_2 +  1; errorname.add("I01F.2"); errorcode.add(I01F_2); endif;
	if tErrorCode = "I01F.3" then I01F_3 = I01F_3 +  1; errorname.add("I01F.3"); errorcode.add(I01F_3); endif;
	if tErrorCode = "I01G.1" then I01G_1 = I01G_1 +  1; errorname.add("I01G.1"); errorcode.add(I01G_1); endif;
	if tErrorCode = "I01G.2" then I01G_2 = I01G_2 +  1; errorname.add("I01G.2"); errorcode.add(I01G_2); endif;
	if tErrorCode = "I01G.3" then I01G_3 = I01G_3 +  1; errorname.add("I01G.3"); errorcode.add(I01G_3); endif;
	if tErrorCode = "I01H.1" then I01H_1 = I01H_1 +  1; errorname.add("I01H.1"); errorcode.add(I01H_1); endif;
	if tErrorCode = "I01H.2" then I01H_2 = I01H_2 +  1; errorname.add("I01H.2"); errorcode.add(I01H_2); endif;
	if tErrorCode = "I01H.3" then I01H_3 = I01H_3 +  1; errorname.add("I01H.3"); errorcode.add(I01H_3); endif;
	if tErrorCode = "I01I.1" then I01I_1 = I01I_1 +  1; errorname.add("I01I.1"); errorcode.add(I01I_1); endif;
	if tErrorCode = "I01I.2" then I01I_2 = I01I_2 +  1; errorname.add("I01I.2"); errorcode.add(I01I_2); endif;
	if tErrorCode = "I01I.3" then I01I_3 = I01I_3 +  1; errorname.add("I01I.3"); errorcode.add(I01I_3); endif;
	if tErrorCode = "I01J.1" then I01J_1 = I01J_1 +  1; errorname.add("I01J.1"); errorcode.add(I01J_1); endif;
	if tErrorCode = "I01J.2" then I01J_2 = I01J_2 +  1; errorname.add("I01J.2"); errorcode.add(I01J_2); endif;
	if tErrorCode = "I01J.3" then I01J_3 = I01J_3 +  1; errorname.add("I01J.3"); errorcode.add(I01J_3); endif;
	if tErrorCode = "I01K.1" then I01K_1 = I01K_1 +  1; errorname.add("I01K.1"); errorcode.add(I01K_1); endif;
	if tErrorCode = "I01K.2" then I01K_2 = I01K_2 +  1; errorname.add("I01K.2"); errorcode.add(I01K_2); endif;
	if tErrorCode = "I01K.3" then I01K_3 = I01K_3 +  1; errorname.add("I01K.3"); errorcode.add(I01K_3); endif;
	if tErrorCode = "I01L.1" then I01L_1 = I01L_1 +  1; errorname.add("I01L.1"); errorcode.add(I01L_1); endif;
	if tErrorCode = "I01L.2" then I01L_2 = I01L_2 +  1; errorname.add("I01L.2"); errorcode.add(I01L_2); endif;
	if tErrorCode = "I01L.3" then I01L_3 = I01L_3 +  1; errorname.add("I01L.3"); errorcode.add(I01L_3); endif;
	if tErrorCode = "I01M.1" then I01M_1 = I01M_1 +  1; errorname.add("I01M.1"); errorcode.add(I01M_1); endif;
	if tErrorCode = "I01M.2" then I01M_2 = I01M_2 +  1; errorname.add("I01M.2"); errorcode.add(I01M_2); endif;
	if tErrorCode = "I01M.3" then I01M_3 = I01M_3 +  1; errorname.add("I01M.3"); errorcode.add(I01M_3); endif;
	if tErrorCode = "I01N.1" then I01N_1 = I01N_1 +  1; errorname.add("I01N.1"); errorcode.add(I01N_1); endif;
	if tErrorCode = "I01N.2" then I01N_2 = I01N_2 +  1; errorname.add("I01N.2"); errorcode.add(I01N_2); endif;
	if tErrorCode = "I01N.3" then I01N_3 = I01N_3 +  1; errorname.add("I01N.3"); errorcode.add(I01N_3); endif;
	if tErrorCode = "I02.1" then I02_1 = I02_1 +  1; errorname.add("I02.1"); errorcode.add(I02_1); endif;

end;
function clear_data()
		
	TotErrors = 0; countIntSummary = 0;	CountA = 0;	CountB = 0;	CountC = 0;	CountD = 0;	CountE = 0;	CountF = 0;	CountG = 0;	CountH = 0;	CountI = 0;	CountJ = 0;	CountK = 0;	CountL = 0;
	tote = 0 ; countInd_E_Int = 0;	countInd_E_A = 0;	countInd_E_B = 0;	countInd_E_C = 0;	countInd_E_D = 0;	countInd_E_E = 0;	countInd_E_F = 0;	countInd_E_G = 0;	countInd_E_H = 0;	countInd_E_I = 0;	countInd_E_J = 0;	countInd_E_K = 0;	countInd_E_L = 0;	countInd_E_M = 0;	countInd_E_N = 0;	countInd_E_O = 0;	countInd_E_P = 0;	countInd_E_Q = 0;	countInd_E_R = 0;	countInd_E_S = 0;
	totw = 0; countInd_W_Int = 0;	countInd_W_A = 0;	countInd_W_B = 0;	countInd_W_C = 0;	countInd_W_D = 0;	countInd_W_E = 0;	countInd_W_F = 0;	countInd_W_G = 0;	countInd_W_H = 0;	countInd_W_I = 0;	countInd_W_J = 0;	countInd_W_K = 0;	countInd_W_L = 0;	countInd_W_M = 0;	countInd_W_N = 0;	countInd_W_O = 0;	countInd_W_P = 0;	countInd_W_Q = 0;	countInd_W_R = 0;	countInd_W_S = 0;
	
	
	display_tInd.clear();
	display_tLno.clear();
	display_tDispVar.clear();
	display_tDataItem1.clear();
	display_tDataItem2.clear();
	display_tErrorcode.clear();
	display_tErrmsg.clear();
	
	
end;

function writepff()
	//setfile(forApp,".\openQ-modify.pff",create);
	setfile(forApp,"..\openQ-modify.pff",create);
	string datafile = concat(edit("99",visualvalue(REG_PSGC)), edit("99",visualvalue(PROV_PSGC)),edit("99",visualvalue(CITY_MUN_PSGC)), edit("999",visualvalue(BRGY_PSGC)), edit("999999",visualvalue(EAN)),edit("9999",visualvalue(BSN)),edit("9999",visualvalue(HUSN)),edit("9999",visualvalue(HSN)));
	filewrite(forApp,maketext("\n"));
	filewrite(forApp,maketext("[DataEntryInit]"));
	filewrite(forApp,maketext("AutoAdd=No"));
	filewrite(forApp,maketext("StartMode=Modify"));
	filewrite(forApp,maketext("Lock=Add,Delete,Verify"));
	filewrite(forApp,maketext("Key=%s",datafile));
	filewrite(forApp,maketext("\n"));
	filewrite(forApp,maketext("[Files]"));
	//filewrite(forApp,maketext("Application=.\HPQF2.ent"));
	filewrite(forApp,maketext("Application=..\HPQF2.ent"));
	filewrite(forApp,maketext("InputData=|type=None"));
	//filewrite(forApp,maketext("Paradata=.\HPQF2.cslog"));
	filewrite(forApp,maketext("Paradata=..\HPQF2.cslog"));
	filewrite(forApp,maketext("\n"));
	filewrite(forApp,maketext("[ExternalFiles]"));
	filewrite(forApp,maketext("\n"));
	//filewrite(forApp,maketext("HPQF2=.\Data\HPQ\H%s.csdbe",datafile));	
	filewrite(forApp,maketext("HPQF2=..\Data\HPQ\H%s.csdbe",datafile));	
	filewrite(forApp,maketext("\n"));
	filewrite(forApp,maketext("[Parameters]"));
	filewrite(forApp,maketext("REG_PSGC=%s",edit("99",visualvalue(REG_PSGC))));
	filewrite(forApp,maketext("PROV_PSGC=%s",edit("99",visualvalue(PROV_PSGC))));
	filewrite(forApp,maketext("CITY_MUN_PSGC=%s",edit("99",visualvalue(CITY_MUN_PSGC))));
	filewrite(forApp,maketext("BRGY_PSGC=%s",edit("999",visualvalue(BRGY_PSGC))));
	filewrite(forApp,maketext("EAN=%s",edit("999999",visualvalue(EAN))));
	filewrite(forApp,maketext("BSN=%s",edit("9999",visualvalue(BSN))));
	filewrite(forApp,maketext("HSN=%s",edit("9999",visualvalue(HSN))));
	filewrite(forApp,maketext("HUSN=%s",edit("9999",visualvalue(HUSN))));	
	forApp.close();
end;


function scips(string data_item)
	writepff();
	execpff(".\openQ-modify.pff",stop);
end;

function valSecM(String sTf, tf, String sTf1, intf, String sTf2) //[x]
	if special(tf) then
		dispError("E","00",maketext("%v = BLANK", sTf), sTf1 ,"This item must not be blank. Please input answer.", sTf,"--", "M");
	elseif intf then
		dispError("E","00",maketext("%v = %d", sTf, tf), sTf2,"You have entered an invalid answer. Please verify and correct entry.", sTf,"--", "M");
	endif;
end;

function DataValidation_fcn()
	clear_data();
	filedelete("openV.pff");
	alpha (50) nameHH;
	string HHage, TempStr, datafile, indicator;
	numeric HHhead = 0, NFH = 0, isValid, TempCode, ageHH, sexCountF,sexCountM,sexCountMF, InvalidSex, vHSN = 0;
	list count_nuclearfam;


//============= INTERVIEW RECORD VALIDATION ==================
	
	
	do varying numeric countvisit = 1 while countvisit <= soccurs(Interview_record)
		
		//VISIT NUMBER	
		if visualvalue(visit_no(countvisit))= notappl then
			//goTo('visit_no', 'visit_no');	
			dispError("E","00",maketext("Visit Number = Blank"),"Geo1.1", "Visit Number must not be blank.","Visit_no","--", "IntSummary");
		elseif not visualvalue(visit_no(countvisit)) in 1:9 then
			dispError("E","00",maketext("Visit Number = %d",visit_no(countvisit)),"Geo1.2","Choose from the given categories (1 to 9).", "Visit_no","--", "IntSummary");
		endif;		
		
		if visit_no(countvisit) <> notappl then
		//DATE OF VISIT			
			if visualvalue(DATEOFVISIT(countvisit)) = notappl then
				dispError("E","00",maketext("Date of Visit = Blank"),"Geo1.3","Date must not be empty.", "DATEOFVISIT","--", "IntSummary");
			elseif visualvalue(DATEOFVISIT(countvisit)) < 03012022  then
				dispError("E","00",maketext("Date of Visit = %d",DATEOFVISIT(countvisit)),"Geo1.6","Invalid date, edit entry.", "DATEOFVISIT","--", "IntSummary");
			endif;
			
			
		//TIME BEGAN
			if visualvalue(time_start(countvisit)) = notappl then
				dispError("E","00",maketext("Time Began = Blank"),"Geo1.4","Invalid time, edit entry.", "time_start","--", "IntSummary");
			endif;
	
		//TIME ENDED
			if visualvalue(time_end(countvisit)) = notappl then
				dispError("E","00",maketext("Time Ended = Blank"),"Geo1.5","Invalid time, edit entry.", "time_end","--", "IntSummary");
			elseif visualvalue(time_end(countvisit)) < visualvalue(time_start(countvisit)) then
				dispError("E","00",maketext("Time Ended = %d < Time Started = %d",time_end(countvisit),time_start(countvisit)),"Geo1.6","Invalid time, edit entry.", "time_end","time_start", "IntSummary");
			endif;
		
			//APPOINTMENT DATE
			if visualvalue(RES_VISIT) <> 1 then
			if visualvalue(appoint_date(countvisit)) = notappl then
				dispError("E","00",maketext("Appointment Date = Blank"),"Geo3.1","Geo 3.1 Choose appointment date.", "appoint_date","--", "IntSummary");
			endif;
			if visualvalue(appoint_time(countvisit)) = notappl then
				dispError("E","00",maketext("Appointment Time = Blank"),"Geo3.2","Geo 3.2 Choose appointment time.", "appoint_time","--", "IntSummary");
			endif;
			endif;
			
		
		//RESULT OF VISIT
			//errmsg(visualvalue(res_visit(countvisit)));
			if visualvalue(res_visit(countvisit)) = notappl then
				dispError("E","00",maketext("Result of visit = Blank"),"Geo6.1","Result of visit must not be blank.", "res_visit","--", "IntSummary");
			elseif not visualvalue(res_visit(countvisit)) in 1:9 then
				dispError("E","00",maketext("Result of visit = %d",visualvalue(res_visit(countvisit))),"Geo6.2","Result of visit: Choose from the given categories (1-6).", "res_visit","--", "IntSummary");
			endif;
		endif;
	enddo;
	
	//NUMBER OF VISIT
		if visualvalue(number_visit) = notappl then
			dispError("E","00",maketext("Number of visit/s made = Blank"),"Geo5.1","Number of visit/s must not be blank.", "number_visit","--", "IntSummary");
		endif;
		if visualvalue(number_visit) <> count(visualvalue(visit_no)) then
			dispError("E","00",maketext("Number of visit/s made = %d <> Visit Number = %d",visualvalue(number_visit),count(visualvalue(visit_no))),"Geo5.2","Number of visit/s and Visit Number are not equal.", "number_visit","--", "IntSummary");
		endif;
	
	//MODE OF DATA COLLECTION
		if visualvalue(mode) = notappl then
			dispError("E","00",maketext("Mode of Data Collection = %d",visualvalue(mode)),"Geo7.1","Mode of Data Collection must not be blank.", "mode","--", "IntSummary");
		elseif not visualvalue(mode) in 1:4 then
			dispError("E","00",maketext("Mode of Data Collection = %d",visualvalue(mode)),"Geo7.2","Mode of Data Collection: Choose from the given categories (1:4).", "mode","--", "IntSummary");
		endif;
	//ADDRESS
		if fno = notappl then
			dispError("E","00",maketext("Floor No. = Blank"),"Geo2.1","Floor No. must not be blank.", "fno","--", "IntSummary");
		endif;
		if hbn = notappl then
			dispError("E","00",maketext("House/Building Number = Blank"),"Geo2.2","House/Building Number must not be blank.", "hbn","--", "IntSummary");
		endif;
		if nbln = "" then
			dispError("E","00",maketext("Name Block/Lot No = Blank"),"Geo2.3","Name Block/Lot No must not be blank or should be N/A.", "nbln","--", "IntSummary");
		endif;
		if STRTNME = "" then
			dispError("E","00",maketext("Street Name = %s",STRTNME),"Geo2.4","Street Name must not be blank or should be N/A.", "strtnme","--", "IntSummary");
		endif;
		{if subvill = "" then
			dispError("E","00",maketext("Subdivision/Village = Blank"),"Geo2.5","Subdivision/Village must not be blank or should be N/A.", "subvill","--", "IntSummary");
		endif;}
	//AGREE INTERVIEW
		if visualvalue(agree_int) = notappl then
			dispError("E","00",maketext("Agree to Participate in Int = Blank"),"Geo2.6","Agree to Participate in Interview must not be blank.", "agree_int","--", "IntSummary");
		elseif not visualvalue(agree_int) in 1:2 then
			dispError("E","00",maketext("Agree to Participate in Int = %d",agree_int),"Geo2.7","Agree to Participate in Interview is invalid.", "agree_int","--", "IntSummary");
		endif;
	
	//NAME OF HOUSEHOLD HEAD
		if lstname = "" then
			dispError("E","00",maketext("Household Head Lastname = Blank"),"Geo4.1","Enter Last Name of the Household Head.", "lstname","--", "IntSummary");
		endif;
		if firstname = "" then
			dispError("E","00",maketext("Household Head Firstname = Blank"),"Geo4.2","Enter First Name of the Household Head.", "firstname","--", "IntSummary");
		endif;
		if midname = "" then
			dispError("E","00",maketext("Household Head Middlename = Blank"),"Geo4.3","Enter Middle Name of the Household Head.", "midname","--", "IntSummary");
		endif;
	//WAIVER
		if waiver = notappl then
			dispError("E","00",maketext("Form 3 Waiver = Blank"),"Geo8.1","Ethnicity must not be blank.", "waiver","--", "IntSummary");
		elseif not waiver in 1:2 then
			dispError("E","00",maketext("Form 3 Waiver = %d",waiver),"Geo8.2","Ethnicity: choose from the given categories (1-2).", "waiver","--", "IntSummary");
		endif;
	
		
	//RESULT OF FINAL VISIT
		
		if finalresultvisit = notappl then
			dispError("E","00",maketext("Result of Final Visit = blank"),"Geo6.3","Result of visit must not be blank.", "finalresultvisit","--", "IntSummary");			 
		endif;
		

	//GEOTAGGED X/Y
		if geotag = notappl then
			dispError("E","00",maketext("Geotagged X/Y Coor = Blank"),"Geo9.1","Geotagged X/Y coordinated must not be blank.", "geotag","--", "IntSummary");
		elseif not geotag in 1:2 then
			dispError("E","00",maketext("Geotagged X/Y Coor = %d",geotag),"Geo9.2","Geotagged X/Y coordinated: Choose from the given categories (1-2).", "geotag","--", "IntSummary");
		endif;
	
	if visualvalue(AGREE_INT) = 1 then
	//============= SECTION A ==================
	do varying numeric i = 1 while i <= soccurs(SECTION_A)
		
		if LNO(i) <> notappl then
			display_lno.add(LNO(i));
			if LNO(i) = 01 then
				indicator = "Head";
			else
				indicator = "Member";
			endif;
		//LNO 			
			if not visualvalue(LNO(i)) in 1:35 then
				dispError("E",edit("99",i),maketext("Line Number = %d",LNO(i)),"A01.1","Line number is out of range.", "LNO","--", "A");
			endif;			
		//HOUSEHOLD NAME
			if A01_LSTNAME(i) = "" then
				dispError("E",edit("99",i),maketext("HH Head Lastname = Blank"),"A01.2",maketext("Last name of Household %s must not be blank.",indicator), "A01_lstname","--", "A");
			endif;
			if A01_FIRSTNAME(i) = "" then
				dispError("E",edit("99",i),maketext("HH Head Firstname = Blank"),"A01.3",maketext("First name of Household %s must not be blank.",indicator), "A01_firstname","--", "A");
			endif;
			if A01_MIDNAME(i) = "" then
				dispError("E",edit("99",i),maketext("HH Head Middlename = Blank"),"A01.4",maketext("Middle name of Household %s must not be blank.",indicator), "A01_midname","--", "A");
			endif;
		//02 RELATIONSHIP TO HH HEAD
			if A02_RELTOHHH(i) = notappl then
				dispError("E",edit("99",i),maketext("Rel to HHH = Blank"),"A02.1","Relationship to the Household Head must not be blank.", "A02_reltoHHH","--", "A");
			elseif LNO(i) = 1 and not A02_RELTOHHH(i) in 01 then
				dispError("E",edit("99",i),maketext("Rel to HHH = %d",A02_RELTOHHH(i)),"A02.2","Relationship to the Household Head: Choose from the given categories (01:26).", "A02_reltoHHH","--", "A");
			endif;
		//03 NUCLEAR FAMILY
			if A02_RELTOHHH(i) in 01 and not A03_NUCLEAR(i) in 1 then
				dispError("E",edit("99",i),maketext("Relationship to HH = %d ,HH Head Nuclear = %d",A02_RELTOHHH(i), A03_NUCLEAR(i)),"A03.1","HH Head must belong to the first nuclear family.", "A02_reltohhh","A03_nuclear", "A");
			endif;
			count_nuclearfam.add(A03_NUCLEAR(i)); //adding nuclear farm in the array
			
		//04 RELATIONSHIP TO HEAD OF NUCLEAR			
			if A04_RELTONUCFH(i) = notappl then
				dispError("E",edit("99",i),maketext("Rel to HH Head of Nuc Fam = Blank"),"A04.1","Relationship to the head of the nuclear family must not be blank.", "A04_reltonucfh","--", "A");
			elseif not A04_RELTONUCFH(i) in 0:9 then
				dispError("E",edit("99",i),maketext("Rel to HH Head of Nuc Fam = %d",A04_RELTONUCFH(i)),"A04.2","Relationship to the head of the nuclear family: Choose from the given categories (00-09).", "A04_reltonucfh","--", "A");
			endif;
			if A04_RELTONUCFH(i) in 0,1 and not A03_NUCLEAR(i) in 1 then
				dispError("E",edit("99",i),maketext("Rel to HH Head of Nuc Fam = %d, Nuc Fam = %d",A04_RELTONUCFH(i),A03_NUCLEAR(i) ),"A04.1","Household head must belong to the first nuclear family.", "A04_reltonucfh","A03_nuclear", "A");
			endif;
	
	
		//05 MALE OR FEMALE
			if A05_SEX(i) = notappl then
				dispError("E",edit("99",i),maketext("Sex = Blank"),"A05.1","Sex must not be blank.", "A05_SEX","--", "A");
			elseif not A05_SEX(i) in 1:2 then
				dispError("E",edit("99",i),maketext("Sex = %d",A05_SEX(i)),"A05.2","Sex: choose from the categories (01:02).", "A05_SEX","--", "A");
			endif;
		//06 DATE OF BIRTH
			if A06_BIRTHDAY(i) = notappl then
				dispError("E",edit("99",i),maketext("Birthdate = Blank"),"A06.1","Birthdate must not be blank.", "A06_birthday","--", "A");
			elseif tonumber(edit("99999999",visualvalue(A06_BIRTHDAY(i)))[1:2]) > 12 or tonumber(edit("99999999",visualvalue(A06_BIRTHDAY(i)))[3:2]) > 31 and tonumber(edit("99999999",A06_BIRTHDAY(i))[5:4]) < 1897 then
				dispError("E",edit("99",i),maketext("Birthdate = %d",A06_BIRTHDAY(i)),"A06.2","Invalid date of birth.", "A06_birthday","--", "A");
			endif;
		//07 AGE
			if A07_AGE(i) = notappl then
				dispError("E",edit("99",i),maketext("Age = Blank"),"A07.2","Age must not be blank.", "A07_age","--", "A");
			elseif A07_AGE(i) < 15 and A02_RELTOHHH(i) = 1 then
				dispError("E",edit("99",i),maketext("Age = %d", A07_AGE(i)),"A07.1","The HH head must be 15 years old and above.", "A07_age","A02_RELtoHHH", "A");
			endif;
		//08 BIRTH REGISTERED
			if A08_BIRTHREG(i) = notappl then
				dispError("E",edit("99",i),maketext("BIRTH REG = Blank"),"A08.1","Registration of birth certificate must not be blank.", "A08_birthreg","--", "A");
			elseif not A08_BIRTHREG(i) in 1,2,8 then
				dispError("E",edit("99",i),maketext("BIRTH REG = %d",A08_BIRTHREG(i)),"A08.2","Registration of birth certificate: choose from the categories (01:02).", "A08_birthreg","--", "A");
			endif;
		//09 MARITAL STATUS
			if (A09_MSTAT(i)) = notappl then
				dispError("E",edit("99",i),maketext("Marital Status = Blank"),"A09.1","Marital status must not be blank.", "A09_mstat","--", "A");
			elseif not (A09_MSTAT(i)) in 1:8 then
				dispError("E",edit("99",i),maketext("Marital Status = Blank"),"A09.2","Marital status: choose from the given categories (1-9).", "A09_mstat","--", "A");
			endif;
			if (A07_AGE(i)) < 10 and visualvalue(A09_MSTAT(i)) <> 1 then
				dispError("E",edit("99",i),maketext("Age = %d, Marital Status = %d",A07_AGE(i), A09_MSTAT(i) ),"A09.3","HH member below 10 years old must be single.", "A09_mstat","--", "A");
			endif;
		//10 ETHNICITY
			
			if (A10_ETHNIC(i)) = notappl then
				dispError("E",edit("99",i),maketext("Ethnicity = Blank"),"A10.1","Ethnicity must not be blank.", "A10_ethnic","--", "A");
			elseif not (A10_ETHNIC(i))  then
				dispError("E",edit("99",i),maketext("Ethnicity = %d",A10_ETHNIC(i)),"A10.2","Ethnicity: choose from the given categories (1-9).", "A10_ethnic","--", "A");
			endif;
			if (A10_ETHNIC(i)) in 288,289 and A10A_ETHNIC(i) = "" then
				dispError("E",edit("99",i),maketext("Ethnicity = %d ,Ethnicity SPECIFY = Blank",A10_ETHNIC(i)),"A10A.1","Ethnicity Specify must not be blank.", "A10_ethnic","--", "A");
			endif;
		//11 RELIGION
			if (A11_RELIGION(i)) = notappl then
				dispError("E",edit("99",i),maketext("Religious affiliation = Blank"),"A11.1","Religious affiliation must not be blank.", "A11_religion","--", "A");
			elseif not invalueset(A11_RELIGION(i)) then
				dispError("E",edit("99",i),maketext("Religious affiliation = %d",A11_RELIGION(i)),"A11.2","Religious affiliation: choose from the given categories.", "A11_religion","--", "A");
			endif;
			if (A11_RELIGION(i)) in 123:127 and A11_RELIGION_OTH(i) = "" then
				dispError("E",edit("99",i),maketext("Religious affiliation = %d ,Religious affiliation SPECIFY = Blank",A11_RELIGION(i)),"A11A.1","Religious affiliation Specify must not be blank.", "A11_religion","A11_religion_oth", "A");
			endif;
		//12 NATIONAL ID/PHILID
			if (A12_PHILID(i)) = notappl then
				dispError("E",edit("99",i),maketext("PhilID Issuance = Blank"),"A12.1","Issuance of Phil ID must not be blank.", "A12_philid","--", "A");
			elseif not (A12_PHILID(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("PhilID Issuance  = %d",A12_PHILID(i)),"A12.2","Issuance of Phil ID: choose from the given categories.", "A12_philid","--", "A");
			endif;
		//13 PCN
			if (A13_PCN(i)) = notappl then
				dispError("E",edit("99",i),maketext("PCN = Blank"),"A13.1","Issuance of Phil ID must not be blank.", "A13_pcn","--", "A");
			elseif not (A13_PCN(i)) then
				dispError("E",edit("99",i),maketext("PCN  = %d",A13_PCN(i)),"A13.2","Issuance of Phil ID: choose from the given categories.", "A13_pcn","--", "A");
			endif;
		//13A PCN 
			if A13A_PCN(i) = "" and (A13_PCN(i)) = 1 then
				dispError("E",edit("99",i),maketext("PCN = Blank"),"A13A.1","PCN must not be blank.", "A13_pcn","A13A_PCN", "A");
			endif;
		//14 STEP 2 NATIONAL ID
			if (A14_STEP2(i)) = notappl then
				dispError("E",edit("99",i),maketext("PHILID STEP 2 = Blank"),"A14.1","Step 2 Registration for the National ID/PhilID must not be blank.", "A14_step2","--", "A");
			elseif not (A14_STEP2(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("PHILID STEP 2 = %d",A14_STEP2(i)),"A14.2","Step 2 Registration for the National ID/PhilID: choose from the given categories.", "A14_step2","--", "A");
			endif;
		//15 LGU ID
			if (A15_LGUID(i)) = notappl then
				dispError("E",edit("99",i),maketext("LGU ID = Blank"),"A15.1","City/Municipal LGU ID must not be blank.", "A15_lguid","--", "A");
			elseif not (A15_LGUID(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("LGU ID  = %d",A15_LGUID(i)),"A15.2","City/Municipal LGU ID: choose from the given categories.", "A15_lguid","--", "A");
			endif;
		//16 LGUID NO
			if (A15_LGUID(i)) = 1 and A16_LGUIDNO(i) = ""  then
				dispError("E",edit("99",i),maketext("LGUID NO = Blank"),"A16.1","Issued city/mun ID, enter ID number.", "A15_lguid","A16_lguidno", "A");
			endif;
		//17 SOLO PARENT TAKING CARE OF A CHILD
			if (A07_AGE(i)) >= 10 and (A17_SOLOPAR(i)) = notappl then
				dispError("E",edit("99",i),maketext("AGE = %d, SOLO PAR = BLANK",A07_AGE(i)),"A17.1","Solo Parent must not be blank.", "A17_solopar","--", "A");
			elseif (A07_AGE(i)) >= 10 and not (A17_SOLOPAR(i)) in 1,2 then
				dispError("E",edit("99",i),maketext("AGE = %d, SOLO PAR = %d",A07_AGE(i), A17_SOLOPAR(i)),"A17.2","Solo Parent: Choose from the given categories.", "a17_solopar","--", "A");
			elseif (A07_AGE(i)) < 10 and (A17_SOLOPAR(i)) in 1,2 then
				dispError("E",edit("99",i),maketext("AGE = %d, SOLO PAR = %d",A07_AGE(i), A17_SOLOPAR(i)),"A17.3","HH Member Age less than 10 must not answer this item.", "A07_age","a17_solopar", "A");
			endif;
		//18 SOLO PARENT ID
			if (A07_AGE(i)) >= 10 and (A17_SOLOPAR(i)) in 1 and (A18_SOLOID(i)) = notappl  then
				dispError("E",edit("99",i),maketext("AGE = %d, SOLO PAR = 1, SOLO PAR ID = BLANK",A07_AGE(i)),"A18.1","Solo Parent ID must not be blank.", "a17_solopar","A18_soloid", "A");
			elseif (A07_AGE(i)) >= 10 and A17_SOLOPAR(i) in 1 and not (A18_SOLOID(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("AGE = %d, SOLO PAR = 1, SOLO PAR ID = %d",A07_AGE(i), A18_SOLOID(i)),"A18.2","Solo Parent ID: Choose from the given categories.", "A17_solopar","a18_soloid", "A");
			elseif (A07_AGE(i)) < 10 and (A17_SOLOPAR(i)) in 1 and (A18_SOLOID(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("AGE = %d, SOLO PAR = 1, SOLO PAR ID = %d",A07_AGE(i), A18_SOLOID(i)),"A18.3","HH Member Age less than 10 must not answer this item.", "A17_solopar","a18_soloid", "A");
			elseif A07_AGE(i) >= 10 and A17_SOLOPAR(i) in 2 and (A18_SOLOID(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("AGE = %d, SOLO PAR = 2, SOLO PAR ID = %d",A07_AGE(i), A17_SOLOPAR(i)),"A18.4","Solo Parent = 2, Solo Parent ID must be blank.", "A17_solopar","a18_soloid", "A");
			endif;
		//19 SENIOR CITIZEN ID
			if (A07_AGE(i)) >= 60 and (A19_SCTZNIDQ(i)) = notappl  then
				dispError("E",edit("99",i),maketext("AGE = %d, SENIOR CITIZEN = BLANK",A07_AGE(i)),"A19.1","Senior Citizen ID must not be blank.", "A19_SCTZNIDQ","--", "A");
			elseif (A07_AGE(i)) >= 60 and not (A19_SCTZNIDQ(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("AGE = %d, SENIOR CITIZEN = %d",A07_AGE(i),A19_SCTZNIDQ(i)),"A19.2","Senior Citizen ID: choose from the given categories.", "A19_SCTZNIDQ","--", "A");
			elseif (A07_AGE(i)) < 60 and (A19_SCTZNIDQ(i)) in 1,2,8 then
				dispError("E",edit("99",i),maketext("AGE = %d, SENIOR CITIZEN = %d",A07_AGE(i),A19_SCTZNIDQ(i)),"A19.3","HH Member age less than 60 must not answer this item.", "A07_AGE","A19_SCTZNIDQ", "A");
			endif;
		//20 HEALTH PROBLEM
			//SEEING	
			if (A07_AGE(i)) >= 5 and (A20_DIFFSEEING(i)) = notappl then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF SEEING = BLANK",A07_AGE(i)),"A20a.1","Seeing, even if wearing glasses must not be blank.", "A20_DIFFSEEING","--","A");
			elseif (A07_AGE(i)) >= 5 and not (A20_DIFFSEEING(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF SEEING = %d",A07_AGE(i),A20_DIFFSEEING(i)),"A20a.2","Seeing, even if wearing glasses: choose from the given categories (1:4).", "A20_DIFFSEEING","--","A");
			elseif (A07_AGE(i)) < 5 and (A20_DIFFSEEING(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF SEEING = %d",A07_AGE(i),A20_DIFFSEEING(i)),"A20a.3","HH Member Age less than 5 must not answer this item.", "A07_age","A20_DIFFSEEING", "A");
			endif;
			//HEARING	
			if (A07_AGE(i)) >= 5 and (A20_DIFFHRING(i)) = notappl then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF HEARING = BLANK",A07_AGE(i)),"A20b.1","Hearing, even if using hearing aid must not be blank.", "A20_DIFFHRING","--", "A");
			elseif (A07_AGE(i)) >= 5 and not (A20_DIFFHRING(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF HEARING = %d",A07_AGE(i),A20_DIFFHRING(i)),"A20b.2","Hearing, even if using hearing aid: choose from the given categories (1:4).", "A20_DIFFHRING","--", "A");
			elseif (A07_AGE(i)) < 5 and (A20_DIFFHRING(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF HEARING = %d",A07_AGE(i),A20_DIFFHRING(i)),"A20b.3","HH Member Age less than 5 must not answer this item.", "A20_DIFFHRING","A07_age", "A");
			endif;
			//WALKING	
			if (A07_AGE(i)) >= 5 and (A20_DIFFWALK(i)) = notappl then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF WALKING = BLANK",A07_AGE(i)),"A20c.1","Walking or climbing steps, even if with cane or artificial leg must not be blank.", "A20_DIFFWALK","--", "A");
			elseif (A07_AGE(i)) >= 5 and not (A20_DIFFWALK(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF WALKING = %d",A07_AGE(i),A20_DIFFWALK(i)),"A20c.2","Walking or climbing steps, even if with cane or artificial leg: choose from the given categories (1:4).", "A20_DIFFWALK","--", "A");
			elseif (A07_AGE(i)) < 5 and (A20_DIFFWALK(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF WALKING = %d",A07_AGE(i),A20_DIFFWALK(i)),"A20c.3","HH Member Age less than 5 must not answer this item.", "a07_age","A20_DIFFWALK", "A");
			endif;
			//REMEMBERING	
			if (A07_AGE(i)) >= 5 and (A20_DIFFREMEM(i)) = notappl then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF REMEMBERING = BLANK",A07_AGE(i)),"A20d.1","Remembering or concentrating must not be blank.", "A20_DIFFREMEM","--", "A");
			elseif (A07_AGE(i)) >= 5 and not (A20_DIFFREMEM(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF REMEMBERING = %d",A07_AGE(i),A20_DIFFREMEM(i)),"A20d.2","Remembering or concentrating: choose from the given categories (1:4).", "A20_DIFFREMEM","--", "A");
			elseif (A07_AGE(i)) < 5 and (A20_DIFFREMEM(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF REMEMBERING = %d",A07_AGE(i),A20_DIFFREMEM(i)),"A20d.3","HH Member Age less than 5 must not answer this item.", "A07_age","A20_DIFFREMEM", "A");
			endif;
			//SELF CARE	
			if (A07_AGE(i)) >= 5 and (A20_DIFFSLFCARE(i)) = notappl then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF SELF CARE = BLANK",A07_AGE(i)),"A20e.1","Self-caring must not be blank.", "A20_DIFFSLFCARE","--", "A");
			elseif (A07_AGE(i)) >= 5 and not (A20_DIFFSLFCARE(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF SELF CARE = %d",A07_AGE(i),A20_DIFFSLFCARE(i)),"A20e.2","Self-caring: choose from the given categories (1:4).", "A20_DIFFSLFCARE","--", "A");
			elseif (A07_AGE(i)) < 5 and (A20_DIFFSLFCARE(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF SELF CARE = %d",A07_AGE(i),A20_DIFFSLFCARE(i)),"A20e.3","HH Member Age less than 5 must not answer this item.", "A07_AGE","A20_DIFFSLFCARE", "A");
			endif;
			//SELF CARE	
			if (A07_AGE(i)) >= 5 and (A20_DIFFCOMM(i)) = notappl then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF COMMUNICATING = BLANK",A07_AGE(i)),"A20f.1","Communicating must not be blank.", "A20_DIFFCOMM","--", "A");
			elseif (A07_AGE(i)) >= 5 and not (A20_DIFFCOMM(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF COMMUNICATING = %d",A07_AGE(i),A20_DIFFCOMM(i)),"A20f.2","Communicating: choose from the given categories (1:4).", "A20_DIFFCOMM","--", "A");
			elseif (A07_AGE(i)) < 5 and (A20_DIFFCOMM(i)) in 1:4 then
				dispError("E",edit("99",i),maketext("AGE = %d, DIFF COMMUNICATING = %d",A07_AGE(i),A20_DIFFCOMM(i)),"A20f.3","HH Member Age less than 5 must not answer this item.", "A07_age","A20_DIFFCOMM", "A");
			endif;
			
		//GET THE HOUSEHOLD HEAD COUNT FOR A02.3
			if A02_RELTOHHH(i) = 01 then
				HHhead = HHhead +1;
			endif;			
		//GET THE FAMILY HEAD IN NUCLEAR FAMILY for A04.3	
			if A03_NUCLEAR(i) = 1 and A04_RELTONUCFH(i) = 01 then
				NFH = NFH + 1;
			endif;
		
		endif;//if LNO(i) <> notappl then
	enddo;
		
		//DISPLAY ERROR CODE A02.3	
		if HHhead > 1 then
			dispError("E","00",maketext("Household Head Count = %d",HHhead),"A02.3","There should be only 1 HH Head in the roster.", "HHhead","--", "A");
		endif;
		//DISPLAY ERROR CODE A04.3	
		if NFH > 1 then
			dispError("E","00",maketext("Count of Family Head in Nuc Fam = %d",NFH),"A04.3","There should be only one Family Head in the nuclear family.", "NFH","--", "A");
		endif;
		//DISPLAY ERROR FOR A03.2
		count_nuclearfam.removeDuplicates();
		if count_nuclearfam.length() <> NO_NUCLEAR_FAM then
			dispError("E","00",maketext("Count of Nuc Fam = %d",count_nuclearfam.length()),"A03.2","The total number of nuclear family must be equal to the highest number of entry.", "NO_NUCLEAR_FAM","--", "A");
		endif;
	
	
	//============= SECTION B ==================

		do varying numeric i = 1 while i <= soccurs(SECTION_B)
			if LNO(i) <> notappl then
			//01 MIGRATION
				if A07_AGE(i) >= 5 and not invalueset(B01_MIG(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Residence at time of birth = %d",A07_AGE(i),B01_MIG(i)),"B01.1","Mother's residence at the time of birth: invalid entry.", "B01_MIG","--", "B");
				elseif A07_AGE(i) >= 5 and B01_MIG(i) = notappl then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Residence at time of birth = blank",A07_AGE(i)),"B01.2","Mother's residence at the time of birth must have entry.", "B01_MIG","--", "B");
				elseif A07_AGE(i) < 5 and invalueset(B01_MIG(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Residence at time of birth = %d",A07_AGE(i),B01_MIG(i)),"B01.3","Mother's residence at the time of birth is for five years old and over.", "B01_MIG","A07_age", "B");
				endif;
			//01 RESIDENCE PH
				if A07_AGE(i) >= 5 and B01_MIG(i) in 1,2 and B01_PHILIPPINES1(i) = notappl then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Residence at time of birth = %d, PH = blank",A07_AGE(i), B01_MIG(i)),"B01A.1","B01 Philippine Code is blank.","B01_MIG", "B01_PHILIPPINES1", "B");
				elseif A07_AGE(i) >= 5 and B01_MIG(i) in 1,2 and not invalueset(B01_PHILIPPINES1(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Residence at time of birth = %d, PH = %d",A07_AGE(i),B01_MIG(i),B01_PHILIPPINES1(i)),"B01A.2","B01 Philippine Code is invalid.", "B01_MIG","B01_PHILIPPINES1", "B");
				elseif A07_AGE(i) < 5 and B01_MIG(i) in 1,2 and invalueset(B01_PHILIPPINES1(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Residence at time of birth = %d, PH = %d",A07_AGE(i),B01_MIG(i),B01_PHILIPPINES1(i)),"B01A.3","B01 Philippine Code is for five years old and over.", "A07_age","B01_PHILIPPINES1", "B");
				endif;
				
				if A07_AGE(i) >= 5 and B01_MIG(i) in 1 and TONUMBER(EDIT("9999",B01_PHILIPPINES1(i))[1:2]) <> PROV_PSGC then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Reside = %d, Prov = %d",A07_AGE(i), B01_MIG(i),B01_PHILIPPINES1(i)),"B01A.4","B01 Province is not similar as current province.","B01_MIG","B01_PHILIPPINES1", "B");
				endif;
			//01 RESIDENCE: COUNTRY
				if A07_AGE(i) >= 5 then
					if B02_FYRSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES1(i)) and B01_COUNTRY1(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = blank",A07_AGE(i), B02_FYRSRESIDE(i),B01_PHILIPPINES1),"B01A.5","B01 Country Code is blank.","B04_SMOSRESIDE","B01_COUNTRY1", "B");
					elseif B02_FYRSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES1(i)) and not invalueset(B01_COUNTRY1(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = %d ",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES1(i),B01_COUNTRY1(i) ),"B01A.6","B01 Country Code is invalid.", "B04_SMOSRESIDE","B01_COUNTRY1" , "B");
					endif
				else
					if B02_FYRSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES1(i)) and invalueset(B01_COUNTRY1(i)) or B01_COUNTRY1(i) <> notappl then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES1(i),B01_COUNTRY1(i)),"B01A.7","B01 Country Code is for five years old and older.", "A07_age","B01_COUNTRY1" , "B");
					endif;
				endif;
				
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 3 and not invalueset(B01_COUNTRY1(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, Country = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_COUNTRY1(i)),"B01A.8","B01 Country Code is invalid.", "B04_SMOSRESIDE","B04_SMOSRESIDECOUNTRY", "B" );
				endif;		
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 3 and invalueset(B01_PHILIPPINES1(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, City = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES1(i)) ,"B01A.9","B04 Philippine Code is invalid for code = 3 in B02.", "B04_SMOSRESIDE","B04_SMOSRESIDECITY", "B" );
				endif;
			//02 RESIDE 5 YEARS AGO
				if A07_AGE(i) >= 5 and not invalueset(B02_FYRSRESIDE(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 5yrs Reside  = %d",A07_AGE(i),B02_FYRSRESIDE(i)),"B02.1","Mother's residence five years ago: invalid entry.", "B02_FYRSRESIDE","--", "B");
				elseif A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) = notappl then
					dispError("E",edit("99",i),maketext("Age = %d, 5yrs Reside = blank",A07_AGE(i)),"B02.2","Mother's residence five years ago must have entry.", "B02_FYRSRESIDE","--", "B");
				elseif A07_AGE(i) < 5 and invalueset(B02_FYRSRESIDE(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 5yrs Reside = %d",A07_AGE(i),B02_FYRSRESIDE(i)),"B02.3","Mother's residence five years ago is for five years old and over.", "A07_age","B02_FYRSRESIDE", "B");
				endif;
			//02 RESIDE 5 YEARS AGO: PH
				if A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) in 1,2 and B01_PHILIPPINES2(i) = notappl then
					dispError("E",edit("99",i),maketext("Age = %d, 5yrs Reside = %d, Prov = blank",A07_AGE(i), B02_FYRSRESIDE(i)),"B02A.1","B02 Philippine is blank.", "B02_FYRSRESIDE","B01_PHILIPPINES2", "B");
				elseif A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) in 1,2 and not invalueset(B01_PHILIPPINES2(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 5yrs Reside = %d, Prov = %d",A07_AGE(i),B02_FYRSRESIDE(i),B01_PHILIPPINES2(i)),"B02A.2","B02 Philippine Code is invalid.", "B02_FYRSRESIDE","B01_PHILIPPINES2", "B");
				elseif A07_AGE(i) < 5 and B02_FYRSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES2(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 5yrs Reside = %d, Prov = %d",A07_AGE(i),B02_FYRSRESIDE(i),B01_PHILIPPINES2(i)),"B02A.3","B02 Philippine Code is for five years old and over.","A07_AGE","B01_PHILIPPINES2", "B");
				endif;
				
				if A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) in 1 and TONUMBER(EDIT("9999",B01_PHILIPPINES2(i))[1:2]) <> PROV_PSGC then
					dispError("E",edit("99",i),maketext("Age = %d, Mother Reside = %d, Prov = %d",A07_AGE(i), B02_FYRSRESIDE(i),B01_PHILIPPINES2(i)),"B02A.4","B02 Philippine Code is not similar as current province.", "A07_AGE","B01_PHILIPPINES2", "B");
				endif;
			//02 RESIDE 5 YEARS AGO: COUNTRY
				if A07_AGE(i) >= 5 then
					if B02_FYRSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES2(i)) and B01_COUNTRY2(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = blank",A07_AGE(i), B02_FYRSRESIDE(i),B01_PHILIPPINES2),"B02B.1","B01 Country Code is blank.","B04_SMOSRESIDE","B01_COUNTRY1", "B");
					elseif B02_FYRSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES2(i)) and not invalueset(B01_COUNTRY2(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = %d ",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES2(i),B01_COUNTRY2(i) ),"B02B.2","B01 Country Code is invalid.", "B04_SMOSRESIDE","B01_COUNTRY1" , "B");
					endif
				else
					if B02_FYRSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES2(i)) and invalueset(B01_COUNTRY2(i)) or B01_COUNTRY2(i) <> notappl then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES2(i),B01_COUNTRY2(i)),"B02B.3","B01 Country Code is for five years old and older.", "A07_age","B01_COUNTRY1" , "B");
					endif;
				endif;
				
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 3 and not invalueset(B01_COUNTRY2(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, Country = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_COUNTRY2(i)),"B02B.4","B01 Country Code is invalid.", "B04_SMOSRESIDE","B01_COUNTRY2", "B" );
				endif;		
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 3 and invalueset(B01_PHILIPPINES2(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES2(i)),"B02B.5","B04 Philippine Code is invalid for code = 3 in B02.", "B04_SMOSRESIDE","B01_PHILIPPINES2", "B" );
				endif;
			//03 REASON
				if A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) in 2:4 and not invalueset(B03_REASONFYRS(i)) then
					dispError("E","00",maketext("Age = %d, 5yrs Reside = %d, Reason for Moving = %d",A07_AGE(i),B02_FYRSRESIDE(i),B03_REASONFYRS(i)),"B03.1","Reason for moving five years ago: invalid entry.", "B02_FYRSRESIDE","B03_REASONFYRS", "B");
				elseif A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) in 2:4 and B03_REASOnFYRS(i) = notappl then
					dispError("E","00",maketext("Age = %d, 5yrs Reside = %d, Reason for Moving = blank",A07_AGE(i),B02_FYRSRESIDE(i)),"B03.2","Reason for moving five years ago: must have an entry.", "B02_FYRSRESIDE","B03_REASONFYRS", "B");
				elseif A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) in 1 and invalueset(B03_REASOnFYRS(i)) then
					dispError("E","00",maketext("Age = %d, 5yrs Reside = %d, Reason for Moving = %d",A07_AGE(i),B02_FYRSRESIDE(i), B03_REASOnFYRS(i)),"B03.3","Reason for moving five years ago: invalid entry.", "B02_FYRSRESIDE","B03_REASONFYRS", "B");
				elseif A07_AGE(i) < 5 and B02_FYRSRESIDE(i) in 1 and invalueset(B03_REASOnFYRS(i)) or B03_REASOnFYRS(i) <> notappl then
					dispError("E","00",maketext("Age = %d, 5yrs Reside = %d, Reason for Moving = %d",A07_AGE(i),B02_FYRSRESIDE(i), B03_REASOnFYRS(i)),"B03.4","Reason for moving five years ago is for five years old and over.", "B02_FYRSRESIDE","B03_REASONFYRS", "B");
				endif;
			//03 REASON SPECIFY
				if A07_AGE(i) >= 5 and B02_FYRSRESIDE(i) in 2:4 and B03_REASONFYRS(i) in 99 and B03A_REASONFYRSOS(i) = "" then
					dispError("E","00",maketext("Age = %d, 5yrs Reside = %d, Reason for Moving = %d, Reason SPECIFY = blank",A07_AGE(i),B02_FYRSRESIDE(i),B03_REASONFYRS(i)),"B03A.1","Reason for moving: must have an entry.", "B03_REASONFYRS","B03A_REASONFYRSOS", "B");
				endif;
			//04 RESIDE 6 MONTHs
				if A07_AGE(i) >= 5 and not invalueset(B04_SMOSRESIDE(i)) then
					dispError("E","00",maketext("Age = %d, 6mos Reside = %d",A07_AGE(i),B04_SMOSRESIDE(i)),"B04.1","Residence six months ago: invalid entry.","B04_SMOSRESIDE","--", "B");
				elseif A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) = notappl then
					dispError("E","00",maketext("Age = %d, 6mos Reside = blank",A07_AGE(i)),"B04.2","Residence six months ago: must have an entry.", "B04_SMOSRESIDE","--", "B");
				elseif A07_AGE(i) < 5 and invalueset(B04_SMOSRESIDE(i)) or B04_SMOSRESIDE(i) <> notappl then
					dispError("E","00",maketext("Age = %d, 6mos Reside = %d",A07_AGE(i),B04_SMOSRESIDE(i)),"B04.3","Residence six months ago, is for five years old and over.", "A07_AGE","B04_SMOSRESIDE", "B");
				endif;
			//04 RESIDE 6 MOS: PH
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 1,2 and B01_PHILIPPINES4(i) = notappl then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = blank",A07_AGE(i), B04_SMOSRESIDE(i)),"B04A.1","B04 Philippines Code is blank.", "B04_SMOSRESIDE","B01_PHILIPPINES4", "B");
				elseif A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 1,2 and not invalueset(B01_PHILIPPINES4(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d",A07_AGE(i),B04_SMOSRESIDE(i),B01_PHILIPPINES4(i)),"B04A.2","B04 Philippines Code is invalid.", "B04_SMOSRESIDE","B01_PHILIPPINES4", "B");
				elseif A07_AGE(i) < 5 and B04_SMOSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES4(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d",A07_AGE(i),B04_SMOSRESIDE(i),B01_PHILIPPINES4(i)),"B04A.3","B04 Philippines Code is for five years old and over.", "A07_AGE","B01_PHILIPPINES4", "B");
				endif;
				
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 1 and TONUMBER(edit("9999",B01_PHILIPPINES4(i))[1:2]) <> PROV_PSGC then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES4(i)),"B04A.4","B04 2-Digit Philippines Code is not similar as current province.", "B01_PHILIPPINES4","--", "B");
				endif;	
			//04 RESIDE 6 MOS: COUNTRY
				if A07_AGE(i) >= 5 then
					if B04_SMOSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES4(i)) and B01_COUNTRY4(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = blank",A07_AGE(i), B02_FYRSRESIDE(i),B01_PHILIPPINES4(i)),"B04A.5","B04 Country is blank.","B04_SMOSRESIDE","B01_PHILIPPINES4", "B");
					elseif B04_SMOSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES4(i)) and not invalueset(B01_COUNTRY4(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, Ph = %d, Country = %d ",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES4(i),B01_COUNTRY4(i) ),"B04A.6","B04 Country is invalid.", "B04_SMOSRESIDE","B01_PHILIPPINES4" , "B");
					endif
				else
					if B04_SMOSRESIDE(i) in 1,2 and invalueset(B01_PHILIPPINES4(i)) and invalueset(B01_COUNTRY4(i)) or B01_COUNTRY4(i) <> notappl then
						dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d, Country = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES4(i),B01_COUNTRY4(i)),"B04A.7","B04 Country is for five years old and older.", "A07_age","B01_PHILIPPINES4" , "B");
					endif;
				endif;
				
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 3 and not invalueset(B01_COUNTRY4(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, Country = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_COUNTRY4(i)),"B04A.8","B04 Country is invalid.", "B04_SMOSRESIDE","B01_COUNTRY4", "B" );
				endif;		
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 3 and invalueset(B01_PHILIPPINES4(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, PH = %d",A07_AGE(i), B04_SMOSRESIDE(i),B01_PHILIPPINES4(i)),"B04A.9","B04 Province and City/Mun is invalid for code = 3 in B02.", "B04_SMOSRESIDE","B01_PHILIPPINES4", "B" );
				endif;
			//05 Reason
				if A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 2:4 and not invalueset(B05_REASONSMOS(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, Reason = %d",A07_AGE(i), B04_SMOSRESIDE(i),B05_REASONSMOS(i)),"B05.1","Reason for moving six months ago: invalid entry. ", "B04_SMOSRESIDE","B05_REASONSMOS", "B");
				elseif A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 2:4 and B05_REASONSMOS(i) = notappl then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, Reason = Blank",A07_AGE(i), B04_SMOSRESIDE(i)),"B05.2","Reason for moving six months ago: invalid entry. ", "B04_SMOSRESIDE","B05_REASONSMOS", "B");		
				elseif A07_AGE(i) >= 5 and B04_SMOSRESIDE(i) in 1 and invalueset(B05_REASONSMOS(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, 6mos Reside = %d, Reason = %d",A07_AGE(i), B04_SMOSRESIDE(i),B05_REASONSMOS(i)),"B05.3","Same as current address: Invalid entry.", "B04_SMOSRESIDE","B05_REASONSMOS", "B");		
				elseif A07_AGE(i) < 5 and invalueset(B05_REASONSMOS(i)) then
					dispError("E",edit("99",i),maketext("Age = %d, Reason = %d",A07_AGE(i),B05_REASONSMOS(i)),"B05.4","Reason for moving 6 mos ago is for five years old and over.", "A07_AGE","B05_REASONSMOS", "B");		
				endif;
			//05A Reason SPECIFY
				if A07_AGE(i) >= 5 and B05_REASONSMOS(i) in 99 and B05A_REASONFYRSOS(i) = "" then
					dispError("E",edit("99",i),maketext("Age = %d, Reason = %d, Reason SPECIFY = blank",A07_AGE(i), B05_REASONSMOS(i)),"B05A.1","Reason for moving six months ago = 99, without description. ", "B05_REASONSMOS","B05A_REASONFYRSOS", "B");
				elseif A07_AGE(i) >= 5 and not B05_REASONSMOS(i) in 99 and B05A_REASONFYRSOS(i) <> "" then
					dispError("E",edit("99",i),maketext("Age = %d, Reason = %d, Reason SPECIFY = %s",A07_AGE(i), B05_REASONSMOS(i),B05A_REASONFYRSOS(i)),"B05A.2","Reason for moving six months ago not 99, invalid entry. ", "B05_REASONSMOS","B05A_REASONFYRSOS", "B");
				endif;
			//06 OF Indicator
			numeric FOI = 0;
				if A07_AGE(i) >= 15 then
					if not invalueset(B06_OFI(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, OFI = %d",A07_AGE(i), B06_OFI(i)),"B06.1","OF Indicator: invalid entry, edit value. ", "B06_OFI","--", "B");
					elseif B06_OFI(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, OFI = blank",A07_AGE(i)),"B06.2","OF Indicator must have an entry. ", "B06_OFI","--", "B");
					elseif invalueset(B06_OFI(i)) then
						do varying numeric x = 1 while x <=soccurs(SECTION_A)
							if LNO(x) = i and A02_RELTOHHH(x) = 1 then
								FOI = 1;
							endif;
						enddo;
						if FOI = 1 then
							dispError("E",edit("99",i),maketext("Age = %d, OFI = %d, Relationship to HH = 1",A07_AGE(i),B06_OFI(i) ),"B06.3","HH Head should not be Overseas Filipino. ","A07_AGE", "B06_OFI", "B");
						endif;
					
					endif;
				else
					if invalueset(B06_OFI(i))  then
						dispError("E",edit("99",i),maketext("Age = %d, OFI = blank",A07_AGE(i)),"B06.4","OF Indicator is for 15 years old and over. ", "A07_AGE", "B06_OFI", "B");
					endif;
				endif;
			//07 WHEN DID YOU LEAVE PH
				if A07_AGE(i) >= 15 and B06_OFI(i) in 1:2 then
					if not tonumber(edit("99",B07_LEAVE(i))[2:1]) in 1:12,98 and not tonumber(edit("9999",B07_LEAVE(i))[3:4]) in 2015:2021,9998 then
						dispError("E",edit("99",i),maketext("Age = %d, OFI = %d, Leave PH = %s",A07_AGE(i),B06_OFI(i),edit("999999",B07_LEAVE(i))),"B07.1","Date left the Philippines: invalid entry. ", "B07_LEAVE", "B06_OFI", "B");
					elseif B07_LEAVE(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, OFI = %d, Leave PH = blank",A07_AGE(i),B06_OFI(i)),"B07.2","Date left the Philippines must have an entry. ", "B07_LEAVE", "B06_OFI", "B");
					endif;
				endif;
				if A07_AGE(i) < 15 and B06_OFI(i) in 1:2 then
					if tonumber(edit("99",B07_LEAVE(i))[2:1]) in 1:12,98 and tonumber(edit("9999",B07_LEAVE(i))[3:4]) in 2015:2021,9998 then
						dispError("E",edit("99",i),maketext("Age = %d, Leave PH = %d",A07_AGE(i),B07_LEAVE(i)),"B07.3","Date left the Philippines is for 15 years old and over. ", "A07_AGE","B07_LEAVE", "B");
					endif;
				endif;
			//08 HOW MANY MONTHS
				if A07_AGE(i) >= 15 and B06_OFI(i) in 1:2 then
					if not invalueset(B08_STAY(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, OFI = %d, Stay/Intend to stay abroad = %d",A07_AGE(i),B06_OFI(i),B08_STAY(i)),"B08.1","Stay/intend to stay abroad: invalid entry, edit value. ", "B06_OFI","B08_STAY", "B");
					elseif B08_STAY(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, OFI = %d, Stay/Intend to stay abroad = blank",A07_AGE(i),B06_OFI(i)),"B08.2","Stay/intend to stay abroad must not be blank. ", "B06_OFI","B08_STAY", "B");
					endif;
				else 
					if invalueset(B08_STAY(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, Stay/Intend to stay abroad = %d",A07_AGE(i),B08_STAY(i)),"B08.3","Stay/intend to stay abroad is for 15 years old and over. ", "A07_AGE","B08_STAY", "B");
					endif;
				endif;
			//09 FOREIGN COUNTRY
				if A07_AGE(i) >= 15 then
					if not invalueset(B09_Country(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, Coutry of Work/study/visit = %d",A07_AGE(i),B09_Country(i)),"B09.1","Country of work/study/visit: invalid entry, edit value. ", "B09_Country","--", "B");
					elseif B09_Country(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, Coutry of Work/study/visit = blank",A07_AGE(i)),"B09.2","Country of work/study/visit must have an entry. ", "B09_Country","--", "B");
					endif;
				else
					if invalueset(B09_Country(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, Coutry of Work/study/visit = %d",A07_AGE(i),B09_Country(i)),"B09.3","Country of work/study/visit is for 15 years old and over. ", "A07_AGE","B09_Country", "B");
					endif;
				endif;
			//10 SEND MONEY
				if A07_AGE(i) >= 15 then
					if not invalueset(B10_PTSENDMNY(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, Times sending money = %d",A07_AGE(i),B10_PTSENDMNY(i)),"B10.1","Times sending money: invalid entry, edit value. ", "B10_PTSENDMNY","--", "B");
					elseif B10_PTSENDMNY(i) = notappl then
						dispError("E",edit("99",i),maketext("Age = %d, Times sending money = blank",A07_AGE(i)),"B10.2","Times sending money must have an entry. ", "B10_PTSENDMNY","--", "B");
					endif;
				else
					if invalueset(B10_PTSENDMNY(i)) then
						dispError("E",edit("99",i),maketext("Age = %d, Times sending money = %d",A07_AGE(i),B10_PTSENDMNY(i)),"B10.3","Times sending money is for 15 years old and over. ", "A07_AGE","B10_PTSENDMNY", "B");
					endif;
				endif;
			endif;
		enddo;

	
	//============= SECTION C ==================

	do varying numeric c = 1 while c <= soccurs(SECTION_C)
		if LNO(c) <> notappl then
			if A07_AGE(c) >= 5 then
				//01 LITERACY
				if C01_read(c) = notappl then
					dispError("E",edit("99",c),maketext("Age = %d, Literacy = blank",A07_AGE(c)),"C01.1","Literacy must not be blank", "A07_AGE","C01_read", "C");
				elseif not invalueset(C01_read(c)) then
					dispError("E",edit("99",c),maketext("Age = %d, Literacy = %d",A07_AGE(c), C01_read(c)),"C01.2","Literacy: choose from given categories", "A07_AGE","C01_read", "C");
				endif;
				
				//02 HGC LEVEL
				if C02_HGCLEVEL(c) = notappl then
					dispError("E",edit("99",c),maketext("Age = %d, HGC LEVEL = blank",A07_AGE(c)),"C01.3","HGC Level must not be blank", "A07_AGE","C02_HGCLEVEL", "C");
				elseif not invalueset(C02_HGCLEVEL(c)) then
					dispError("E",edit("99",c),maketext("Age = %d, HGC LEVEL = %d",A07_AGE(c),C02_HGCLEVEL(c) ),"C01.4","HGC Level: choose from given categories", "A07_AGE","C02_HGCLEVEL", "C");
				endif;
				
				//02 HGC
				if C02_HGC(c) = notappl then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = blank",A07_AGE(c)),"C02.1","HGC must not be blank", "A07_AGE","C02_HGC", "C");
				elseif not invalueset(C02_HGC(c)) then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.2","HGC: choose from given categories", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 10011 and a07_age(c) < 6 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.3","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 10012  and a07_age(c) < 7 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.4","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 10013 and a07_age(c) < 8 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.5","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 10014 and a07_age(c) < 9 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.6","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 10015 and a07_age(c) < 10 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.7","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 10016, 10018 and a07_age(c) < 11 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.8","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 24011 and a07_age(c) < 12 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.9","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 24012 and a07_age(c) < 13 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.10","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 24013 and a07_age(c) < 14 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.11","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 24015 and a07_age(c) < 15 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.12","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 34011, 34021, 34031, 35011 and a07_age(c) < 16 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.13","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 34013, 34023, 34033, 35013 and a07_age(c) < 17 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.14","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in  40001, 50001, 60001 and a07_age(c) < 18 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.15","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in  40002, 50002, 60002 and a07_age(c) < 19 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.16","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in  40003, 50003, 60003, 60004 and a07_age(c) < 20 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.17","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 40011:49999, 50011:59999, 60011:69999  and a07_age(c) < 21 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.18","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 70010  and a07_age(c) < 22 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.19","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 70000, 70011:79999  and a07_age(c) < 23 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.20","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 80010   and a07_age(c) < 24 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.21","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");
				elseif c02_hgc(c) in 80000, 80011:89999   and a07_age(c) < 25 then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c) ),"C02.22","HGC is inconsistent with the age, please confirm", "A07_AGE","C02_HGC", "C");				
				endif;
				if edit("9",C02_HGCLEVEL(c))[1:1] <> edit("9",c02_hgc(c))[1:1] then
					dispError("E",edit("99",c),maketext("Age = %d, HGC Level = %d, HGC = %d",A07_AGE(c),C02_HGCLEVEL(c),C02_HGC(c) ),"C02.23","HGC Level does not match the first digit of HGC, edit entry", "C02_HGCLEVEL","C02_HGC", "C");
				endif;
				
				
			else
				//01 LITERACY
				if C01_read(c) <> notappl then
					dispError("E",edit("99",c),maketext("Age = %d, Literacy = %d",A07_AGE(c),C01_read(c)),"C01.5","Literacy is for five years old and over", "A07_AGE","C01_read", "C");
				endif;
				//02 HGC LEVEL
				if C02_HGCLEVEL(c) <> notappl then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGCLEVEL(c)),"C01.6","HGC Level is for five years old and over", "A07_AGE","C02_HGCLEVEL", "C");
				endif;				
				//02 HGC
				if C02_HGC(c) <> notappl then
					dispError("E",edit("99",c),maketext("Age = %d, HGC = %d",A07_AGE(c),C02_HGC(c)),"C02.24","HGC must is for five years old and over", "A07_AGE","C02_HGC", "C");
				endif;
			endif;
			 
			if A07_AGE(c) >= 3 and A07_AGE(c) <= 25  then
			 //03 CURRENTLY ATTENDING
				if C03_CURATTEND(c) = notappl then 
					dispError("E",edit("99",c),maketext("Age = %d, CURATTEND = Blank",A07_AGE(c)),"C03.1","Currently attending must not be blank", "A07_AGE","C03_CURATTEND", "C");
				elseif not invalueset(C03_CURATTEND(c)) then
					dispError("E",edit("99",c),maketext("Age = %d, CURATTEND = %d",A07_AGE(c), C03_CURATTEND(c)),"C03.2","Currently attending: choose from the given categories", "A07_AGE","C03_CURATTEND", "C");
				endif;
			
			//04 CURRENTLY ATTENDING
				if C03_CURATTEND(c) in 1 and C04_CURSCH(c) = notappl then 
					dispError("E",edit("99",c),maketext("Age = %d, School Attendance = Blank",A07_AGE(c)),"C04.1","School attendance must not be blank", "A07_AGE","C04_CURSCH", "C");
				elseif C03_CURATTEND(c) in 1 and not invalueset(C04_CURSCH(c)) then  
					dispError("E",edit("99",c),maketext("Age = %d, School Attendance = %d",A07_AGE(c), C04_CURSCH(c)),"C04.2","School attendance: Choose from the given categories", "A07_AGE","C04_CURSCH", "C");
				elseif C03_CURATTEND(c) in 2 and invalueset(C04_CURSCH(c)) then  
					dispError("E",edit("99",c),maketext("Age = %d, School Attendance = %d",A07_AGE(c), C04_CURSCH(c)),"C04.3","Currently Attending = 2, School attendance must be blank", "A07_AGE","C04_CURSCH", "C");
				endif;
			//05 CURGRADELEVEL
				if C03_CURATTEND(c) in 1 and C05_CURGRADELEVEL(c) = notappl then 
					dispError("E",edit("99",c),maketext("Age = %d, Grade Level = Blank",A07_AGE(c)),"C05A.1","Grade Level must not be blank", "A07_AGE","C05_CURGRADELEVEL", "C");
				elseif C03_CURATTEND(c) in 1 and not invalueset(C05_CURGRADELEVEL(c)) then 
					dispError("E",edit("99",c),maketext("Age = %d, Grade Level = %d",A07_AGE(c),C05_CURGRADELEVEL(c)),"C05A.2","Grade Level: Choose from the given categories", "A07_AGE","C05_CURGRADELEVEL", "C");
				elseif C03_CURATTEND(c) in 2 and invalueset(C05_CURGRADELEVEL(c)) then 
					dispError("E",edit("99",c),maketext("Age = %d, Grade Level = %d",A07_AGE(c),C05_CURGRADELEVEL(c)),"C05A.3","Currently Attending = 2, Grade Level must be blank", "A07_AGE","C05_CURGRADELEVEL", "C");
				endif;
			//05 CURGRADE
				if C03_CURATTEND(c) in 1 and C05_CURGRADE(c) = notappl then 
					dispError("E",edit("99",c),maketext("Age = %d, Grade = Blank",A07_AGE(c)),"C05.1","Grade Level must not be blank", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and not invalueset(C05_CURGRADE(c))then 
					dispError("E",edit("99",c),maketext("Age = %d, Grade = Blank",A07_AGE(c)),"C05.2","Grade Level: choose from the given categories", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 2 and invalueset(C05_CURGRADE(c))then 
					dispError("E",edit("99",c),maketext("Age = %d, Grade = Blank",A07_AGE(c)),"C05.23","Currently Attending = 2, Grade must be blank", "A07_AGE","C05_CURGRADE", "C");
				endif;
				
				if C03_CURATTEND(c) in 1 and A07_AGE(c) < 6 and C05_CURGRADE(c) in 10011 then
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.3","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 7 and C05_CURGRADE(c) in 10012 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.4","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");					
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 8 and C05_CURGRADE(c) in 10013 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.5","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 9 and C05_CURGRADE(c) in 10014 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.6","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 10 and C05_CURGRADE(c) in 10015 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.7","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 11 and C05_CURGRADE(c) in 10016:10018 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.8","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 12 and C05_CURGRADE(c) in 24011 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.9","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 13 and C05_CURGRADE(c) in 24012 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.10","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 14 and C05_CURGRADE(c) in 24013 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.11","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 15 and C05_CURGRADE(c) in 24014:24015 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.12","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 16 and C05_CURGRADE(c) in 34011,34021,34031,35011 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.13","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 17 and C05_CURGRADE(c) in 34012:34013,34022:34023, 34032:34033,35012:35013 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.14","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 18 and C05_CURGRADE(c) in 40001,50001,60001 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.15","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 19 and C05_CURGRADE(c) in 40002,50002,60002 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.16","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 20 and C05_CURGRADE(c) in 40003,50003,60003:60004 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.17","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 21 and C05_CURGRADE(c) in 40011:49999, 50011:59999,60011:69999 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.18","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 22 and C05_CURGRADE(c) in 70010 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.19","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 23 and C05_CURGRADE(c) in 70000,70011:79999 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.20","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 24 and C05_CURGRADE(c) in 80010 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.21","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				elseif C03_CURATTEND(c) in 1 and A07_AGE(c) < 25 and C05_CURGRADE(c) in 80000, 80011:89999 then 
					dispError("E",edit("99",c),maketext("Age = %d, C05_CURGRADE = %d",A07_AGE(c),C05_CURGRADE(c)),"C05.22","Current grade is inconsistent with age, please confirm", "A07_AGE","C05_CURGRADE", "C");
				endif;

				//06 NOT ATTENDING SCHOOL
				if C03_CURATTEND(c) in 2 and C06_NOTCURSCH(c) = notappl then
					dispError("E",edit("99",c),maketext("Age = %d, Not Attending School = blank",A07_AGE(c)),"C06.1","Provide reason for not attending school", "C03_CURATTEND","C06_NOTCURSCH", "C");
				elseif C03_CURATTEND(c) in 2 and not invalueset(C06_NOTCURSCH(c)) then
					dispError("E",edit("99",c),maketext("Age = %d, Not Attending School = %d",A07_AGE(c),C06_NOTCURSCH(c)),"C06.2","Provide reason for not attending school: choose from the given categories", "C03_CURATTEND","C06_NOTCURSCH", "C");
				elseif  C03_CURATTEND(c) in 1 and invalueset(C06_NOTCURSCH(c)) then
					dispError("E",edit("99",c),maketext("Age = %d, Not Attending School = %d",A07_AGE(c),C06_NOTCURSCH(c)),"C06.3","Yes in currently attending school, invalid entry for reason for not attending school", "C03_CURATTEND","C06_NOTCURSCH", "C");
				endif;
				
			else
				//OUT OF RANGE AGE CONDITION
				if C03_CURATTEND(c) <> notappl then 
					dispError("E",edit("99",c),maketext("Age = %d, CURATTEND = %d",A07_AGE(c), C03_CURATTEND(c)),"C04.4","Currently attending is for three years old and over", "A07_AGE","C03_CURATTEND", "C");
				endif;
				if C04_CURSCH(c) <> notappl then 
					dispError("E",edit("99",c),maketext("Age = %d, School Attendance = Blank",A07_AGE(c)),"C05A.4","School attendance is for three years old and over", "A07_AGE","C04_CURSCH", "C");
				endif;
				if C05_CURGRADELEVEL(c) <> notappl then 
					dispError("E",edit("99",c),maketext("Age = %d, Grade Level = %d",A07_AGE(c),C05_CURGRADELEVEL(c)),"C05.4","Grade Level is for three years old and over", "A07_AGE","C05_CURGRADELEVEL", "C");
				endif;
				if C06_NOTCURSCH(c) <> notappl then
					dispError("E",edit("99",c),maketext("Age = %d, Not Attending School = %d",A07_AGE(c),C06_NOTCURSCH(c)),"C06.4","Provide reason for not attending school is for three years old and over", "C03_CURATTEND","C06_NOTCURSCH", "C");
				endif;
			endif;
		
		if A07_AGE(c) >= 15 then	
			
		//c07
			if c07_GRADTECH(c) = notappl then
				dispError("E",edit("99",c),maketext("Age = %d, Graduate of TVET = blank",A07_AGE(c)),"C07.1","Graduate of Technical/Vocational Education and Training (TVET) must not be blank", "c07_GRADTECH","--", "C");
			elseif not invalueset(c07_GRADTECH(c)) then
				dispError("E",edit("99",c),maketext("Age = %d, Graduate of TVET = %d",A07_AGE(c),c07_GRADTECH(c)),"C07.2","Graduate of Technical/Vocational Education and Training (TVET) is not invalueset", "c07_GRADTECH","--", "C");
			ENDIF;
		
		//C08
			if c08_trnskl(c) = notappl then
				dispError("E",edit("99",c),maketext("Age = %d, Currently attending TVET = blank",A07_AGE(c)),"C08.1"," Currently attending Technical/Vocational Education and Training (TVET) must not be blank", "c08_trnskl","--", "C");
			elseif not invalueset(c08_trnskl(c)) then
				dispError("E",edit("99",c),maketext("Age = %d, Currently attending TVET = %d",A07_AGE(c),c08_trnskl(c)),"C08.2"," Currently attending Technical/Vocational Education and Training (TVET): choose from the given categories", "c08_trnskl","--", "C");
			endif;
			
		//C09
			IF  c07_GRADTECH(c) in 1 or c08_trnskl(c) in 1 then				
				if c09_skldev(c) = notappl then
					dispError("E",edit("99",c),maketext("Age = %d,  Skills Development = blank",A07_AGE(c)),"C09.1"," Skills Development must not be blank", "c09_skldev","--", "C");
				elseif not invalueset(c09_skldev(c)) then
					dispError("E",edit("99",c),maketext("Age = %d, Skills Development = %d",A07_AGE(c),c09_skldev(c)),"C09.2"," Skills Development: choose from the given categories", "c09_skldev","--", "C");
				endif;
			else 
				if c09_skldev(c) <> notappl then
					dispError("E",edit("99",c),maketext("Age = %d, Graduate of TVET = %d, Currently attending TVET = %d, Skills Development = %d",A07_AGE(c), c07_GRADTECH(c),c08_trnskl(c),c09_skldev(c)),"C09.3","Skills Development should be blank", "c09_skldev","--", "C");
				endif;
			endif;		
		ELSE		
			if c07_GRADTECH(c) <> notappl then
				dispError("E",edit("99",c),maketext("Age = %d, TVET = %d",A07_AGE(c),c07_GRADTECH(c)),"C07.3","Graduate of Technical/Vocational Education and Training (TVET) is for fifteen years old and over", "c07_GRADTECH","--", "C");
			endif;
			if c08_trnskl(c) <> notappl then
				dispError("E",edit("99",c),maketext("Age = %d, Currently attending TVET = %d",A07_AGE(c),c08_trnskl(c)),"C08.3"," Currently attending Technical/Vocational Education and Training (TVET) is for fifteen years old and over", "c08_trnskl","--", "C");
			endif;
			if c09_skldev(c) <> notappl then
				dispError("E",edit("99",c),maketext("Age = %d, Skills Development = %d",A07_AGE(c),c09_skldev(c)),"C09.4"," Skills Development is for fifteen years old and over", "c09_skldev","--", "C");
			endif;
		endif;		
		endif; //if LNO(a) <> notappl then
	enddo; //do varying numeric c = 1 while c <= soccurs(SECTION_C)

	//============= SECTION D ==================
	do varying numeric d = 1 while d <= soccurs(SECTION_D)
		if LNO(d) <> notappl then
			if A07_AGE(d) >= 15 then
			//D01
				if D01_REGVOTER(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Registered Voter = blank",A07_AGE(d)),"D01.1"," Registered Voter must not be blank", "A07_AGE","D01_REGVOTER", "D");
				elseif not invalueset(D01_REGVOTER(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Registered Voter = %d",A07_AGE(d),D01_REGVOTER(d) ),"D01.2"," Registered Voter is not in the valueset","A07_AGE", "D01_REGVOTER", "D");
				endif;
			
			//D02
				if D02_votele(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Voted Last Election = blank",A07_AGE(d)),"D02.1"," Vote in the last election must not be blank", "A07_AGE","D02_votele", "D");
				elseif not invalueset( D02_votele(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Voted Last Election = %d",A07_AGE(d),D02_votele(d)),"D02.2"," Vote in the last election is not in the valueset", "A07_AGE","D02_votele", "D");
				endif;
			
			//D03
				if D03_sptime(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Voluntary Work = blank",A07_AGE(d)),"D03.1"," Voluntary Work must not be blank", "A07_AGE","D03_sptime", "D");
				elseif NOT INVALUESET(D03_sptime(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Voluntary Work = %D",A07_AGE(d),D03_sptime(d)),"D03.2"," Voluntary Work  is not invalueset", "A07_AGE","D03_sptime", "D");
				endif;
			
			//D04			
				if D04_provln(d) = "" then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = blank",A07_AGE(d)),"D04.1"," Provided volunteer must not be blank", "A07_AGE","D04_provln", "D");
				elseif not invalueset(D04_provln(d)[1:1]) or not invalueset(D04_provln(d)[1:2]) or not invalueset(D04_provln(d)[1:3]) or not invalueset(D04_provln(d)[1:4]) then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %s",A07_AGE(d),D04_provln(d)),"D04.2"," Provided volunteer is not in valueset", "A07_AGE","D04_provln", "D");
				endif; 
			
			//D05
				if D05_collecting(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = blank",A07_AGE(d)),"D05.1"," Provided volunteer must not be blank", "A07_AGE","D05_collecting", "D");
				elseif not invalueset(D05_collecting(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d",A07_AGE(d),D05_collecting(d)),"D05.2"," Provided volunteer is not in valueset", "A07_AGE","D05_collecting", "D");
				endif;
			
			//D06
				if D05_collecting(d) in 1 and d06_predonated(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d, Donation = blank",A07_AGE(d),D05_collecting(d)),"D06.1"," Time spent in preparation of products or goods to be donated must not be blank", "A07_AGE","D05_collecting", "D");
				elseif D05_collecting(d) in 1 and not invalueset(d06_predonated(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d, Donation = %d",A07_AGE(d),D05_collecting(d),d06_predonated(d)),"D06.2"," Time spent in preparation of products or goods to be donated is not in valueset", "A07_AGE","D05_collecting", "D");
				elseif  D05_collecting(d) in 2 and d06_predonated(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d, Donation = %d",A07_AGE(d),D05_collecting(d),d06_predonated(d)),"D06.3"," Time spent in preparation of products or goods to be donated should be blank", "A07_AGE","D05_collecting", "D");
				endif;
			
			//D07
				if D05_collecting(d) in 1 and D07_Provide(d) = "" then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d, Activities = blank",A07_AGE(d),D05_collecting(d)),"D07.1"," Activies that can remember must not be blank", "A07_AGE","D07_Provide", "D");
				elseif D05_collecting(d) in 2 and D07_Provide(d) <> "" then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d, Activities = %s",A07_AGE(d),D05_collecting(d),D07_Provide(d)),"D07.2"," Activies that can remember must be blank", "A07_AGE","D07_Provide", "D")
				endif;
			
			//D08
				if D07_Provide(d) <> "" and d08_psoc(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Activities = %s, PSOC = blank",A07_AGE(d),D07_Provide(d)),"D08.1"," PSOC Code must not be blank", "A07_AGE","d08_psoc", "D")
				elseif D07_Provide(d) <> "" and not invalueset(d08_psoc(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Activities = %s, PSOC = %d",A07_AGE(d),D07_Provide(d),d08_psoc(d)),"D08.2"," PSOC Code is not in valueset", "A07_AGE","d08_psoc", "D")
				endif;
			
			//D09
				if D09_spone(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, More than one hour help = blank",A07_AGE(d)),"D09.1"," Did you spend more than one hour providing all the help you just named must not be blank", "A07_AGE","D09_spone", "D")
				elseif not invalueset(D09_spone(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, More than one hour help = %d",A07_AGE(d),D09_spone(d)),"D09.2"," Did you spend more than one hour is not in valueset", "A07_AGE","D09_spone", "D")
				endif;
			
			//D10
				if D10_sptime(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Spend Unpaid Time = blank",A07_AGE(d)),"D10.1"," Spend time providing unpaid must not be blank", "A07_AGE","D10_sptime", "D")
				elseif not invalueset(D10_sptime(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Spend Unpaid Time = %d",A07_AGE(d),D10_sptime(d)),"D10.2"," Spend time providing unpaid is not in valueset", "A07_AGE","D10_sptime", "D")
				endif;
			//D11
				if D10_sptime(d) in 1 and d11_provide(d) = "" then
					dispError("E",edit("99",d),maketext("Age = %d, Help Provide = blank",A07_AGE(d)),"D11.1"," Help provide must not be blank", "A07_AGE","d11_provide", "D")
				elseif D10_sptime(d) in 1 and not invalueset(d11_provide(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Help Provide = %s",A07_AGE(d),d11_provide(d)),"D11.2"," Help provide is not in valueset", "A07_AGE","d11_provide", "D")
				elseif D10_sptime(d) in 2 and invalueset(d11_provide(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, Help Provide = %s",A07_AGE(d),d11_provide(d)),"D11.3"," Help provide must be blank", "A07_AGE","d11_provide", "D")
				endif;
			//D12
				if D10_sptime(d) in 1 and d12_psoc(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, PSOC = blank",A07_AGE(d) ),"D12.1"," Help provide must not be blank", "A07_AGE","d12_psoc", "D")
				elseif D10_sptime(d) in 1  and not invalueset(d12_psoc(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, PSOC = %d",A07_AGE(d),d12_psoc(d)),"D12.2"," Help provide is not in valueset", "A07_AGE","d12_psoc", "D")
				endif;
			//D13
				if D10_sptime(d) in 1 and d13_blvoluteer(d) = notappl then
					dispError("E",edit("99",d),maketext("Age = %d, BRGY/LGU Volunteer = blank",A07_AGE(d)),"D13.1"," Barangay or Local Government Unit Volunteer must not be blank", "A07_AGE","d13_blvoluteer", "D")
				elseif D10_sptime(d) in 1 and not invalueset(d13_blvoluteer(d)) then
					dispError("E",edit("99",d),maketext("Age = %d, BRGY/LGU Volunteer = %d",A07_AGE(d),d13_blvoluteer(d)),"D13.2"," Barangay or Local Government Unit Volunteer is not invalueset", "A07_AGE","d13_blvoluteer", "D")
				endif;
			//D13A
				if D10_sptime(d) in 1 and d13_blvoluteer(d) in 5:7 and d13a_specify(d) = "" then
					dispError("E",edit("99",d),maketext("Age = %d, BRGY/LGU Volunteer = %d, SPECIFY = blank",A07_AGE(d),d13_blvoluteer(d)),"D13a.1"," Barangay or Local Government Unit Volunteer SPECIFY must not be blank", "d13_blvoluteer","d13a_specify", "D")
				endif;
				
			else
				if D01_REGVOTER(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d,  Registered Voter = %d",A07_AGE(d),D01_REGVOTER(d) ),"D01.3"," Registered Voter is for fifteen years old and over", "D01_REGVOTE","--", "D");
				endif;
				if D02_votele(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Voted Last Election = %d",A07_AGE(d),D02_votele(d)),"D02.3"," Vote in the last election is for fifteen years old and over", "A07_AGE","D02_votele", "D");
				endif;
				if D03_sptime(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Voluntary Work = %d",A07_AGE(d),D03_sptime(d)),"D03.3"," Voluntary Work  is for fifteen years old and over", "A07_AGE","D03_sptime", "D");
				endif;
				if D04_provln(d) <> "" then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %s",A07_AGE(d),D04_provln(d)),"D04.3"," Provided volunteer  is for fifteen years old and over", "A07_AGE","D04_provln", "D");
				endif;
				if D05_collecting(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d",A07_AGE(d),D05_collecting(d)),"D05.3"," Provided volunteer is for fifteen years old and over", "A07_AGE","D05_collecting", "D");
				endif;
				if d06_predonated(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d, Donation = %d",A07_AGE(d),D05_collecting(d),d06_predonated(d)),"D06.4"," Time spent in preparation of products or goods to be donated is for fifteen years old and over", "A07_AGE","d06_predonated", "D");
				endif;
				if D07_Provide(d) <> "" then
					dispError("E",edit("99",d),maketext("Age = %d, Provided Volunteer = %d, Activities = %s",A07_AGE(d),D05_collecting(d),D07_Provide(d)),"D07.3"," Activies that can remember is for fifteen years old and over", "A07_AGE","D07_Provide", "D")
				endif;
				if d08_psoc(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Activities = %s, PSOC = %d",A07_AGE(d),D07_Provide(d),d08_psoc(d)),"D08.3"," PSOC Code is for fifteen years old and over", "A07_AGE","d08_psoc", "D")
				endif;
				if D09_spone(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, More than one hour help = %d",A07_AGE(d),D09_spone(d)),"D09.3"," Did you spend more than one hour is for fifteen years old and over", "A07_AGE","D09_spone", "D")
				endif;
				if D10_sptime(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, Spend Unpaid Time = %d",A07_AGE(d),D10_sptime(d)),"D10.3"," Spend time providing unpaid is for fifteen years old and over", "A07_AGE","D10_sptime", "D")
				endif;
				if d11_provide(d) <> "" then				
					dispError("E",edit("99",d),maketext("Age = %d, Help Provide = %s",A07_AGE(d),d11_provide(d)),"D11.4"," Help provide is for fifteen years old and over", "A07_AGE","D10_sptime", "D")
				endif;
				if d12_psoc(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, PSOC = %d",A07_AGE(d),d12_psoc(d) ),"D12.3"," Help provide is for fifteen years old and over", "A07_AGE","d12_psoc", "D")
				endif;
				if d13_blvoluteer(d) <> notappl then
					dispError("E",edit("99",d),maketext("Age = %d, BRGY/LGU Volunteer = %d",A07_AGE(d),d13_blvoluteer(d)),"D13.3"," Barangay or Local Government Unit Volunteer is for fifteen years old and over", "A07_AGE","d13_blvoluteer", "D")
				endif;
				if d13a_specify(d) <> "" then
					dispError("E",edit("99",d),maketext("Age = %d, BRGY/LGU Volunteer = %d, SPECIFY = %s",A07_AGE(d),d13_blvoluteer(d), d13a_specify(d)),"D13a.2"," Barangay or Local Government Unit Volunteer is for fifteen years old and over", "d13_blvoluteer","d13a_specify", "D")
				endif;
			endif;	//if A07_AGE(c) > = 15 then
		endif; //f LNO(c) <> notappl then
	enddo; //do varying numeric d = 1 while d <= soccurs(SECTION_D)
	
	
	//============= SECTION E ==================
	do varying numeric e = 1 while e <= soccurs(SECTION_E)
		if LNO(e) <> notappl then
			if A07_AGE(e) >= 5 then
				
				//E01
					if E01_work(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = blank",A07_AGE(e)),"E01.1"," Worked at least 1 hour, must have an entry.", "E01_work","--", "E")
					elseif not invalueset(E01_work(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d",A07_AGE(e),E01_work(e)),"E01.2"," Worked at least 1 hour, invalid entry.", "E01_work","--", "E")
					endif;
				
				//E02
					if E01_work(e) in 1 and E02_workarrange(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d, Work Arrangement = blank",A07_AGE(e),E01_work(e)),"E02.1"," Worked at least 1 hour, work arrangement must have an entry.", "E01_work","E02_workarrange", "E")
					elseif E01_work(e) in 1 and not invalueset(E02_workarrange(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d, Work Arrangement = blank",A07_AGE(e),E01_work(e)),"E02.2"," Worked at least 1 hour, invalid entry.", "E01_work","E02_workarrange", "E")
					endif;
				
				//E03
					if E03_jobbus(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = blank",A07_AGE(e)),"E03.1"," Job/business indicator must have an entry.", "E03_jobbus","--", "E")
					elseif not invalueset(E03_jobbus(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d",A07_AGE(e),E03_jobbus(e)),"E03.2"," Job/business indicator must have an entry.", "E03_jobbus","--", "E")
					endif;
				
				//E04
					if E01_work(e) in 1 and E03_jobbus(e) in 1 and E04_engage(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Online Platform indicator = blank",A07_AGE(e),E03_jobbus(e)),"E04.1"," Worked at least 1 hr, online platform indicator must have an entry.","E03_jobbus", "E03_jobbus", "E")
					elseif E01_work(e) in 1 and E03_jobbus(e) in 1 and not invalueset(E04_engage(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Online Platform Indicator = %d",A07_AGE(e),E03_jobbus(e),E04_engage(e)),"E04.2"," Worked at least 1 hr, online platform indicator must have an entry.","E03_jobbus", "E03_jobbus", "E")
					endif;
				
					if E03_jobbus(e) in 2,3 and E04_engage(e) <> notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator  = %d, Platform indicator = %d",A07_AGE(e),E03_jobbus(e),E04_engage),"E04.3"," Worked at least 1 hr, online platform indicator is inconsistent.","E03_jobbus", "E04_engage", "E")
					endif;
					
				//E05-6
					if E01_work(e) in 1 and E04_engage(e) in 1 and e05_provcitymuncode(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator  = %d, PrvCityMun = blank",A07_AGE(e),E03_jobbus(e)),"E05.1"," Location of work must have an entry.","E03_jobbus", "e05_provcitymuncode", "E")
					elseif B06_OFI(e) in 4:5,7 and E04_engage(e) in 1 and (E01_work(e) in 1 or e03_jobbus(e) in 1) and not invalueset(e05_provcitymuncode(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator  = %d, PrvCityMun = %d",A07_AGE(e),E03_jobbus(e),e05_provcitymuncode),"E05.2"," Location of work, invalid entry.","E03_jobbus", "e05_provcitymuncode", "E")
					elseif B06_OFI(e) in 1:3,6 and E04_engage(e) in 1 and invalueset(e05_provcitymuncode(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator  = %d, PrvCityMun = %d",A07_AGE(e),E03_jobbus(e),e05_provcitymuncode),"E05.3"," Overseas Filipino WOrker not included.","E03_jobbus", "e05_provcitymuncode", "E")
					elseif a07_age(e) in 5:14 and E04_engage(e) in 1 and (E01_work(e) in 1 or e03_jobbus(e) in 1) and e05_provcitymuncode(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator  = %d, PrvCityMun = %d",A07_AGE(e),E03_jobbus(e),e05_provcitymuncode),"E05.4"," Location of work, must have an entry.","E03_jobbus", "e05_provcitymuncode", "E")
					endif;
					
					if E03_jobbus(e) in 2,3 and E04_engage(e) in 1 and e05_provcitymuncode(e) <> notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator  = %d, PrvCityMun = %d",A07_AGE(e),E03_jobbus(e), e05_provcitymuncode(e)),"E05.7"," Location of work is inconsistent.","E03_jobbus", "e05_provcitymuncode", "E")
					elseif E03_jobbus(e) in 2,3 and E04_engage(e) in 2 and e05_provcitymuncode(e) <> notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, PrvCityMun = %d",A07_AGE(e),E03_jobbus(e), e05_provcitymuncode(e)),"E05.5"," Location of work is inconsistent.","E03_jobbus", "e05_provcitymuncode", "E")
					endif;
					
				//E07
					if E03_jobbus(e) in 1 and E07_PROCC(e) = "" then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, With work = blank",A07_AGE(e),E03_jobbus(e)),"E07.1"," With work, job or business occupation must have an entry.","E03_jobbus", "E07_PROCC", "E")					endif;
					
					if E03_jobbus(e) in 2,3 and E07_PROCC(e) <> "" then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, With work = %s",A07_AGE(e),E03_jobbus(e), E07_PROCC(e)),"E07.2"," With work, job or business occupation must have an entry.","E03_jobbus", "E07_PROCC", "E")
					endif;
				
				//E08
					if b06_ofi(e) in 4:5,7 and E03_jobbus(e) in 1 and E08_procccode(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Occupation = blank",A07_AGE(e),b06_ofi(e),E03_jobbus(e)),"E08.1"," Occupation must have an entry.","E03_jobbus", "E08_procccode", "E")
					elseif b06_ofi(e) in 4:5,7 and E03_jobbus(e) in 1 and E08_procccode(e) in 00000 then
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),b06_ofi(e),E03_jobbus(e), E08_procccode(e)),"E08.2"," For further verification, invalid entry.","E03_jobbus", "E08_procccode", "W")
					elseif b06_ofi(e) in 4:5,7 and E03_jobbus(e) in 1 and not invalueset(E08_procccode(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),b06_ofi(e),E03_jobbus(e), E08_procccode(e)),"E08.3"," Invalid entry for occupational.","E03_jobbus", "E08_procccode", "E")
					elseif b06_ofi(e) in 1,2,3,6 and E03_jobbus(e) in 1 and invalueset(E08_procccode(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),b06_ofi(e),E03_jobbus(e), E08_procccode(e)),"E08.4"," Overseas Filipino Worker not included.","E03_jobbus", "E08_procccode", "E")
					elseif e01_work(e) in 1 and E03_jobbus(e) in 1 and E08_procccode(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),e01_work(e),E03_jobbus(e), E08_procccode(e)),"E08.5"," Occupation must have an entry.","E03_jobbus", "E08_procccode", "E")
					elseif e01_work(e) in 1 and E03_jobbus(e) in 1 and E08_procccode(e) in 00000 then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),e01_work(e),E03_jobbus(e), E08_procccode(e)),"E08.6"," Occupation must have an entry.","E03_jobbus", "E08_procccode", "E")
					elseif e01_work(e) in 1 and E03_jobbus(e) in 1 and not invalueset(E08_procccode(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),e01_work(e),E03_jobbus(e), E08_procccode(e)),"E08.7"," Invalid entry for occupation.","E03_jobbus", "E08_procccode", "E")
					elseif b06_ofi(e) in 4:5,7 and e01_work(e) in 2 and E03_jobbus(e) in 2 and invalueset(E08_procccode(e)) then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),e01_work(e),E03_jobbus(e), E08_procccode(e)),"E08.8"," No work, invalid entry.","E03_jobbus", "E08_procccode", "E")
					elseif E08_procccode(e) in 1111:1439 and a07_age < 18 then
						dispError("E",edit("99",e),maketext("Age = %d, Occupation = %d",A07_AGE(e), E08_procccode(e)),"E08.10"," Occupation is in consistent with age.","a07_age", "E08_procccode", "E")
					elseif c02_hgc(e) in 00000:59999,60001:60002 and E08_procccode(e) in 1345, 2111:2114, 2121:2122, 2131:2132, 2141:2146, 2151:2152, 2161:2165, 2211, 2221, 2250, 2261:2269, 2310, 2320, 2330, 2341:2342, 2351:2359, 2411, 2423, 2431, 2511:2512, 2611:2612, 2619, 2621, 2631:2636, 2641, 2643, 3211, 3412 then
						dispError("E",edit("99",e),maketext("Age = %d, HGC = %d, Occupation = %d",A07_AGE(e),c02_hgc(e), E08_procccode(e)),"E08.11"," Occupation is in consistent with HGC.","c02_hgc", "E08_procccode", "E")
					elseif c02_hgc(e) in  00000:59999 and E08_procccode(e) in 2222 then
						dispError("E",edit("99",e),maketext("Age = %d, HGC = %d, Occupation = %d",A07_AGE(e),c02_hgc(e), E08_procccode(e)),"E08.12"," Occupation is in consistent with HGC.","c02_hgc", "E08_procccode", "E")
					elseif c02_hgc(e) in 00000:10018 and E08_procccode(e) in 3222 then
						dispError("E",edit("99",e),maketext("Age = %d, HGC = %d, Occupation = %d",A07_AGE(e),c02_hgc(e), E08_procccode(e)),"E08.13"," Occupation is in consistent with HGC.","c02_hgc", "E08_procccode", "E")
					elseif A02_RELTOHHH(e) = 25 and not E08_procccode(e) in 5120, 5152,5153, 5162, 5311, 5322, 5329, 9111, 9121 , 9122 , 9129  then
						dispError("E",edit("99",e),maketext("Age = %d, HGC = %d, Occupation = %d",A07_AGE(e),c02_hgc(e), E08_procccode(e)),"E08.14"," Occupation is in consistent with relationship to HH Head.","A02_RELTOHHH", "E08_procccode", "E")
					endif;
					
					if not b06_ofi(e) in 4:5,7 and E03_jobbus(e) in 1 and E08_procccode(e) <> notappl then
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),b06_ofi(e),E03_jobbus(e), E08_procccode(e)),"E08.15"," Occupation is inconsistent.","E03_jobbus", "E08_procccode", "E")
					elseif not b06_ofi(e) in 4:5,7 and not E03_jobbus(e) in 1 and E08_procccode(e) <> notappl then
						dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d, Job/Business Indicator = %d, Occupation = %d",A07_AGE(e),b06_ofi(e),E03_jobbus(e), E08_procccode(e)),"E08.16"," Occupation is inconsistent.","E03_jobbus", "E08_procccode", "E")
					endif;

				//E09
					if E01_work(e) in 1 or E03_jobbus(e) in 1 and E09_industry(e) = "" then	
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Industry = blank",A07_AGE(e),E03_jobbus(e)),"E09.1"," With work, job or business, kind of industry must have an entry.","E03_jobbus", "E09_industry", "E")
					elseif E01_work(e) in 2 and E03_jobbus(e) in 2:3 and E09_industry(e) <> "" then
						dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Industry = %s",A07_AGE(e),E03_jobbus(e), E09_industry(e)),"E09.2"," No work, job or business, invalid entry for kind of industry.","E03_jobbus", "E09_industry", "E")
					endif;
					
				//E10
					if B06_OFI(e) in 4:5,7 and (E01_work(e) in 1 or E03_jobbus(e) in 1) and E10_industrycode(e) = notappl then
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Industry Code = blank",A07_AGE(e),B06_OFI(e),E03_jobbus(e)),"E10.1"," Kind of industry must have an entry.","E03_jobbus", "E10_industrycode", "E")
					elseif B06_OFI(e) in 4:5,7 and (E01_work(e) in 1 or E03_jobbus(e) in 1) and E10_industrycode(e) = 00000 then	
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Industry Code = %d",A07_AGE(e),B06_OFI(e),E03_jobbus(e),E10_industrycode(e)),"E10.2"," For further verification.","E03_jobbus", "E10_industrycode", "W")
					elseif B06_OFI(e) in 4:5,7 and (E01_work(e) in 1 or E03_jobbus(e) in 1) and not invalueset(E10_industrycode(e)) then	
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Industry Code = %d",A07_AGE(e),B06_OFI(e),E03_jobbus(e),E10_industrycode(e)),"E10.3"," Invalid entry for kind of industry.","E03_jobbus", "E10_industrycode", "E")
					elseif B06_OFI(e) in 1,2,3,6 and (E01_work(e) in 1 or E03_jobbus(e) in 1) and not invalueset(E10_industrycode(e)) then	
						dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Industry Code = %d",A07_AGE(e),B06_OFI(e),E03_jobbus(e),E10_industrycode(e)),"E10.4"," Overseas Filipino Worker not included.","E03_jobbus", "E10_industrycode", "E")
					elseif (E01_work(e) in 1 or E03_jobbus(e) in 1) and E10_industrycode(e) = notappl then	
						dispError("E",edit("99",e),maketext("Age = %d,  Job/Business Indicator = %d, Industry Code = blank",A07_AGE(e),E03_jobbus(e)),"E10.5"," Kind of industry must have an entry.","E03_jobbus", "E10_industrycode", "E")
					elseif (E01_work(e) in 1 or E03_jobbus(e) in 1) and E10_industrycode(e) = 0000 then	
						dispError("E",edit("99",e),maketext("Age = %d,  Job/Business Indicator = %d, Industry Code = %d",A07_AGE(e),E03_jobbus(e),E10_industrycode(e)),"E10.6"," For further verification, invalid entry.","E03_jobbus", "E10_industrycode", "E")
					elseif (E01_work(e) in 1 or E03_jobbus(e) in 1) and not invalueset(E10_industrycode(e)) then	
						dispError("E",edit("99",e),maketext("Age = %d,  Job/Business Indicator = %d, Industry Code = %d",A07_AGE(e),E03_jobbus(e),E10_industrycode(e)),"E10.7"," Invalid entry for kind of industry.","E03_jobbus", "E10_industrycode", "E")	
					elseif B06_OFI(e) in 4:5, 7 and (E01_work(e) in 1 and E03_jobbus(e) in 1) and invalueset(E10_industrycode(e)) then	
						dispError("E",edit("99",e),maketext("Age = %d,  OFI = %d,  Job/Business Indicator = %d, Industry Code = %d",A07_AGE(e),B06_OFI(e),E03_jobbus(e),E10_industrycode(e)),"E10.8"," No work, invalid entry .","E03_jobbus", "E10_industrycode", "E")	
					elseif A02_RELTOHHH(e) in 25 and not e10_industrycode in 96401 then
						dispError("E",edit("99",e),maketext("Age = %d,  A02_RELTOHHH = %d, Industry Code = %d",A07_AGE(e),A02_RELTOHHH(e),E10_industrycode(e)),"E10.10","  Relationship with the head is inconsistent with the industry code.","E03_jobbus", "E10_industrycode", "E")	
					endif;
			else
				if E01_work(e) <> notappl then
					dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d",A07_AGE(e),E01_work(e)),"E01.3"," Worked at least 1 hour is for five years old and over.","A07_AGE", "E01_work", "E")
				endif;
				
				if E02_workarrange(e) <> notappl then
					dispError("E",edit("99",e),maketext("Age = %d, Work at least an hour = %d",A07_AGE(e),E01_work(e)),"E02.3"," Worked at least 1 hour is for five years old and over.", "A07_AGE","E01_work", "E")
				endif;
				
				if E03_jobbus(e) <> notappl then
					dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d",A07_AGE(e), E03_jobbus(e)),"E03.3"," Job/business indicator is for five years old and over.","A07_AGE", "E03_jobbus", "E")
				endif;
				
				if E04_engage(e) <> notappl then
					dispError("E",edit("99",e),maketext("Age = %d, Online Platform indicator = %d",A07_AGE(e),E04_engage(e)),"E04.4"," Worked at least 1 hr, online platform indicator is for five years old and over.","A07_AGE", "E03_jobbus", "E")
				endif;
				
				if e05_provcitymuncode(e) <> notappl then
					dispError("E",edit("99",e),maketext("Age = %d, PrvCityMun = %d",A07_AGE(e), e05_provcitymuncode(e)),"E05.6"," Location of work is for five years old and over.","A07_AGE", "e05_provcitymuncode", "E")
				endif;
				
				if E07_PROCC(e) <> "" then
					dispError("E",edit("99",e),maketext("Age = %d, With work = %s",A07_AGE(e), E07_PROCC(e)),"E07.3"," With work, job or business occupation is for five years old and over.","A07_AGE", "E07_PROCC", "E")
				endif;
			
				if E08_procccode(e) <> notappl then
					dispError("E",edit("99",e),maketext("Age = %d, Occupation = %d",A07_AGE(e), E08_procccode(e)),"E08.9"," Occupation is for five years old and over.","A07_AGE", "E08_procccode", "E")
				endif;
				
				if E09_industry(e) <> "" then
					dispError("E",edit("99",e),maketext("Age = %d, Industry = %s",A07_AGE(e), E09_industry(e)),"E09.3"," With work, job or business, kind of industry is for five years old and over.","A07_AGE", "E09_industry", "E")
				endif;
				
				if E10_industrycode(e) <> notappl then	
					dispError("E",edit("99",e),maketext("Age = %d, Industry Code = %d",A07_AGE(e),E10_industrycode(e)),"E10.9"," No work, invalid entry .","A07_AGE", "E10_industrycode", "E")	
				endif;				
			endif; //if A07_AGE(e) >= 1 then
		
		if A07_AGE(e) >= 15 then			
		//E11
			if  B06_OFI(e) in 4:5,7 and (E01_WORK(e) in 1 and e03_jobbus(e)  = 1) and e11_employ(e)  = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Nature of Employment = blank",A07_AGE(e),B06_OFI(e),E03_jobbus(e)),"E11.1"," With work, job or business, Nature of employment must have an entry .","e03_jobbus", "e11_employ", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) in 1 or e03_jobbus(e)  = 1) and not invalueset(e11_employ(e))  then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Nature of Employment = %d",A07_AGE(e),B06_OFI(e),E03_jobbus(e),e11_employ(e)),"E11.2"," With work, job or business, Nature of employment must have an entry .","e03_jobbus", "e11_employ", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) in 2 or e03_jobbus(e) in 2:3) and invalueset(e11_employ(e))  then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Nature of Employment = %d",A07_AGE(e),B06_OFI(e),E03_jobbus(e),e11_employ(e)),"E11.3"," No work, job or business, invalid entry for Nature of employment.","e03_jobbus", "e11_employ", "E")
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e11_employ(e))  then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Nature of Employment = %d",A07_AGE(e),B06_OFI(e),e11_employ(e)),"E11.4"," Overseas Filipino Worker not included.","e03_jobbus", "e11_employ", "E")			
			endif;
		
		//E12
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e12_pwhrs(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Normal Working Hour = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),"E12.1"," Worked at least 1 hour, or with job/business, normal working hours must have an entry.","e03_jobbus", "e12_pwhrs", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not e12_pwhrs(e) in 1:16 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Normal Working Hour = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e), e12_pwhrs(e)),"E12.2"," Worked at least 1 hour, or with job/business, normal working hours must have an entry.","e03_jobbus", "e12_pwhrs", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 or e03_jobbus(e) <> 1) and not e12_pwhrs(e) in 1:16 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Normal Working Hour = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e), e12_pwhrs(e)),"E12.3","No work, job or business, invalid entry for normal working hours.","e03_jobbus", "e12_pwhrs", "E")			
			elseif B06_OFI(e) in 1:3,6 and e12_pwhrs(e) in 1:16 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Normal Working Hour = %d",A07_AGE(e),B06_OFI(e), e12_pwhrs(e)),"E12.4","Overseas Filipino Worker not included.","B06_OFI", "e12_pwhrs", "E")
			endif;
		
		
		//E13
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e13_pwdays(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Number of Days = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),"E13.1"," Worked at least 1 hour, or with job/business, number of days worked must have an entry.","e03_jobbus", "e13_pwdays", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not e13_pwdays(e) in 0:7 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Number of Days = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e13_pwdays(e)),"E13.2"," Worked at least 1 hour, or with job/business, invalid number of days worked.","e03_jobbus", "e13_pwdays", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 or e03_jobbus(e) = 1) and e13_pwdays(e) =0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Number of Days = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e13_pwdays(e)),"E13.3"," Did not work but with job/business, invalid if zero in number of days worked.","e03_jobbus", "e13_pwdays", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 or e03_jobbus(e) in 2:3) and not e13_pwdays(e) in 0:7 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Number of Days = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e13_pwdays(e)),"E13.4"," No work, job, or business, invalid entry for number of days worked.","e03_jobbus", "e13_pwdays", "E")		
			elseif B06_OFI(e) in 1:3,6 and e13_pwdays(e) in 0:7 then
				dispError("E",edit("99",e),maketext("Age = %d, Number of Days = %d",A07_AGE(e),e13_pwdays(e)),"E13.5"," Overseas Filipino Worker not included.","e03_jobbus", "e13_pwdays", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 and e21_pwojobbus = 2) and e13_pwdays(e) in 0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Other Job/Business Indicator = %d, Number of Days = %d",A07_AGE(e),B06_OFI(e),e21_pwojobbus(e),e13_pwdays(e)),"E13.7"," Worked at least 1 hour, and with other job/business, invalid entry for number of days worked.","e21_pwojobbus", "e13_pwdays", "E")			
			endif;
		
		//E14
			if B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e14_pwtothrs(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E14.1","Worked at least 1 hour, or with job/business, total number of hours worked must have an entry","e03_jobbus", "e14_pwtothrs", "E")			
			elseif B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not e14_pwtothrs(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.2","Worked at least 1 hour, or with job/business, invalid entry for total number of hours worked.","e03_jobbus", "e14_pwtothrs", "E")			
			elseif B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 2 and e03_jobbus(e) = 1) and not e14_pwtothrs(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.3","Did not work but with job/business, invalid if zero in  total number of hours worked.","e03_jobbus", "e14_pwtothrs", "E")			
			elseif B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and e14_pwtothrs(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.4","No work, job or business, invalid entry for total number of hours worked.","e03_jobbus", "e14_pwtothrs", "E")			
			elseif B06_OFI(e) in 1,2,3,6 and e14_pwtothrs(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Total Hours Worked = %d",A07_AGE(e),B06_OFI(e),e14_pwtothrs(e)),
				"E14.5","Overseas Filipino Worker not included.","e03_jobbus", "e14_pwtothrs", "E")			
			elseif B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 1 and  e21_pwojobbus(e) in 2) and e14_pwtothrs(e) = 0 then
				dispError("E",edit("99",e),maketext("Age = %d, Other Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),e21_pwojobbus(e),e14_pwtothrs(e)),
				"E14.11","Worked at least 1 hour  and no job/business, invalid if zero in total number of hours worked.","e03_jobbus", "e14_pwtothrs", "E")			
			endif;
		
		//E15
			if B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e15_pwmorhrs(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, More Hours Worked = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E15.1"," Worked at least 1 hour, or with job/business, want more hours of work must have an entry","e03_jobbus", "e15_pwmorhrs", "E")			
			elseif B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e15_pwmorhrs(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, More Hours Worked = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e15_pwmorhrs(e)),
				"E15.2"," Worked at least 1 hour, or with job/business, want more hours of work must have an entry","e03_jobbus", "e15_pwmorhrs", "E")			
			elseif B06_OFI(e) in 4:5, 7 and (E01_WORK(e) = 1 or e03_jobbus(e) in 2:3) and invalueset(e15_pwmorhrs(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, More Hours Worked = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e15_pwmorhrs(e)),
				"E15.3","No work, job or business, invalid entry for want more hours of work","e03_jobbus", "e15_pwmorhrs", "E")			
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e15_pwmorhrs(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, More Hours Worked = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e15_pwmorhrs(e)),
				"E15.4","Overseas Filipino Worker not included","e03_jobbus", "e15_pwmorhrs", "E")	
			endif;
		
		//E16
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e16_pwaddwork(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Additional Work = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E16.1","Worked at least 1 hour, or with job/business,  look for additional work must have an entry","e03_jobbus", "e16_pwaddwork", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e16_pwaddwork(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Additional Work = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e16_pwaddwork(e)),
				"E16.2","Worked at least 1 hour, or with job/business, invalid entry for  look for additional work","e03_jobbus", "e16_pwaddwork", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and invalueset(e16_pwaddwork(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Additional Work = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e16_pwaddwork(e)),
				"E16.3","No work, job or business, invalid entry for want more hours of work","e03_jobbus", "e16_pwaddwork", "E")			
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e16_pwaddwork(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Additional Work = %d",A07_AGE(e),B06_OFI(e),e16_pwaddwork(e)),
				"E16.4","Overseas Filipino Worker not included","e03_jobbus", "e16_pwaddwork", "E")						
			endif;
			
		//E17
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e17_frstwork(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, First Time to Do Any Work = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E17.1","Worked at least 1 hour, or with job/business, first time to do any work must have an entry.","e03_jobbus", "e17_frstwork", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e17_frstwork(e))then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, First Time to Do Any Work = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e17_frstwork(e)),
				"E17.2","Worked at least 1 hour, or with job/business, invalid entry for first time to do any work.","e03_jobbus", "e17_frstwork", "E")			
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and invalueset(e17_frstwork(e))then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, First Time to Do Any Work = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e17_frstwork(e)),
				"E17.3","No work, job or business, invalid entry for first time to do any work.","e03_jobbus", "e17_frstwork", "E")			
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e17_frstwork(e))then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, First Time to Do Any Work = %d",A07_AGE(e),B06_OFI(e),e17_frstwork(e)),
				"E17.4","Overseas Filipino Worker not included.","e03_jobbus", "e17_frstwork", "E")
			elseif A07_AGE(e) in 31:34 and B06_OFI(e) in 1,2,3,6 and (E01_WORK(e) = 1 or e03_jobbus(e) in 1) and e17_frstwork(e) =1 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, First Time to Do Any Work = %d",A07_AGE(e),B06_OFI(e),e17_frstwork(e)),
				"E17.6","Age greater than 30, yes in first time to do any work, please verify.","e03_jobbus", "e17_frstwork", "E")	
			elseif A07_AGE(e) in 35:130 and B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) in 1) and e17_frstwork(e) =1 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, First Time to Do Any Work = %d",A07_AGE(e),B06_OFI(e),e17_frstwork(e)),
				"E17.7"," Age is 35 to 130, yes in first time to do any work, please verify.","e03_jobbus", "e17_frstwork", "E")	
			endif;
		
		//E18
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E18.1","Worked at least 1 hour, or with job/business, class of worker must have an entry.","e03_jobbus", "e18_class", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e18_class(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E18.2","Worked at least 1 hour, or with job/business, class of worker must have an entry.","e03_jobbus", "e18_class", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and A02_RELTOHHH(e) = 25 and E10_INDUSTRYCODE(e) = 9640 and e18_class(e) <> 0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Relationship to HHH = 25, Class of Worker = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E18.3","Relationship of the HH Head (Domestic helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and A02_RELTOHHH(e) = 25 and E10_INDUSTRYCODE(e) <> 9640 and e18_class(e) <> 0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Relationship to HHH = 25, Class of Worker = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E18.4","Relationship of the HH Head (Domestic helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and A02_RELTOHHH(e) = 25 and E10_INDUSTRYCODE(e) <> 9640 and e18_class(e) = 0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Relationship to HHH = 25, Class of Worker = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E18.5","Relationship of the HH Head (Domestic helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and A02_RELTOHHH(e) <> 25 and E10_INDUSTRYCODE(e) = 9640 and e18_class(e) <> 0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Relationship to HHH = 25, Class of Worker = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E18.6","Relationship of the HH Head (Not Domestic Helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and E11_EMPLOY(e) = 3 and e18_class(e) in 2:4,6 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Nature of Employment = 3, Class of Worker = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E18.7","Nature of Employment is inconsistent with the class of worker.","e03_jobbus", "e18_class", "E")	
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 or e03_jobbus(e) in 2:3) and invalueset(e18_class(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Nature of Employment = 3, Class of Worker = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E18.15","No work, job or business, invalid entry for class of worker.","e03_jobbus", "e18_class", "E")	
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e18_class(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, Class of Worker = %d",A07_AGE(e),e18_class(e)),
				"E18.16","Overseas Filipino Worker not included.","e03_jobbus", "e18_class", "E")				
			endif;
		
		//E19
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) in 0:2,5 and E19_CLASSPAYCODE(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = blank",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e)),
				"E19.1"," Class of worker is 0, 1, 2, 5, basis of payment must have an entry.","e03_jobbus", "E19_CLASSPAYCODE", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) in 0:2,5 and not invalueset(E19_CLASSPAYCODE(e))  then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),E19_CLASSPAYCODE(e)),
				"E19.2","Class of worker is 0, 1, 2, 5, invalid entry for basis of payment.","e03_jobbus", "E19_CLASSPAYCODE", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) in 3,4,6 and invalueset(E19_CLASSPAYCODE(e))  then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),E19_CLASSPAYCODE(e)),
				"E19.3","Class of worker is 3, 4, 6, invalid entry for basis of payment.","e03_jobbus", "E19_CLASSPAYCODE", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 or e03_jobbus(e) in 2:3) and invalueset(E19_CLASSPAYCODE(e))  then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Basis of Payment = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),E19_CLASSPAYCODE(e)),
				"E19.4","No work, job or business, invalid entry for basis of payment.","e03_jobbus", "E19_CLASSPAYCODE", "E")
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(E19_CLASSPAYCODE(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Basis of Payment = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),E19_CLASSPAYCODE(e)),
				"E19.5"," Overseas Filipino Worker not included.","e03_jobbus", "E19_CLASSPAYCODE", "E")
			elseif B06_OFI(e) in 4:5,7 and  (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and E18_CLASS(e) = 2 and E19_CLASSPAYCODE(e) in 0,1,5 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d,Class of Worker = 2, Basis of Payment = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),E19_CLASSPAYCODE(e)),
				"E19.7"," With Work or Job/Business and class of worker categories 2 and basis of payment is equals to categories: 0,1,5.","E18_CLASS", "E19_CLASSPAYCODE", "E")	
			endif;
		
		
		//E19a
			if E19_CLASSPAYCODE(e) in 6:7 and E19a_CLASSPAYCODE = "" then
				dispError("E",edit("99",e),maketext("Age = %d, Basis of Payment = %d",A07_AGE(e),e18_class(e)),
				"E19a.1"," Class of worker is 0, 1, 2, 5, basis of payment must have an entry.","A07_AGE", "E19_CLASSPAYCODE", "E")
			elseif E19_CLASSPAYCODE(e) in 0:5 and E19a_CLASSPAYCODE <> "" then 
				dispError("E",edit("99",e),maketext("Age = %d, Basis of Payment = %d",A07_AGE(e),e18_class(e)),
				"E19a.2"," Class of worker is 0, 1, 2, 5 and basis of payment is 0, 1, 2, 3, 4, 5, invalid entry.","A07_AGE", "E19_CLASSPAYCODE", "E")
			endif;
		
		//E20
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) in 0:2,5 and E19_CLASSPAYCODE(e) in 0:4 and E20_CLASSPAYPDAY(e) in 0, notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d, Basis of Payment per day = blank ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),  E19_CLASSPAYCODE(e)),
				"E20.1"," Class of worker is 0, 1, 2, 5 and basis of payment is 0:4, basis of payment per day must have an entry.","E19_CLASSPAYCODE", "E20_CLASSPAYPDAY", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) in 0:2,5 and E19_CLASSPAYCODE(e) in 0:4 and not invalueset(E20_CLASSPAYPDAY(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d, Basis of Payment per day = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),  E19_CLASSPAYCODE(e),E20_CLASSPAYPDAY(e)),
				"E20.2"," Class of worker is 0, 1, 2, 5 and basis of payment is 0:4, invalid entry for basis of payment per day.","E19_CLASSPAYCODE", "E20_CLASSPAYPDAY", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) in 0:2,5 and E19_CLASSPAYCODE(e) in 5:7 and invalueset(E20_CLASSPAYPDAY(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d, Basis of Payment per day = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),  E19_CLASSPAYCODE(e),E20_CLASSPAYPDAY(e)),
				"E20.3"," Class of worker is 0, 1, 2, 5 and basis of payment is 5:7, invalid entry for basis of payment per day.","E19_CLASSPAYCODE", "E20_CLASSPAYPDAY", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and invalueset(E20_CLASSPAYPDAY(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Basis of Payment per day = %d ",A07_AGE(e),B06_OFI(e), e03_jobbus(e), E20_CLASSPAYPDAY(e)),
				"E20.4"," No work, job or business, invalid entry for class of worker.","e03_jobbus", "E20_CLASSPAYPDAY", "E")
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(E20_CLASSPAYPDAY(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d, Basis of Payment per day = blank ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),  E19_CLASSPAYCODE(e)),
				"E20.5"," Overseas Filipino Worker not included.","e03_jobbus", "E20_CLASSPAYPDAY", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and E18_CLASS(e) in 0:2,5 and E19_CLASSPAYCODE(e) in 0:4 and E20_CLASSPAYPDAY(e) > 10000 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d, Basis of Payment per day = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),  E19_CLASSPAYCODE(e), E20_CLASSPAYPDAY(e)),
				"E20.7"," Basic pay PER DAY is greater than P 10000, pls verify.","E19_CLASSPAYCODE", "E20_CLASSPAYPDAY", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and E18_CLASS(e) in 0:2,5 and E19_CLASSPAYCODE(e) in 0:4 and E20_CLASSPAYPDAY(e) > 1000 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d, Basis of Payment per day = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),  E19_CLASSPAYCODE(e), E20_CLASSPAYPDAY(e)),
				"E20.8"," Basic pay PER DAY is greater than P 1000, pls verify.","E19_CLASSPAYCODE", "E20_CLASSPAYPDAY", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and E18_CLASS(e) in 0:2,5 and E19_CLASSPAYCODE(e) in 0:4 and E20_CLASSPAYPDAY(e) < 50 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Class of Worker = %d, Basis of Payment = %d, Basis of Payment per day = %d",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e18_class(e),  E19_CLASSPAYCODE(e), E20_CLASSPAYPDAY(e)),
				"E20.9"," Basic pay PER DAY is less than P50, pls verify.","E19_CLASSPAYCODE", "E20_CLASSPAYPDAY", "E")
			endif;
			
		//E21
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e21_pwojobbus(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Other Job Indicator = blank ",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E21.1"," Worked at least 1 hour, or with job/business, other job indicator must have an entry.","e03_jobbus", "e21_pwojobbus", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e21_pwojobbus(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Other Job Indicator = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e21_pwojobbus(e)),
				"E21.2"," Worked at least 1 hour, or with job/business, invalid entry for other job indicator.","e03_jobbus", "e21_pwojobbus", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and invalueset(e21_pwojobbus(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Other Job Indicator = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e21_pwojobbus(e)),
				"E21.3"," No work, job or business, invalid entry for other job indicator.","e03_jobbus", "e21_pwojobbus", "E")
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e21_pwojobbus(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Other Job Indicator  = %d ",A07_AGE(e),B06_OFI(e),e21_pwojobbus(e)),
				"E21.4"," Overseas Filipino Worker not included.","B06_OFI", "e21_pwojobbus", "E")			
			endif;
			//COMMENT E21.9-11 for confirmation with SMD
			
		//E22
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e21_pwojobbus(e) = 1 and e22_pwtotjobs(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Other Job Indicator  = 1, Total Number of Job/s = blank ",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E22.1","With other job/business, total number of job/s must have an entry.","e21_pwojobbus", "e22_pwtotjobs", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e21_pwojobbus(e) = 1 and not invalueset(e22_pwtotjobs(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Other Job Indicator  = 1, Total Number of Job/s = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e22_pwtotjobs(e)),
				"E22.2","With other job/business, invalid entry for total number of job/s.","e21_pwojobbus", "e22_pwtotjobs", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e21_pwojobbus(e) = 2 and invalueset(e22_pwtotjobs(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Other Job Indicator  = 2, Total Number of Job/s = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e22_pwtotjobs(e)),
				"E22.3","Without other jobs, invalid entry for total number of job/s.","e21_pwojobbus", "e22_pwtotjobs", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and invalueset(e22_pwtotjobs(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Number of Job/s = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e22_pwtotjobs(e)),
				"E22.4","No work, job or business, invalid entry for total number of job/s.","e21_pwojobbus", "e22_pwtotjobs", "E")
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e22_pwtotjobs(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Total Number of Job/s = %d ",A07_AGE(e),B06_OFI(e),e22_pwtotjobs(e)),
				"E22.4","Overseas Filipino Worker not included.","B06_OFI", "e22_pwtotjobs", "E")
			endif;
		
		//E23
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e23_pwtothrsaj(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = blank ",A07_AGE(e),B06_OFI(e),e03_jobbus(e)),
				"E23.1","Worked at least 1 hour, or with job/business, total hours worked for all jobs must have an entry.","B06_OFI", "e23_pwtothrsaj", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e23_pwtothrsaj(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e23_pwtothrsaj(e)),
				"E23.2"," Worked at least 1 hour, or with job/business, invalid entry for total hours worked for all jobs.","B06_OFI", "e23_pwtothrsaj", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 and e03_jobbus(e) = 1) and e23_pwtothrsaj(e) <> e14_pwtothrs(e) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d, Total Number of Hours Worked  = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e23_pwtothrsaj(e), e14_pwtothrs(e)),
				"E23.3","Did not work but with job/business, invalid if zero in  total number of hours worked.","e23_pwtothrsaj", "e14_pwtothrs", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 and e03_jobbus(e) = 1) and e23_pwtothrsaj(e) < e14_pwtothrs(e) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d, Total Number of Hours Worked  = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e23_pwtothrsaj(e), e14_pwtothrs(e)),
				"E23.4","No work, job or business, invalid entry for total number of hours worked.","e23_pwtothrsaj", "e14_pwtothrs", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 and e03_jobbus(e) = 1) and e23_pwtothrsaj(e) = 0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e23_pwtothrsaj(e)),
				"E23.5","Overseas Filipino Worker not included.","B06_OFI", "e23_pwtothrsaj", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and e23_pwtothrsaj(e) = 0 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e23_pwtothrsaj(e)),
				"E23.6","No work, job or business, invalid entry for total hours worked for all jobs.","B06_OFI", "e23_pwtothrsaj", "E")
			elseif B06_OFI(e) in 1,2,3,6 and invalueset(e23_pwtothrsaj(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Total Hours Worked for All Jobs = %d ",A07_AGE(e),B06_OFI(e),e23_pwtothrsaj(e)),
				"E23.7","Overseas Filipino Worker not included.","B06_OFI", "e23_pwtothrsaj", "E")
			elseif (E01_WORK(e) = 1 or e03_jobbus(e) in 1) and e23_pwtothrsaj(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d ",A07_AGE(e),e03_jobbus(e),e23_pwtothrsaj(e)),
				"E23.9","Worked at least 1 hour, or with job/business, total hours worked for all jobs must have an entry.","e03_jobbus", "e23_pwtothrsaj", "E")
			elseif (E01_WORK(e) = 1 or e03_jobbus(e) in 1) and not invalueset(e23_pwtothrsaj(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e23_pwtothrsaj(e)),
				"E23.10","Worked at least 1 hour, or with job/business, invalid entry for total hours worked for all jobs.","e03_jobbus", "e23_pwtothrsaj", "E")
			elseif (E01_WORK(e) = 1 and e03_jobbus(e) in 2) and e23_pwtothrsaj(e) <> e14_pwtothrs(e) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Total Hours Worked for All Jobs = %d, Total Number of Hours Worked  = %d, ",A07_AGE(e),B06_OFI(e),e03_jobbus(e), e23_pwtothrsaj(e), e14_pwtothrs(e)),
				"E23.11","No other job/s, inconsistent with total number of hours worked (E14).","e03_jobbus", "e23_pwtothrsaj", "E")
			elseif (E01_WORK(e) = 1 and e03_jobbus(e) in 1) and e21_pwojobbus(e) = 1 and e23_pwtothrsaj(e) < e14_pwtothrs(e) then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d,  Other job indicator = 1, Total Hours Worked for All Jobs = %d, Total Number of Hours Worked  = %d, ",A07_AGE(e),e03_jobbus(e), e23_pwtothrsaj(e), e14_pwtothrs(e)),
				"E23.12","With other job/s, inconsistent with total number of hours worked (E14).","e23_pwtothrsaj", "e14_pwtothrs", "E")
			elseif E01_WORK(e) = 1 and e23_pwtothrsaj(e) = 0 then
				dispError("E",edit("99",e),maketext("Age = %d,Worked at least 1 hour = 1, Basis of Payment per day = 0",A07_AGE(e)),
				"E23.13","Worked at least 1 hour, invalid entry if zero in total hours worked for all jobs.","e23_pwtothrsaj", "e14_pwtothrs", "E")
			elseif (E01_WORK(e) = 2 and e03_jobbus(e) in 2:3) and invalueset(e23_pwtothrsaj(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, Worked at least 1 hour = %d, Job/Business Indicator = %d, Basis of Payment per day = %d ",A07_AGE(e),E01_WORK(e),e03_jobbus(e),e23_pwtothrsaj(e)),
				"E23.14","No work, job or business, invalid entry for total hours worked for all jobs.","E01_WORK", "e20_pwtothrsaj", "E")
			endif;
			
			
		//E24
			if B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e23_pwtothrsaj(e) > 48 and not e24_pwreason(e) in 11:15,99 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Basis of Payment per day = 48 and Worked more than 48hrs = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e24_pwreason(e)),
				"E24.1","Main reason why worked more than 48 hours is not in categories: 11 Wanted more earnings, 12 Requirements of the job, 13 Exceptional week 14 Ambition, passion for job, 15 Due to Covid-19 Pandemic Community Quarantine, 19 Others, specify.","e23_pwtothrsaj", "e24_pwreason", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e23_pwtothrsaj(e) < 40 and not e24_pwreason(e) in 20:32,99 then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Basis of Payment per day = 48 and Worked more than 48hrs = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e24_pwreason(e)),
				"E24.2","Main reason why worked less than 40 hours is not categories: 20 Variable working time/nature of work, 21 Holidays, 22 Poor business condition, 23 Reduction in clients/work, 24 Low or off season, 25 Bad weather, natural disaster, 26 Strike or labour dispute, 27 Start/end/change of job, 28 Could only find part time work, 29 School training, 30 Personal/family reasons, 31 Health/medical limitations,  32 ECQ/Lockdown/Covid-19 Pandemic, 99 Others, specify.","e23_pwtothrsaj", "e24_pwreason", "E")
			elseif B06_OFI(e) in 4:5,7 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not e23_pwtothrsaj(e) in 40:48 and invalueset(e24_pwreason(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, OFI = %d, Job/Business Indicator = %d, Basis of Payment per day = 48 and Worked more than 48hrs = %d ",A07_AGE(e),B06_OFI(e),e03_jobbus(e),e24_pwreason(e)),
				"E24.3","Worked within 40:48 hours, invalid entry for main reason why worked more than 48 or less than 40 hours.","B06_OFI", "e23_pwtothrsaj", "E")
			endif;			
		else
			if e11_employ(e) <>  notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Nature of Employment = %d",A07_AGE(e), e11_employ(e)),"E11.5"," Age is less than 15 years old, invalid entry.","A07_AGE", "e11_employ", "E")			
			endif;
			if e12_pwhrs(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Normal Working Hour = %d",A07_AGE(e), e12_pwhrs(e)),"E12.5","Age is less than 15 years old, invalid entry.","A07_AGE", "e12_pwhrs", "E")			
			endif;
			if e13_pwdays(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Number of Days = %d",A07_AGE(e),e13_pwdays(e)),"E13.6"," Age is less than 15 years old, invalid entry.","e03_jobbus", "e13_pwdays", "E")			
			endif;
			if A07_AGE(e) in 5:14 and E01_WORK(e) = 1 and e03_jobbus(e) in 1 and e13_pwdays(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d,Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.6","Worked at least 1 hour, or with job/business, total number of hours worked must have an entry.","e03_jobbus", "e14_pwtothrs", "E")			
			endif;
			if A07_AGE(e) in 5:14 and E01_WORK(e) = 1 and e03_jobbus(e) in 1 and e13_pwdays(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.7","Worked at least 1 hour, or with job/business, invalid entry for total number of hours worked.","e03_jobbus", "e14_pwtothrs", "E")			
			endif;
			if A07_AGE(e) in 5:14 and E01_WORK(e) = 2 and e03_jobbus(e) in 1 and e13_pwdays(e) in 0 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.8","Did not work but with job/business, invalid if zero in  total number of hours worked.","e03_jobbus", "e14_pwtothrs", "E")			
			endif;
			if A07_AGE(e) in 5:14 and E01_WORK(e) = 2 and e03_jobbus(e) in 2:3 and e13_pwdays(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.9","No work, job or business, invalid entry for total number of hours worked.","e03_jobbus", "e14_pwtothrs", "E")			
			endif;
			if A07_AGE(e) < 5 and e13_pwdays(e) in 0:112 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Total Hours Worked = %d",A07_AGE(e),e03_jobbus(e),e14_pwtothrs(e)),
				"E14.10","Age is less than 15 years old, invalid entry.","e03_jobbus", "e14_pwtothrs", "E")			
			endif;
			if e15_pwmorhrs(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, More Hours Worked = %d",A07_AGE(e),e15_pwmorhrs(e)),
				"E15.5","Age is less than 15 years old, invalid entry","e03_jobbus", "e15_pwmorhrs", "E")	
			endif;
			if e16_pwaddwork(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Additional Work = %d",A07_AGE(e),e16_pwaddwork(e)),
				"E16.5","Age is less than 15 years old, invalid entry.","e03_jobbus", "e16_pwaddwork", "E")			
			endif;
			if e17_frstwork(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, First Time to Do Any Work = %d",A07_AGE(e),e17_frstwork(e)),
				"E17.5"," Age is less than 15 years old, invalid entry.","e03_jobbus", "e17_frstwork", "E")	
			endif;
			if  A07_AGE(e) in 5:14 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e18_class(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Class of Worker = %d",A07_AGE(e),e03_jobbus(e),e18_class(e)),
				"E18.8","Worked at least 1 hour, or with job/business, class of worker must have an entry.","e03_jobbus", "e18_class", "E")		
			endif;	
			if  A07_AGE(e) in 5:14 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e18_class(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Class of Worker = %d",A07_AGE(e),e03_jobbus(e),e18_class(e)),
				"E18.9","Worked at least 1 hour, or with job/business, invalid entry for class of worker.","e03_jobbus", "e18_class", "E")		
			endif;
			if  A07_AGE(e) in 5:14 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e18_class(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Class of Worker = %d",A07_AGE(e),e03_jobbus(e),e18_class(e)),
				"E18.10","Relationship of the HH Head (Domestic helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")		
			endif;
			if  A07_AGE(e) in 5:14 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and A02_RELTOHHH(e) = 24 and E10_INDUSTRYCODE(e) = 9640 and e18_class(e) <> 0 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Relationship to HHH = 24, Industry Code = 9640, Class of Worker = %d",A07_AGE(e),e03_jobbus(e),e18_class(e)),
				"E18.11","Relationship of the HH Head (Domestic helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")		
			endif;
			if  A07_AGE(e) in 5:14 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and A02_RELTOHHH(e) = 24 and E10_INDUSTRYCODE(e) <> 9640 and e18_class(e) = 0 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Relationship to HHH = 24, Industry Code = %d, Class of Worker = %d",A07_AGE(e),e03_jobbus(e),E10_INDUSTRYCODE(e),e18_class(e)),
				"E18.12","Relationship of the HH Head (Domestic helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")		
			endif;
			if  A07_AGE(e) in 5:14 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and A02_RELTOHHH(e) <> 24 and E10_INDUSTRYCODE(e) = 9640 and e18_class(e) = 0 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Relationship to HHH = %d, Industry Code = 9640, Class of Worker = %d",A07_AGE(e),e03_jobbus(e),A02_RELTOHHH(e),e18_class(e)),
				"E18.13","Relationship of the HH Head (Not Domestic Helper) is inconsistent with industry code and class of worker.","e03_jobbus", "e18_class", "E")		
			endif;
			if  A07_AGE(e) in 5:14 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and E11_EMPLOY(e) = 3 and e18_class(e) in 2:4,6 then
				dispError("E",edit("99",e),maketext("Age = %d, Job/Business Indicator = %d, Nature of Employment = 3, Class of Worker = %d",A07_AGE(e),e03_jobbus(e),e18_class(e)),
				"E18.14","Nature of Employment is inconsistent with the class of worker.","e03_jobbus", "e18_class", "E")		
			endif;
			if e18_class(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Class of Worker = %d",A07_AGE(e),e18_class(e)),
				"E18.17","Age is less than 5 years old, invalid entry.","A07_AGE", "e18_class", "E")	
			endif;
			if E19_CLASSPAYCODE(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Class of Worker = %d",A07_AGE(e),e18_class(e)),
				"E19.6","Age is less than 15 years old, invalid entry.","A07_AGE", "E19_CLASSPAYCODE", "E")	
			endif;
			if E20_CLASSPAYPDAY(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Basis of Payment per day = %d",A07_AGE(e), E20_CLASSPAYPDAY(e)),
				"E20.6"," Age is less than 15 years old, invalid entry.","A07_AGE", "E20_CLASSPAYPDAY", "E")
			endif;
			if A07_AGE(e) < 005 and e21_pwojobbus(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Other Job Indicator  = %d ",A07_AGE(e),e21_pwojobbus(e)),
				"E21.5"," Age is less than 5 years old, invalid entry.","A07_AGE", "e21_pwojobbus", "E")
			endif;
			if A07_AGE(e) in 005:014 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and e21_pwojobbus(e) = notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Other Job Indicator  = blank ",A07_AGE(e)),
				"E21.6"," Worked at least 1 hour, or with job/business, other job indicator must have an entry.","A07_AGE", "e21_pwojobbus", "E")
			endif;
			if A07_AGE(e) in 005:014 and (E01_WORK(e) = 1 or e03_jobbus(e) = 1) and not invalueset(e21_pwojobbus(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, Other Job Indicator  = %d ",A07_AGE(e),e21_pwojobbus(e)),
				"E21.7","Worked at least 1 hour, or with job/business, invalid entry for other job indicator.","A07_AGE", "e21_pwojobbus", "E")
			endif;
			if A07_AGE(e) in 005:014 and (E01_WORK(e) = 2 and e03_jobbus(e) = 2) and invalueset(e21_pwojobbus(e)) then
				dispError("E",edit("99",e),maketext("Age = %d, Other Job Indicator  = %d ",A07_AGE(e),e21_pwojobbus(e)),
				"E21.8","No work, job or business, invalid entry for other job indicator.","A07_AGE", "e21_pwojobbus", "E")
			endif;
			if e22_pwtotjobs(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Total number of job/s  = %d ",A07_AGE(e),e22_pwtotjobs(e)),
				"E22.6","Age is less than 5 years old, invalid entry.","A07_AGE", "e22_pwtotjobs", "E")
			endif;
			if e23_pwtothrsaj(e) <> notappl then
				dispError("E",edit("99",e),maketext("Age = %d, Total number of job/s  = %d ",A07_AGE(e),e23_pwtothrsaj(e)),
				"E22.8","Age is less than 5 years old, invalid entry.","A07_AGE", "e23_pwtothrsaj", "E")
			endif;
			

		
		endif; //if A07_AGE(e) >= 5 then
		
		endif; //if LNO(e) <> notappl then
	enddo; //do varying numeric e = 1 while e <= soccurs(SECTION_E)
	
	
	//============= SECTION F ==================
		//F01
			if f01_foodconsum = notappl then
				dispError("E","00",maketext("Family produce goods = blank"),"F01.1","Family produce goods mainly for home consumption must not be blank.", "f01_foodconsum","--", "F")
			elseif not invalueset(f01_foodconsum) then
				dispError("E","00",maketext("Family produce goods = %d",f01_foodconsum ),"F01.2"," Choose from the given categories (1 to 2).", "f01_foodconsum","--", "F")
			endif;
		//F02
			if f02_afishing = notappl then
				dispError("E","00",maketext("Family sustenace activity (A) = blank"),"F02a.1","(A) Family sustenace activity must not be blank.", "f02_afishing","--", "F")
			elseif not invalueset(f02_afishing) then
				dispError("E","00",maketext("Family sustenace activity (A) = %d",f02_afishing),"F02a.2","(A) Choose all that applies from the given categories (A to E).", "f02_afishing","--", "F")
			endif;
			if f02_blogging = notappl then
				dispError("E","00",maketext("Family sustenace activity (B) = blank"),"F02b.1","(B) Family sustenace activity must not be blank.", "f02_blogging","--", "F")
			elseif not invalueset(f02_blogging) then
				dispError("E","00",maketext("Family sustenace activity (B) = %d",f02_blogging),"F02b.2","(B) Choose all that applies from the given categories (A to E).", "f02_blogging","--", "F")
			endif;
			if F02_CHUNTING = notappl then
				dispError("E","00",maketext("Family sustenace activity (C) = blank"),"F02c.1","(C) Family sustenace activity must not be blank.", "F02_CHUNTING","--", "F")
			elseif not invalueset(F02_CHUNTING) then
				dispError("E","00",maketext("Family sustenace activity (C) = %d",F02_CHUNTING),"F02c.2","(C) Choose all that applies from the given categories (A to E).", "F02_CHUNTING","--", "F")
			endif;
			if F02_DFARMING = notappl then
				dispError("E","00",maketext("Family sustenace activity (D) = blank"),"F02d.1","(D) Family sustenace activity must not be blank.", "F02_DFARMING","--", "F")
			elseif not invalueset(F02_DFARMING) then
				dispError("E","00",maketext("Family sustenace activity (D) = %d",F02_DFARMING),"F02d.2","(D) Choose all that applies from the given categories (A to E).", "F02_DFARMING","--", "F")
			endif;
			if F02_ERAISING = notappl then
				dispError("E","00",maketext("Family sustenace activity (E) = blank"),"F02e.1","(E) Family sustenace activity must not be blank.", "F02_ERAISING","--", "F")
			elseif not invalueset(F02_ERAISING) then
				dispError("E","00",maketext("Family sustenace activity (E) = %d",F02_ERAISING),"F02e.2","(E) Choose all that applies from the given categories (A to E).", "F02_ERAISING","--", "F")
			endif;
			
		
		//F03
			list numeric entrep;
			list string entrepname;
			
			if visualvalue(f03_crop) = notappl then
				dispError("E","00",maketext("Crop Farming = blank"),"F03a.1","(A) Crop Farming must not be blank.", "f03_crop","--", "F")
			elseif not visualvalue(f03_crop) in 1:2 then
				dispError("E","00",maketext("Crop Farming = %d",f03_crop),"F03a.2","(A) Choose from the given categories.", "f03_crop","--", "F")
			else 
				entrep.add(f03_crop);
				entrepname.add("Crop Farming");
			endif;
			if F03_livestock = notappl then
				dispError("E","00",maketext("Livestock and Poultry = blank"),"F03b.1","(B) Livestock and Poultry raising must not be blank.", "F03_livestock","--", "F")
			elseif not invalueset(F03_livestock) then
				dispError("E","00",maketext("Livestock and Poultry = %d",F03_livestock),"F03b.2","(B) Choose from the given categories.", "F03_livestock","--", "F")
			else 
				entrep.add(F03_livestock);
				entrepname.add("Livestock and Poultry");
			endif;
			
			if f03_fish = notappl then
				dispError("E","00",maketext("Fishing = blank"),"F03c.1","(C) Crop Farming must not be blank.", "f03_fish","--", "F")
			elseif not invalueset(f03_fish) then
				dispError("E","00",maketext("Fishing  = %d",f03_fish),"F03c.2","(C) Choose from the given categories.", "f03_fish","--", "F")
			else 
				entrep.add(f03_fish);
				entrepname.add("Fishing");
			endif;
			
			if f03_forest = notappl then
				dispError("E","00",maketext("Forestry and Hunting = blank"),"F03d.1","(D) Forestry and Hunting must not be blank.", "f03_forest","--", "F")
			elseif not invalueset(f03_forest) then
				dispError("E","00",maketext("Forestry and Hunting  = %d",f03_forest),"F03d.2","(D) Choose from the given categories.", "f03_forest","--", "F")
			else 
				entrep.add(f03_forest);
				entrepname.add("Forestry and Hunting");
			endif;
			
			if F03_mining = notappl then
				dispError("E","00",maketext("Mining and quarrying = blank"),"F03e.1","(E) Mining and quarrying must not be blank.", "F03_mining","--", "F")
			elseif not invalueset(F03_mining) then
				dispError("E","00",maketext("Mining and quarrying  = %d",F03_mining),"F03e.2","(E) Choose from the given categories.", "F03_mining","--", "F")
			else 
				entrep.add(F03_mining);
				entrepname.add("Mining and quarrying");
			endif;
			
			if F03_manufac = notappl then
				dispError("E","00",maketext("Manufacturing = blank"),"F03f.1","(F) Manufacturing must not be blank.", "F03_manufac","--", "F")
			elseif not invalueset(F03_manufac) then
				dispError("E","00",maketext("Manufacturing = %d",F03_manufac),"F03f.2","(F) Choose from the given categories.", "F03_manufac","--", "F")
			else 
				entrep.add(F03_manufac);
				entrepname.add("Manufacturing");
			endif;
			
			if F03_electric = notappl then
				dispError("E","00",maketext("Electricity = blank"),"F03g.1","(G) Electricity must not be blank.", "F03_electric","--", "F")
			elseif not invalueset(F03_electric) then
				dispError("E","00",maketext("Electricity = %d",F03_electric),"F03g.2","(G) Choose from the given categories.", "F03_electric","--", "F")
			else 
				entrep.add(F03_electric);
				entrepname.add("Electricity");
			endif;
			
			if F03_water = notappl then
				dispError("E","00",maketext("Water supply and waste management = blank"),"F03h.1","(H) Water supply and waste management must not be blank.", "F03_water","--", "F")
			elseif not invalueset(F03_water) then
				dispError("E","00",maketext("Water supply and waste management = %d",F03_water),"F03h.2","(H) Choose from the given categories.", "F03_water","--", "F")
			else 
				entrep.add(F03_water);
				entrepname.add("Water supply and waste management");
			endif;
			
			if F03_construct = notappl then
				dispError("E","00",maketext("Construction = blank"),"F03i.1","(I) Construction must not be blank.", "F03_construct","--", "F")
			elseif not invalueset(F03_construct) then
				dispError("E","00",maketext("Construction = %d",F03_construct),"F03i.2","(I) Choose from the given categories.", "F03_construct","--", "F")
			else 
				entrep.add(F03_construct);
				entrepname.add("Construction");
			endif;
			
			if F03_wholesale = notappl then
				dispError("E","00",maketext("Wholesale and Retail = blank"),"F03j.1","(J) Wholesale and Retail must not be blank.", "F03_wholesale","--", "F")
			elseif not invalueset(F03_wholesale) then
				dispError("E","00",maketext("Wholesale and Retail = %d",F03_wholesale),"F03j.2","(J) Choose from the given categories.", "F03_wholesale","--", "F")
			else 
				entrep.add(F03_wholesale);
				entrepname.add("Wholesale and Retail");
			endif;
			
			if F03_transport = notappl then
				dispError("E","00",maketext("Transportation and Storage = blank"),"F03k.1","(K) Transportation and Storage must not be blank.", "F03_transport","--", "F")
			elseif not invalueset(F03_transport) then
				dispError("E","00",maketext("Transportation and Storage = %d",F03_transport),"F03k.2","(K) Choose from the given categories.", "F03_transport","--", "F")
			else 
				entrep.add(F03_transport);
				entrepname.add("Transportation and Storage");
			endif;
			
			if F03_comm = notappl then
				dispError("E","00",maketext("Communication Services = blank"),"F03l.1","(L) Communication Services must not be blank.", "F03_comm","--", "F")
			elseif not invalueset(F03_comm) then
				dispError("E","00",maketext("Communication Services = %d",F03_comm),"F03l.2","(L) Choose from the given categories.", "F03_comm","--", "F")
			else 
				entrep.add(F03_comm);
				entrepname.add("Communication Services");
			endif;
			
			if F03_accom = notappl then
				dispError("E","00",maketext("Accomodation and Food service = blank"),"F03m.1","(M) Accomodation and Food service must not be blank.", "F03_accom","--", "F")
			elseif not invalueset(F03_accom) then
				dispError("E","00",maketext("Accomodation and Food service= %d",F03_accom),"F03m.2","(M) Choose from the given categories.", "F03_accom","--", "F")
			else 
				entrep.add(F03_accom);
				entrepname.add("Accomodation and Food service");
			endif;
			
			if F03_infocomm = notappl then
				dispError("E","00",maketext("Information and Communication = blank"),"F03n.1","(N) Information and Communication must not be blank.", "F03_infocomm","--", "F")
			elseif not invalueset(F03_infocomm) then
				dispError("E","00",maketext("Information and Communication = %d",F03_infocomm),"F03n.2","(N) Choose from the given categories.", "F03_infocomm","--", "F")
			else 
				entrep.add(F03_infocomm);
				entrepname.add("Information and Communication");
			endif;
			
			if F03_fin = notappl then
				dispError("E","00",maketext("Financial and Insurance = blank"),"F03o.1","(O) Financial and Insurance must not be blank.", "F03_fin","--", "F")
			elseif not invalueset(F03_fin) then
				dispError("E","00",maketext("Financial and Insurance = %d",F03_fin),"F03o.2","(O) Choose from the given categories.", "F03_fin","--", "F")
			else 
				entrep.add(F03_fin);
				entrepname.add("Financial and Insurance");
			endif;
			
			if F03_realesta = notappl then
				dispError("E","00",maketext("Real estate and ownership of dwellings = blank"),"F03p.1","(P) Real estate and ownership of dwellings must not be blank.", "F03_realesta","--", "F")
			elseif not invalueset(F03_realesta) then
				dispError("E","00",maketext("Real estate and ownership of dwellings = %d",F03_realesta),"F03p.2","(P) Choose from the given categories.", "F03_realesta","--", "F")
			else 
				entrep.add(F03_realesta);
				entrepname.add("Financial and Insurance");
			endif;
			
			if F03_profbus = notappl then
				dispError("E","00",maketext("Professional and business services = blank"),"F03q.1","(Q) Professional and business services must not be blank.", "F03_profbus","--", "F")
			elseif not invalueset(F03_profbus) then
				dispError("E","00",maketext("Professional and business services = %d",F03_profbus),"F03q.2","(Q) Choose from the given categories.", "F03_profbus","--", "F")
			else 
				entrep.add(F03_profbus);
				entrepname.add("Professional and business services");
			endif;
			
			if F03_educ = notappl then
				dispError("E","00",maketext("Education = blank"),"F03r.1","(R) Education must not be blank.", "F03_educ","--", "F")
			elseif not invalueset(F03_educ) then
				dispError("E","00",maketext("Education = %d",F03_educ),"F03r.2","(R) Choose from the given categories.", "F03_educ","--", "F")
			else 
				entrep.add(F03_educ);
				entrepname.add("Education");
			endif;
			
			if F03_humsoc = notappl then
				dispError("E","00",maketext("Human health and social work activities = blank"),"F03s.1","(S) Human health and social work activities must not be blank.", "F03_humsoc","--", "F")
			elseif not invalueset(F03_humsoc) then
				dispError("E","00",maketext("Human health and social work activities = %d",F03_humsoc),"F03s.2","(S) Choose from the given categories.", "F03_humsoc","--", "F")
			else 
				entrep.add(F03_humsoc);
				entrepname.add("Human health and social work activities");
			endif;
			
			if F03_admin = notappl then
				dispError("E","00",maketext("Administrative and support service activities = blank"),"F03t.1","(T) Administrative and support service activities must not be blank.", "F03_admin","--", "F")
			elseif not invalueset(F03_admin) then
				dispError("E","00",maketext("Administrative and support service activities = %d",F03_admin),"F03t.2","(T) Choose from the given categories.", "F03_admin","--", "F")
			else 
				entrep.add(F03_admin);
				entrepname.add("Administrative and support service activities");
			endif;
			
			if F03_artenrec= notappl then
				dispError("E","00",maketext("Arts, entertainment and recreation = blank"),"F03u.1","(U) Arts, entertainment and recreation activities must not be blank.", "F03_artenrec","--", "F")
			elseif not invalueset(F03_artenrec) then
				dispError("E","00",maketext("Arts, entertainment and recreation = %d",F03_artenrec),"F03u.2","(U) Choose from the given categories.", "F03_artenrec","--", "F")
			else 
				entrep.add(F03_artenrec);
				entrepname.add("Arts, entertainment and recreation");
			endif;
			
			if F03_oth= notappl then
				dispError("E","00",maketext("Other services = blank"),"F03v.1","(V) Other services must not be blank.", "F03_oth","--", "F")
			elseif not invalueset(F03_oth) then
				dispError("E","00",maketext("Other services = %d",F03_oth),"F03v.2","(V) Choose from the given categories.", "F03_oth","--", "F")
			else 
				entrep.add(F03_oth);
				entrepname.add("Other services");
			endif;
			
		//F04 - F11 
			do varying numeric i = 1 while i <= entrep.length()
				if entrep(i) = 1 then
					
				//F04
					if F04_ENTREP(i) =  "" then
						dispError("E",edit("99",i),maketext("%s = blank",entrepname(i)),"F04.1",maketext("%s must not be blank.",entrepname(i)), "F04_ENTREP","--", "F")
					endif;
				
				//F05
					if F05_PSIC(i) = notappl then
						dispError("E",edit("99",i),maketext("%s PSIC= blank",entrepname(i)),"F05.1",maketext("%s PSIC must not be blank.",entrepname(i)), "F05_PSIC","--", "F")
					endif;
				
				//F06
					if F06_ENTACT(i) = notappl then
						dispError("E",edit("99",i),maketext("%s e-commerce platform= blank",entrepname(i)),"F06.1",maketext("%s e-commerce platform must not be blank.",entrepname(i)), "F06_ENTACT","--", "F")
					endif;
					
				//F07
					if F07_SOCMED(i) = notappl then
						dispError("E",edit("99",i),maketext("%s social media selling= blank",entrepname(i)),"F07.1",maketext("%s social media selling must not be blank.",entrepname(i)), "F07_SOCMED","--", "F")
					endif;
				
				//F08
					if F08_YEAR(i) = notappl then
						dispError("E",edit("99",i),maketext("%s Year= blank",entrepname(i)),"F08.1",maketext("%s Year must not be blank.",entrepname(i)), "F08_YEAR","--", "F")
					endif;
					
				//F09
					if F09_MONTH(i) = "" then
						dispError("E",edit("99",i),maketext("%s Month= blank",entrepname(i)),"F09.1",maketext("%s Month must not be blank.",entrepname(i)), "F09_MONTH","--", "F")
					endif;
					
				//F10a
					if F10A_WRKOWN(i) = notappl then
						dispError("E",edit("99",i),maketext("%s Working Owners and Unpaid workers= blank",entrepname(i)),"F10a.1",maketext("%s Working Owners and Unpaid workers must not be blank.",entrepname(i)), "F10A_WRKOWN","--", "F")
					endif;
					
				//F10b
					if F10B_PDEMP(i) = notappl then
						dispError("E",edit("99",i),maketext("%s Paid Employees= blank",entrepname(i)),"F10b.1",maketext("%s Paid Employees must not be blank.",entrepname(i)), "F10B_PDEMP","--", "F")
					endif;
				
				//F10c
					if F10A_WRKOWN(i) <> notappl and  F10B_PDEMP(i) <> notappl then
						if F10A_WRKOWN(i) + F10B_PDEMP(i) <> F10C_TOTAL(i) then
							dispError("E",edit("99",i),maketext("%s Working Owners and Unpaid workers = %d, Paid Employees = %d",entrepname(i),F10A_WRKOWN(i),F10B_PDEMP(i) ),"F10c.1",
							maketext("%s : The sum of Working Owners and Unpaid workers and, Paid Employees are not equal.",entrepname(i)), "F10A_WRKOWN","F10B_PDEMP", "F")
						elseif F10C_TOTAL(i) in 0,notappl then
							dispError("E",edit("99",i),maketext("%s Working Owners and Unpaid workers = %d, Paid Employees = %d",entrepname(i),F10A_WRKOWN(i),F10B_PDEMP(i) ),"F10c.2",
							maketext("%s Total must be greater than zero (0).",entrepname(i)), "F10A_WRKOWN","F10B_PDEMP", "F")
						endif;
					endif;
					
				//F11
					if F11_GOV(i) = "" then
						dispError("E",edit("99",i),maketext("%s Gov Agency Registered= blank",entrepname(i)),"F11.1",maketext("%s Gov Agency Registered must not be blank.",entrepname(i)), "F11_GOV","--", "F")
					endif;
				
				endif; //if entrep(i) = 1 then
			enddo;
			
			
		
		//============= SECTION G ==================
		
		//G01
			if (F03_crop in 1 or F03_livestock in 1) and G01_agriact = notappl then
				dispError("E","00",maketext("Household operate the agricultural activity = blank"),"G01.1","Household operate the agricultural activity must not be blank.", "G01_agriact","--", "G")
			elseif (F03_crop in 1 or F03_livestock in 1) and not invalueset(G01_agriact) then
				dispError("E","00",maketext("Household operate the agricultural activity = %d",G01_agriact),"G01.2","Household operate the agricultural activity is not invalueset.", "G01_agriact","--", "G")
			endif;	
			
		//G02	
			if G01_agriact in 1,3 and g02_numprcl in 0,notappl then
				dispError("E","00",maketext("Number of parcel operated = %d",g02_numprcl),"G02.1","Number of parcel operated should be greater than zero(0).", "g02_numprcl","--", "G")
			endif;
		
			if g02_numprcl <> soccurs(SECTION_F1) then
				dispError("E","00",maketext("Number of parcel operated = %d, Parcel Occurence = %d",g02_numprcl,soccurs(SECTION_F1)),"G02.2","Number of parcel operated should be equal to the number of Parcel occurence.", "g02_numprcl","--", "G")
			endif;
			
			do varying numeric f = 1 while f <= soccurs(SECTION_F1)		
			
				//G03				
				if G03_prclloc(f) = notappl then
					dispError("E","00",maketext("Location of Parcel = blank"),"G03.1","Location of parcel must not be blank.", "G03_prclloc","--", "G")
				elseif not invalueset(G03_prclloc(f)) then
					dispError("E","00",maketext("Location of Parcel = %d",G03_prclloc(f)),"G03.2","Location of parcel is not invalueset.", "G03_prclloc","--", "G")
				endif;				
				
				if G03_prclloc(f) <> notappl then
					
				//G04
					if g04_prcltenure(f) = notappl then
						dispError("E",edit("99",f),maketext("Tenure Status = blank"),"G04.1","Location of parcel must not be blank.", "g04_prcltenure","--", "G")
					elseif not invalueset(g04_prcltenure(f)) then
						dispError("E",edit("99",f),maketext("Tenure Status = %d",g04_prcltenure(f)),"G04.2","Location of parcel is not in valueset.", "g04_prcltenure","--", "G")
					endif;
				
				//G04A
					if G4A_PRCLTENUREOTH(f) = "" then
						dispError("E",edit("99",f),maketext("Tenure Status specify = blank"),"G04A.1","Location of parcel must not be blank.", "G4A_PRCLTENUREOTH","--", "G")
					endif;
				
				//G05
					if g5_irri(f) = notappl then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = blank"),"G05.1","Parcel irrigated must not be blank.", "g5_irri","--", "G")
					elseif not invalueset(g5_irri(f)) then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = %d",g5_irri(f)),"G05.2","Parcel irrigated is not in valueset.", "g5_irri","--", "G")
					endif;
				
				//G06
					if g5_irri(f) = 1 and g6_irristat(f) = notappl then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = %d, Status of Irrigation = blank",g5_irri(f)),"G06.1","Status of Irrigation must not be blank.", "g6_irristat","--", "G")
					elseif g5_irri(f) = 1 and not invalueset(g6_irristat(f)) then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = %d, Status of Irrigation = %d",g5_irri(f),g6_irristat(f)),"G06.2","Status of Irrigation is not in valueset.", "g6_irristat","--", "G")
					elseif g5_irri(f) = 2 and invalueset(g6_irristat(f)) then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = %d, Status of Irrigation = %d",g5_irri(f),g6_irristat(f)),"G06.3","Parcel irrigated is 2, Status of Irrigation is in valueset. Please recheck entry.", "g5_irri","g6_irristat", "G")
					endif;
					
				//G07
					if g5_irri(f) in 1,2 and g7_rainfed(f) = notappl then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = %d, Irrigation of Farm = blank",g5_irri(f)),"G07.1","Irrigation of farm must not be blank.", "g7_rainfed","--", "G")
					elseif g5_irri(f) in 1,2 and not invalueset(g7_rainfed(f)) then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = %d, Irrigation of Farm = %d",g5_irri(f),g7_rainfed(f)),"G07.2","Irrigation of farm is not in valueset.", "g7_rainfed","--", "G")
					elseif not g5_irri(f) in 1,2 and invalueset(g7_rainfed(f)) then
						dispError("E",edit("99",f),maketext("Parcel Irrigated = %d, Irrigation of Farm = %d",g5_irri(f),g6_irristat(f)),"G07.3","Parcel irrigated is 8,Irrigation of Farm is in valueset. Please recheck entry.", "g5_irri","g7_rainfed", "G")
					endif;
				
				//G08
					if g8_prclarea(f) = notappl then
						dispError("E",edit("99",f),maketext("Physical Area = blank"),"G08.1","Physical area of the parcel must not be blank.", "g8_prclarea","--", "G")
					elseif not g8_prclarea(f) in 00.001:99.99 then
						dispError("E",edit("99",f),maketext("Physical Area = %d",g8_prclarea(f)),"G08.2","Physical area of the parcel is not in valueset.", "g8_prclarea","--", "G")
					endif;
				
				//G09
					if g9_comanaged(f) = "" then
						dispError("E",edit("99",f),maketext("Household Members = blank"),"G09.1","Select household members co-operated/co-managed.", "g9_comanaged","--", "G")
					elseif display_lno.seek(tonumber(g9_comanaged(f))) = 0 then
						dispError("E",edit("99",f),maketext("LNO = %d",g11_lno(f)),"G09.2","Select the applicable HH member.", "g9_comanaged","--", "G")
					endif;
				
				
				
				if A07_AGE(f) <= 10 then
					//G11
					if display_lno.seek(g11_lno(f)) = 0 then
						dispError("E",edit("99",f),maketext("LNO = %d",g11_lno(f)),"G11.1","Select the applicable HH member.", "g11_lno","--", "G")
					endif;
					
					//G12a
					if g12a_agrimain_grwcrps(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = blank"),"G12a.1","(A) Agricultural and fishery activity is blank.", "g12a_agrimain_grwcrps","--", "G")
					elseif not invalueset(g12a_agrimain_grwcrps(f)) then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = %d",g12a_agrimain_grwcrps(f)),"G12a.2","(A) Agricultural and fishery activity is not in valueset.", "g12a_agrimain_grwcrps","--", "G")
					endif;
					
					//G12b
					if G12B_AGRIMAIN_LVSTCKPLTRY(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = blank"),"G12b.1","(B) Agricultural and fishery activity is blank.", "G12B_AGRIMAIN_LVSTCKPLTRY","--", "G")
					elseif not invalueset(G12B_AGRIMAIN_LVSTCKPLTRY(f)) then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = %d",G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G12b.2","(B) Agricultural and fishery activity is not in valueset.", "G12B_AGRIMAIN_LVSTCKPLTRY","--", "G")
					endif;
					
					//G12c
					if G12C_AGRIMAIN_AQUACLTR(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = blank"),"G12c.1","(C) Agricultural and fishery activity is blank.", "G12C_AGRIMAIN_AQUACLTR","--", "G")
					elseif not invalueset(G12C_AGRIMAIN_AQUACLTR(f)) then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = %d",G12C_AGRIMAIN_AQUACLTR(f)),"G12c.2","(C) Agricultural and fishery activity is not in valueset.", "G12C_AGRIMAIN_AQUACLTR","--", "G")
					endif;					
					
					//G12d
					if G12D_AGRIMAIN_FSHCPTR(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = blank"),"G12d.1","(D) Agricultural and fishery activity is blank.", "G12D_AGRIMAIN_FSHCPTR","--", "G")
					elseif not invalueset(G12D_AGRIMAIN_FSHCPTR(f)) then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = %d",G12D_AGRIMAIN_FSHCPTR(f)),"G12d.2","(D) Agricultural and fishery activity is not in valueset.", "G12D_AGRIMAIN_FSHCPTR","--", "G")
					endif;
					
					//G12e
					if G12E_AGRIMAIN_GLEANING(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = blank"),"G12e.1","(E) Agricultural and fishery activity is blank.", "G12E_AGRIMAIN_GLEANING","--", "G")
					elseif not invalueset(G12E_AGRIMAIN_GLEANING(f)) then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = %d",G12E_AGRIMAIN_GLEANING(f)),"G12e.2","(E) Agricultural and fishery activity is not in valueset.", "G12E_AGRIMAIN_GLEANING","--", "G")
					endif;
					
					//G12f
					if G12F_AGRIMAIN_RENTING(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = blank"),"G12f.1","(F) Agricultural and fishery activity is blank.", "G12F_AGRIMAIN_RENTING","--", "G")
					elseif not invalueset(G12F_AGRIMAIN_RENTING(f)) then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity = %d",G12F_AGRIMAIN_RENTING(f)),"G12f.2","(F) Agricultural and fishery activity is not in valueset.", "G12F_AGRIMAIN_RENTING","--", "G")
					endif;
					
					//G12z
					if G12Z_OTHERAGRIMAIN(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity other = blank"),"G12z.1","(Z) Agricultural and fishery activity is blank.", "G12Z_OTHERAGRIMAIN","--", "G")
					elseif not invalueset(G12Z_OTHERAGRIMAIN(f)) then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity other = %d",G12Z_OTHERAGRIMAIN(f)),"G12z.2","(Z) Agricultural and fishery activity is not in valueset.", "G12Z_OTHERAGRIMAIN","--", "G")
					endif;
					
					//G12z OTHER
					if G12ZA_OTHERAGRIMAIN(f) = "" and G12Z_OTHERAGRIMAIN = 1 then
						dispError("E",edit("99",f),maketext("Agricultural and fishery activity other = blank"),"G12za.1","(Z) Agricultural and fishery activity (Other) is blank.", "G12ZA_OTHERAGRIMAIN","--", "G")
					endif;
					
					//G13
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G13_TYPENGAGE_GROWNLVSTCK(f) = notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Growing of Crops = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G13.1","Growing of Crops is blank.", "G13_TYPENGAGE_GROWNLVSTCK","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset(G13_TYPENGAGE_GROWNLVSTCK(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Growing of Crops = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G13_TYPENGAGE_GROWNLVSTCK(f)),"G13.2","Growing of Crops is not in valueset.", "G13_TYPENGAGE_GROWNLVSTCK","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G13_TYPENGAGE_GROWNLVSTCK(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Growing of Crops = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G13_TYPENGAGE_GROWNLVSTCK(f)),"G13.3","Growing of Crops is in valueset. Please recheck entry.", "G13_TYPENGAGE_GROWNLVSTCK","--", "G")
					endif;
					
					//G14A
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14A_DAYTODAY(f) = notappl then 
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Farm Operation = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G14a.1","Farm Operation is blank.", "G14A_DAYTODAY","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset( G14A_DAYTODAY(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Farm Operation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14A_DAYTODAY(f)),"G14a.2","Farm Operation is not in valueset.", "G14A_DAYTODAY","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14A_DAYTODAY(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Farm Operation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14A_DAYTODAY(f)),"G14a.3","Farm Operation is in valueset. Please recheck entry", "G14A_DAYTODAY","--", "G")
					endif;
					
					//G14B
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14B_LANDPREP(f) = notappl then 
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Land Preparation = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G14b.1","Land Preparation is blank.", "G14B_LANDPREP","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset( G14B_LANDPREP(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Land Preparation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14B_LANDPREP(f)),"G14b.2","Land Preparation is not in valueset.", "G14B_LANDPREP","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14B_LANDPREP(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Land Preparation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14B_LANDPREP(f)),"G14b.3","Land Preparation is in valueset. Please recheck entry", "G14B_LANDPREP","--", "G")
					endif;
					
					//G14C
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14C_PLANTORTRANSPLANT(f) = notappl then 
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Land Preparation = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G14c.1","Transplant is blank.", "G14C_PLANTORTRANSPLANT","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset( G14C_PLANTORTRANSPLANT(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Land Preparation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14C_PLANTORTRANSPLANT(f)),"G14c.2","Transplant is not in valueset.", "G14C_PLANTORTRANSPLANT","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14C_PLANTORTRANSPLANT(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Land Preparation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14C_PLANTORTRANSPLANT(f)),"G14c.3","Transplant is in valueset. Please recheck entry", "G14C_PLANTORTRANSPLANT","--", "G")
					endif;
					
					//G14D
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14D_CULTI(f) = notappl then 
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Cultivation = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G14c.1","Cultivation is blank.", "G14D_CULTI","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset( G14D_CULTI(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Cultivation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14D_CULTI(f)),"G14c.2","Cultivation is not in valueset.", "G14D_CULTI","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14D_CULTI(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Cultivation = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14D_CULTI(f)),"G14c.3","Cultivation is in valueset. Please recheck entry", "G14D_CULTI","--", "G")
					endif;
					
					//G14E
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14E_HARVESTRTHRESH(f) = notappl then 
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Harvest = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G14e.1","Harvest is blank.", "G14E_HARVESTRTHRESH","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset( G14E_HARVESTRTHRESH(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Harvest = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14E_HARVESTRTHRESH(f)),"G14e.2","Harvest is not in valueset.", "G14E_HARVESTRTHRESH","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14E_HARVESTRTHRESH(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Harvest = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14E_HARVESTRTHRESH(f)),"G14e.3","Harvest is in valueset. Please recheck entry", "G14E_HARVESTRTHRESH","--", "G")
					endif;
					
					//G14F
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14F_FEEDING(f) = notappl then 
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Feeding livestock = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G14f.1","Feeding livestock is blank.", "G14F_FEEDING","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset( G14F_FEEDING(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Feeding livestock = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14F_FEEDING(f)),"G14f.2","Feeding livestock is not in valueset.", "G14F_FEEDING","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14F_FEEDING(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Feeding livestock = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14F_FEEDING(f)),"G14f.3","Feeding livestock is in valueset. Please recheck entry", "G14F_FEEDING","--", "G")
					endif;
					
					//G14Z
					if (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14Z_OTH(f) = notappl then 
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Growing of crops and/or livestock/poultry raising = blank",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f)),"G14z.1","Growing of crops and/or livestock/poultry raising is blank.", "G14Z_OTH","--", "G")
					elseif (g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and not invalueset( G14Z_OTH(f)) then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Growing of crops and/or livestock/poultry raising = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14Z_OTH(f)),"G14z.2","Growing of crops and/or livestock/poultry raising is not in valueset.", "G14Z_OTH","--", "G")
					elseif !(g12a_agrimain_grwcrps(f) = 1 or G12B_AGRIMAIN_LVSTCKPLTRY(f) = 1) and G14Z_OTH(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12A) Agricultural and fishery activity = %d, (12B) Agricultural and fishery activity = %d, Growing of crops and/or livestock/poultry raising = %d",g12a_agrimain_grwcrps(f),G12B_AGRIMAIN_LVSTCKPLTRY(f),G14Z_OTH(f)),"G14z.3","Growing of crops and/or livestock/poultry raising is in valueset. Please recheck entry", "G14Z_OTH","--", "G")
					endif;
					
					if G14Z_OTH(f) = 1 and G14ZA_OTH(f) = "" then
						dispError("E",edit("99",f),maketext("Growing of crops and/or livestock/poultry raising = %d, Growing of crops and/or livestock/poultry raising (Other) = blank",G14Z_OTH(f)),"G14za.1","Growing of crops and/or livestock/poultry raising (other) is blank.", "G14Z_OTH","G14ZA_OTH", "G")
					elseif G14Z_OTH(f) <> 1 and G14ZA_OTH(f) <> "" then
						dispError("E",edit("99",f),maketext("Growing of crops and/or livestock/poultry raising = %d, Growing of crops and/or livestock/poultry raising (Other) = %s",G14Z_OTH(f),G14ZA_OTH(f)),"G14za.2","Growing of crops and/or livestock/poultry raising (other) should be blank.", "G14Z_OTH","G14ZA_OTH", "G")
					endif;
					
					if (G12C_AGRIMAIN_AQUACLTR(f) = 1 or G12D_AGRIMAIN_FSHCPTR(f) = 1) and G15_TYPENGAGE_AQUANFSHNGLEAN(f) <> notappl then
						dispError("E",edit("99",f),maketext("(12C) Agricultural and fishery activity = %d, (12D) Agricultural and fishery activity = %d, Fisheries activity = blank",G12C_AGRIMAIN_AQUACLTR(f),G12D_AGRIMAIN_FSHCPTR(f)),
						"G15.1","Fisheries activity is blank.", "G15_TYPENGAGE_AQUANFSHNGLEAN","--", "G")
					elseif (G12C_AGRIMAIN_AQUACLTR(f) = 1 or G12D_AGRIMAIN_FSHCPTR(f) = 1) and not invalueset(G15_TYPENGAGE_AQUANFSHNGLEAN(f)) then
						dispError("E",edit("99",f),maketext("(12C) Agricultural and fishery activity = %d, (12D) Agricultural and fishery activity = %d, Fisheries activity = %d",G12C_AGRIMAIN_AQUACLTR(f),G12D_AGRIMAIN_FSHCPTR(f),G15_TYPENGAGE_AQUANFSHNGLEAN(f)),
						"G15.2","Fisheries activity is not in valueset.", "G15_TYPENGAGE_AQUANFSHNGLEAN","--", "G")
					elseif !(G12C_AGRIMAIN_AQUACLTR(f) = 1 and G12D_AGRIMAIN_FSHCPTR(f) = 1) and not invalueset(G15_TYPENGAGE_AQUANFSHNGLEAN(f)) then
						dispError("E",edit("99",f),maketext("(12C) Agricultural and fishery activity = %d, (12D) Agricultural and fishery activity = %d, Fisheries activity = %d",G12C_AGRIMAIN_AQUACLTR(f),G12D_AGRIMAIN_FSHCPTR(f),G15_TYPENGAGE_AQUANFSHNGLEAN(f)),
						"G15.3","Fisheries activity is not in valueset.", "G15_TYPENGAGE_AQUANFSHNGLEAN","--", "G")
					endif;
					
					if G16A_DAYTODAY(f) = notappl then
						dispError("E",edit("99",f),maketext("Production activity = blank"),"G16A.1","(A) Production activity must not be blank.", "G16A_DAYTODAY","--", "G")
					elseif not invalueset(G16A_DAYTODAY(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16A_DAYTODAY(f)),"G16A.2","(A) Production activity is not in the valueset.", "G16A_DAYTODAY","--", "G")
					endif;
					
					if G16B_AQUA(f) = notappl then
						dispError("E",edit("99",f),maketext("Production activity = blank"),"G16B.1","(B) Production activity must not be blank.", "G16B_AQUA","--", "G")
					elseif not invalueset(G16B_AQUA(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16B_AQUA(f)),"G16B.2","(B) Production activity is not in the valueset.", "G16B_AQUA","--", "G")
					endif;
					
					if G16C_MUNIFISH(f) = notappl then
						dispError("E",edit("99",f),maketext("Production activity = blank"),"G16C.1","(C) Production activity must not be blank.", "G16C_MUNIFISH","--", "G")
					elseif not invalueset(G16C_MUNIFISH(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16C_MUNIFISH(f)),"G16C.2","(C) Production activity is not in the valueset.", "G16C_MUNIFISH","--", "G")
					endif;
					
					if G16D_GLEAN(f) = notappl then
						dispError("E",edit("99",f),maketext("Production activity = blank"),"G16D.1","(D) Production activity must not be blank.", "G16D_GLEAN","--", "G")
					elseif not invalueset(G16D_GLEAN(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16D_GLEAN(f)),"G16D.2","(D) Production activity is not in the valueset.", "G16D_GLEAN","--", "G")
					endif;
					
					if G16E_COMMFISH(f) = notappl then
						dispError("E",edit("99",f),maketext("Production activity = blank"),"G16E.1","(E) Production activity must not be blank.", "G16E_COMMFISH","--", "G")
					elseif not invalueset(G16E_COMMFISH(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16E_COMMFISH(f)),"G16E.2","(E) Production activity is not in the valueset.", "G16E_COMMFISH","--", "G")
					endif;
					
					if G17_AGRIORGMEM(f) = notappl then
						dispError("E",edit("99",f),maketext("Agricultural organization = blank"),"G17.1","Agricultural organization must not be blank.", "G17_AGRIORGMEM","--", "G")
					elseif not invalueset(G17_AGRIORGMEM(f)) then
						dispError("E",edit("99",f),maketext("Agricultural organization = %d",G17_AGRIORGMEM(f)),"G17.2","Agricultural organization is not in the valueset.", "G17_AGRIORGMEM","--", "G")
					endif;
					
					if G18_AGRIORG1(f) = notappl then
						dispError("E",edit("99",f),maketext("Reference codes = blank"),"G18.1","Reference codes must not be blank.", "G18_AGRIORG1","--", "G")
					elseif not invalueset(G18_AGRIORG1(f)) then
						dispError("E",edit("99",f),maketext("Reference codes = %d",G18_AGRIORG1(f)),"G18.2","Choose from the reference codes.", "G18_AGRIORG1","--", "G")
					endif;
					
					if G18A_AGRIORG2(f) = notappl then
						dispError("E",edit("99",f),maketext("Reference codes = blank"),"G18A.1","Reference codes must not be blank.", "G18A_AGRIORG2","--", "G")
					elseif not invalueset(G18A_AGRIORG2(f)) then
						dispError("E",edit("99",f),maketext("Reference codes = %d",G18A_AGRIORG2(f)),"G18A.2","Choose from the reference codes.", "G18A_AGRIORG2","--", "G")
					endif;
					
					//G19
					if G01_AGRIACT in 2,3 then

						if G19A_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Wick System = blank",G01_AGRIACT),"G19A.1","Wick System must not be blank.", "G01_AGRIACT","G19A_TYPSYSHYDRO", "G")
						elseif not invalueset(G19A_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Wick System = %d",G01_AGRIACT,G19A_TYPSYSHYDRO(f)),"G19A.2","Wick System is not invalueset.", "G01_AGRIACT","G19A_TYPSYSHYDRO", "G")
						endif;
					
						if G19B_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Deep Water Culture = blank",G01_AGRIACT),"G19B.1","Deep Water Culture must not be blank.", "G01_AGRIACT","G19B_TYPSYSHYDRO", "G")
						elseif not invalueset(G19B_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Deep Water Culture = %d",G01_AGRIACT,G19B_TYPSYSHYDRO(f)),"G19B.2","Deep Water Culture is not invalueset.", "G01_AGRIACT","G19B_TYPSYSHYDRO", "G")
						endif;					
						
						if G19C_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Nutrient Field Technique = blank",G01_AGRIACT),"G19C.1","Nutrient Field Technique must not be blank.", "G01_AGRIACT","G19C_TYPSYSHYDRO", "G")
						elseif not invalueset(G19C_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Nutrient Field Technique = %d",G01_AGRIACT,G19C_TYPSYSHYDRO(f)),"G19C.2","Nutrient Field Technique is not invalueset.", "G01_AGRIACT","G19C_TYPSYSHYDRO", "G")
						endif;
						
						if G19D_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Ebb and Flow (Flow and Drain) = blank",G01_AGRIACT),"G19D.1","Ebb and Flow (Flow and Drain) must not be blank.", "G01_AGRIACT","G19D_TYPSYSHYDRO", "G")
						elseif not invalueset(G19D_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Ebb and Flow (Flow and Drain) = %d",G01_AGRIACT,G19D_TYPSYSHYDRO(f)),"G19D.2","Ebb and Flow (Flow and Drain) is not invalueset.", "G01_AGRIACT","G19D_TYPSYSHYDRO", "G")
						endif;
						
						if G19E_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Aeroponics = blank",G01_AGRIACT),"G19E.1","Aeroponics must not be blank.", "G01_AGRIACT","G19E_TYPSYSHYDRO", "G")
						elseif not invalueset(G19E_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Aeroponics = %d",G01_AGRIACT,G19E_TYPSYSHYDRO(f)),"G19E.2","Aeroponics is not invalueset.", "G01_AGRIACT","G19E_TYPSYSHYDRO", "G")
						endif;
						
						if G19F_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Drip systems = blank",G01_AGRIACT),"G19F.1","Drip systems must not be blank.", "G01_AGRIACT","G19F_TYPSYSHYDRO", "G")
						elseif not invalueset(G19F_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Drip systems = %d",G01_AGRIACT,G19F_TYPSYSHYDRO(f)),"G19F.2","Drip systems is not invalueset.", "G01_AGRIACT","G19F_TYPSYSHYDRO", "G")
						endif;						
						
						if G19F_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Drip systems = blank",G01_AGRIACT),"G19F.1","Drip systems must not be blank.", "G01_AGRIACT","G19F_TYPSYSHYDRO", "G")
						elseif not invalueset(G19F_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Drip systems = %d",G01_AGRIACT,G19F_TYPSYSHYDRO(f)),"G19F.2","Drip systems is not invalueset.", "G01_AGRIACT","G19F_TYPSYSHYDRO", "G")
						endif;
						
						if G19Z_TYPSYSHYDRO(f) = notappl then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Other, Specify = blank",G01_AGRIACT),"G19Z.1","Other, Specify must not be blank.", "G01_AGRIACT","G19Z_TYPSYSHYDRO", "G")
						elseif not invalueset(G19Z_TYPSYSHYDRO(f)) then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Other, Specify = %d",G01_AGRIACT,G19Z_TYPSYSHYDRO(f)),"G19Z.2","Other, Specify is not invalueset.", "G01_AGRIACT","G19Z_TYPSYSHYDRO", "G")
						endif;
						
						if G19Z_TYPSYSHYDRO(f) = 1 and G19AZ_TYPSYSHYDROOTH(f) = "" then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Other, Specify = blank",G01_AGRIACT),"G19ZA.1","Other, Specify must not be blank.", "G01_AGRIACT","G19AZ_TYPSYSHYDROOTH", "G")
						elseif G19Z_TYPSYSHYDRO(f) = 2 and G19AZ_TYPSYSHYDROOTH(f) <> "" then
							dispError("E",edit("99",f),maketext("Household operate the agricultural activity = %d, Other, Specify = %d",G01_AGRIACT,G19Z_TYPSYSHYDRO(f)),"G19ZA.2","Other, Specify is not invalueset.", "G01_AGRIACT","G19AZ_TYPSYSHYDROOTH", "G")
						endif;						
					endif;			
					
					
					if G12A_AGRIMAIN_GRWCRPS = 1 and G15_TYPENGAGE_AQUANFSHNGLEAN = 1 then
						//G20
						if G20_TEMPNPERMCRPS(f) = notappl then
							dispError("E",edit("99",f),maketext("permanent and temporary crops = blank"),"G20.1","Select one value set (refer to code).", "G20_TEMPNPERMCRPS","--", "G")
						elseif not invalueset(G20_TEMPNPERMCRPS(f)) then
							dispError("E",edit("99",f),maketext("permanent and temporary crops = %d",G20_TEMPNPERMCRPS(f)),"G20.2","Select one value set (refer to code).", "G20_TEMPNPERMCRPS","--", "G")
						endif;
						
						
						if g01_agriact in 1,3 and g12a_agrimain_grwcrps = 1 then
							//G21
							if G21_AGRIMACH(f) = notappl then
								dispError("E",edit("99",f),maketext("Draft animals, agricultural equipment, facilities, and other tools = blank"),
								"G21.1","Selected draft animals, agricultural equipment, facilities, and other tools must not be blank.", "G21_AGRIMACH","--", "G")
							elseif not invalueset(G21_AGRIMACH(f)) then
								dispError("E",edit("99",f),maketext("Draft animals, agricultural equipment, facilities, and other tools = %d",G21_AGRIMACH(f)),
								"G21.2","Draft animals, agricultural equipment, facilities, and other tools is not in value set.", "G21_AGRIMACH","--", "G")
							endif;
						
							//G21a
							if g21a_agrimach_oth(f) = "" and G21_AGRIMACH(f) = 9999 then
								dispError("E",edit("99",f),maketext("Draft animals, agricultural equipment, facilities, and other tools OTHER = blank"),"G21a.1",
								"Enter other draft animals, agricultural equipment, facilities, and other tools","g21a_agrimach_oth","G21_AGRIMACH", "G")
							endif;
						
							
							{NOTE: SKIPPED G22 as need further confirmation from SMD
							
							if G21AB_AGRIMACH_OTH(f) = "" then
								dispError("E",edit("99",f),maketext("Draft animals, agricultural equipment, facilities, and other tools OTHER = blank"),"G21a.1",
								"Enter other draft animals, agricultural equipment, facilities, and other tools","G21AB_AGRIMACH_OTH","--", "G")
							endif;}
							
							//G23
							if g23_crop3yrs = notappl then
								dispError("E",edit("99",f),maketext("household engagement in crop farming = blank"),"G23.1",
								"Engagement of the household in crop farming must not be blank","g23_crop3yrs","--", "G")
							elseif not invalueset(g23_crop3yrs) then
								dispError("E",edit("99",f),maketext("household engagement in crop farming = %d",g23_crop3yrs),"G23.2",
								"Selected answer  is not in the valueset","g23_crop3yrs","--", "G")
							endif;
							
							//G24d
							if g24_hrvest = notappl then
								dispError("E",edit("99",f),maketext("Situation of latest harvest = blank"),"G24.1",
								"Provide the situation of the latest harvest must not be blank","g24_hrvest","--", "G")
							elseif not invalueset(g24_hrvest) then
								dispError("E",edit("99",f),maketext("Situation of latest harvest = %d",g24_hrvest),"G24.2",
								"Answer is not in the valueset","g24_hrvest","--", "G")
							endif;
							
							
						endif;//if g01_agriact = 1,3 and g12a_agrimain_grwcrps = 1 then
					endif;
					
					
					
					
				else
					if G13_TYPENGAGE_GROWNLVSTCK(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Growing of Crops = %d",A07_AGE(f),G13_TYPENGAGE_GROWNLVSTCK(f)),"G13.4","Growing of Crops is for 10 years old and over.", "A07_AGE","G13_TYPENGAGE_GROWNLVSTCK", "G")
					endif;
					
					if G14A_DAYTODAY(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Farm Operation = %d",A07_AGE(f),G14A_DAYTODAY(f)),"G14a.4","Growing of Crops is for 10 years old and over.", "A07_AGE","G13_TYPENGAGE_GROWNLVSTCK", "G")
					endif;
					
					if G14B_LANDPREP(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Land Preparation = %d",A07_AGE(f),G14B_LANDPREP(f)),"G14b.4","Land Preparation is for 10 years old and over.", "A07_AGE","G14B_LANDPREP", "G")
					endif;
					
					if G14C_PLANTORTRANSPLANT(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Transplant = %d",A07_AGE(f),G14C_PLANTORTRANSPLANT(f)),"G14c.4","Transplant is for 10 years old and over.", "A07_AGE","G14C_PLANTORTRANSPLANT", "G")
					endif;
					
					if G14D_CULTI(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Cultivation = %d",A07_AGE(f),G14D_CULTI(f)),"G14d.4","Cultivation is for 10 years old and over.", "A07_AGE","G14D_CULTI", "G")
					endif;
					
					if G14E_HARVESTRTHRESH(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Harvest = %d",A07_AGE(f),G14E_HARVESTRTHRESH(f)),"G14e.4","Harvest is for 10 years old and over.", "A07_AGE","G14E_HARVESTRTHRESH", "G")
					endif;
					
					if G14F_FEEDING(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Growing of crops and/or livestock/poultry raising = %d",A07_AGE(f),G14F_FEEDING(f)),"G14f.4","Growing of crops and/or livestock/poultry raising is for 10 years old and over.", "A07_AGE","G14F_FEEDING", "G")
					endif;
					
					if G14Z_OTH(f) <> notappl then
						dispError("E",edit("99",f),maketext("Age = %d, Feeding livestock = %d",A07_AGE(f),G14Z_OTH(f)),"G14z.4","Feeding livestock is for 10 years old and over.", "A07_AGE","G14Z_OTH", "G")
					endif;
					
					if invalueset(G16A_DAYTODAY(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16A_DAYTODAY(f)),"G16A.3","(A) Production activity is for 10 years old and over.", "G16A_DAYTODAY","--", "G")
					endif;
					
					if invalueset(G16B_AQUA(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16B_AQUA(f)),"G16B.3","(B) Production activity is for 10 years old and over.", "G16B_AQUA","--", "G")
					endif;
					
					if invalueset(G16C_MUNIFISH(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16C_MUNIFISH(f)),"G16C.3","(C) Production activity is for 10 years old and over.", "G16C_MUNIFISH","--", "G")
					endif;
					
					if invalueset(G16D_GLEAN(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16D_GLEAN(f)),"G16D.3","(D) Production activity is for 10 years old and over.", "G16D_GLEAN","--", "G")
					endif;
					
					if invalueset(G16E_COMMFISH(f))  then
						dispError("E",edit("99",f),maketext("Production activity = %d",G16E_COMMFISH(f)),"G16E.3","(E) Production activity is for 10 years old and over.", "G16E_COMMFISH","--", "G")
					endif;
					
					if invalueset(G17_AGRIORGMEM(f)) then
						dispError("E",edit("99",f),maketext("Agricultural organization = %d",G17_AGRIORGMEM(f)),"G17.1","Agricultural organization is for 10 years old and over.", "G17_AGRIORGMEM","--", "G")
					endif;
					
					if invalueset(G18_AGRIORG1(f)) then
						dispError("E",edit("99",f),maketext("Reference Code = %d",G18_AGRIORG1(f)),"G18.3","Agricultural Reference Code is for 10 years old and over.", "G18_AGRIORG1","--", "G")
					endif;
					
					if invalueset(G18A_AGRIORG2(f)) then
						dispError("E",edit("99",f),maketext("Reference Code = %d",G18A_AGRIORG2(f)),"G18A.3","Agricultural Reference Code is for 10 years old and over.", "G18A_AGRIORG2","--", "G")
					endif;
					
					if invalueset(G19A_TYPSYSHYDRO(f)) then
						dispError("E",edit("99",f),maketext("Wick System = %d",G19A_TYPSYSHYDRO),"G19A.3","Wick System is for 10 years old and over.", "G01_AGRIACT","G19A_TYPSYSHYDRO", "G")
					endif;
					if invalueset(G19B_TYPSYSHYDRO(f)) then
						dispError("E",edit("99",f),maketext("Deep Water Culture = %d",G19B_TYPSYSHYDRO),"G19B.3","Deep Water Culture is for 10 years old and over.", "G01_AGRIACT","G19B_TYPSYSHYDRO", "G")
					endif;
					
					if invalueset(G19C_TYPSYSHYDRO(f)) then
						dispError("E",edit("99",f),maketext("Nutrient Film Technique = %d",G19C_TYPSYSHYDRO),"G19C.3","Nutrient Film Technique is for 10 years old and over.", "G01_AGRIACT","G19C_TYPSYSHYDRO", "G")
					endif;
					
					if invalueset(G19D_TYPSYSHYDRO(f)) then
						dispError("E",edit("99",f),maketext("Ebb and Flow = %d",G19D_TYPSYSHYDRO),"G19D.3","Ebb and Flow is for 10 years old and over.", "G01_AGRIACT","G19D_TYPSYSHYDRO", "G")
					endif;
					
					if invalueset(G19E_TYPSYSHYDRO(f)) then
						dispError("E",edit("99",f),maketext("Aeroponics = %d",G19E_TYPSYSHYDRO),"G19E.3","Aeroponics is for 10 years old and over.", "G01_AGRIACT","G19E_TYPSYSHYDRO", "G")
					endif;
					
					if invalueset(G19F_TYPSYSHYDRO(f)) then
						dispError("E",edit("99",f),maketext("Drip Systems = %d",G19F_TYPSYSHYDRO),"G19F.3","Aeroponics is for 10 years old and over.", "G01_AGRIACT","G19F_TYPSYSHYDRO", "G")
					endif;
					
					if invalueset(G19Z_TYPSYSHYDRO(f)) then
						dispError("E",edit("99",f),maketext("Other, specify = %d",G19Z_TYPSYSHYDRO),"G19Z.3","Other, specify is for 10 years old and over.", "G01_AGRIACT","G19Z_TYPSYSHYDRO", "G")
					endif;
					
				endif; //if A07_AGE(f) <= 10 then
				
				
				
					
				endif; //if G03_prclloc(f) <> notappl then		
			enddo; //do varying numeric i = 1 while i <= soccurs(SECTION_F1)
			
			//G10
				if not g10_totareaprcl in 00.01:99.99 then
					dispError("E","00",maketext("Physical Area = %d",g10_totareaprcl),"G10.1","Please indicate total physical area of the parcel.", "g10_totareaprcl","--", "G")
				endif;
			
		

		//============= SECTION H ==================
		
			//H01
			if h01_fammem = "" then
				dispError("E","00",maketext("family members = blank"),"H01.1","Family members are/were regularly and seasonally employed in the past 12 months must not be blank.", "h01_fammem","--", "H")
			elseif not invalueset(h01_fammem) then 
				dispError("E","00",maketext("family members = %s",h01_fammem),"H01.2","Family members are/were regularly and seasonally employed in the past 12 months not in valueset.", "h01_fammem","--", "H")
			endif;
			
			//H02 -- SKIPPED
			
			//H03E
			if H3D_NETENTREP = notappl then
				dispError("E","00",maketext("(D) Souces of family income = blank"),"H03d.1","(D) Souces of family income, must have entry.", "H3D_NETENTREP","--", "H")
			endif;
			
			//H03D
			if H3E_NETPROF = notappl then
				dispError("E","00",maketext("(E) Souces of family income = blank"),"H03e.1","(E) Souces of family income, must have entry.", "H3E_NETPROF","--", "H")
			endif;
			
			//H03F
			if H3F_NETSHARE = notappl then
				dispError("E","00",maketext("(F) Souces of family income = blank"),"H03f.1","(F) Souces of family income, must have entry.", "H3F_NETSHARE","--", "H")
			endif;
			
			//H03G
			if H3G_CASHRECEIPTS = notappl then
				dispError("E","00",maketext("(G) Souces of family income = blank"),"H03g.1","(G) Souces of family income, must have entry.", "H3G_CASHRECEIPTS","--", "H")
			endif;
			
			//H03I
			if H3I_SOCIAL = notappl then
				dispError("E","00",maketext("(I) Souces of family income = blank"),"H03i.1","(I) Souces of family income, must have entry.", "H3I_SOCIAL","--", "H")
			endif;
			
			//H03J
			if H3J_SAP = notappl then
				dispError("E","00",maketext("(J) Souces of family income = blank"),"H03j.1","(J) Souces of family income, must have entry.", "H3J_SAP","--", "H")
			endif;
			
			//H03K
			if H3K_OTHER = notappl then
				dispError("E","00",maketext("(K) Souces of family income = blank"),"H03k.1","(K) Souces of family income, must have entry.", "H3K_OTHER","--", "H")
			endif;
			
			//H03L
			if H3L_DIVIDEND = notappl then
				dispError("E","00",maketext("(L) Souces of family income = blank"),"H03l.1","(L) Souces of family income, must have entry.", "H3L_DIVIDEND","--", "H")
			endif;
			
			//H03M
			if H3M_RENTALS = notappl then
				dispError("E","00",maketext("(M) Souces of family income = blank"),"H03m.1","(M) Souces of family income, must have entry.", "H3M_RENTALS","--", "H")
			endif;
			
			//H03N
			if H3N_INTERESTS = notappl then
				dispError("E","00",maketext("(N) Souces of family income = blank"),"H03m.1","(N) Souces of family income, must have entry.", "H3N_INTERESTS","--", "H")
			endif;
			
			//H03O
			if H3O_GIFTS = notappl then
				dispError("E","00",maketext("(O) Souces of family income = blank"),"H03o.1","(O) Souces of family income, must have entry.", "H3O_GIFTS","--", "H")
			endif;
			
			//H03P
			if H3P_FSA = notappl then
				dispError("E","00",maketext("(P) Souces of family income = blank"),"H03p.1","(P) Souces of family income, must have entry.", "H3P_FSA","--", "H")
			endif;
			
			//H03Z
			if H3Z_OTHERSPECIFY = "" then
				dispError("E","00",maketext("(Z)Souces of family income SPECIFY (1) = blank"),"H03z.1","(Z) Souces of family income SPECIFY, must have entry.", "H3Z_OTHERSPECIFY","--", "H")
			endif;
			
			//H03ZA
			if H3ZA_OTHERSPECIFY = "" then
				dispError("E","00",maketext("(Z) Souces of family income SPECIFY (2) = blank"),"H03za.1","(Z) Souces of family income SPECIFY, must have entry.", "H3ZA_OTHERSPECIFY","--", "H")
			endif;
			
			//H03ZN
			if H3ZN_OTHERSPECIFY = "" then
				dispError("E","00",maketext("(Z) Souces of family income SPECIFY (3) = blank"),"H03zn.1","(Z) Souces of family income SPECIFY, must have entry.", "H3ZN_OTHERSPECIFY","--", "H")
			endif;
			
			//H04
			numeric totaldeclared = H2A_TOTAL + H2B_TOTAL + H2C_TOTAL + H3D_NETENTREP + H3E_NETPROF + H3F_NETSHARE + H3G_CASHRECEIPTS + H3H_PANTAWID + H3I_SOCIAL + H3J_SAP + H3K_OTHER + H3L_DIVIDEND + H3M_RENTALS + H3N_INTERESTS + H3O_GIFTS + H3P_FSA + H4A_TOTAL + H4B_TOTAL + H4C_TOTAL;
			if H4A_CFINCOME <> totaldeclared then
				dispError("E","00",maketext("Total Annual Income (%d) <> A-Z Family Income declaration (%d)",H4A_CFINCOME,totaldeclared ),"H04.2","Family Annual is not equal to the amount declared from A-Z.", "H4A_CFINCOME","--", "H")
			elseif H4A_CFINCOME = notappl then
				dispError("E","00",maketext("Total Annual Income = blank "),"H04.1","Total family income, must have entry.", "H4A_CFINCOME","--", "H")
			endif;
			
			//H05
			if H05_SOURCESOFINCOME = notappl then
				dispError("E","00",maketext("Total Annual Income (Current Family) = blank "),"H05.1","Total family income (Current Family), must have entry.", "H05_SOURCESOFINCOME","--", "H")
			endif;
			
			//H05
			if H6_CFINCOME = notappl then
				dispError("E","00",maketext("Total Annual Income (Current Family and former family) = blank "),"H06.1","Total family income (Current Family and former family), must have entry.", "H6_CFINCOME","--", "H")
			endif;
			
			
			//============= SECTION I ==================
			//I01
			if I1AMNTA_BREAD = notappl then
				dispError("E","00",maketext("Bread and cereals = blank "),"I01a.1","Bread and cereals must have entry.", "I1AMNTA_BREAD","--", "I")
			endif;
			
			//I02
			if I1AMNTB_MEAT = notappl then
				dispError("E","00",maketext("Meat = blank "),"I01b.1","Meat must have entry.", "I1AMNTB_MEAT","--", "I")
			endif;
			
			//I03
			if I1AMNTC_FISH = notappl then
				dispError("E","00",maketext("Fish and seafood = blank "),"I01c.1","Fish and seafood  must have entry.", "I1AMNTC_FISH","--", "I")
			endif;
			
			//I04
			if I1AMNTD_MILK = notappl then
				dispError("E","00",maketext("Milk, cheese and eggs = blank "),"I01d.1","Milk, cheese and eggs  must have entry.", "I1AMNTD_MILK","--", "I")
			endif;
			
			//I05
			if I1AMNTE_OILS = notappl then
				dispError("E","00",maketext("Oils and fats = blank "),"I01e.1","Oils and fats  must have entry.", "I1AMNTE_OILS","--", "I")
			endif;
			
			//I06
			if I1AMNTF_FRUITS = notappl then
				dispError("E","00",maketext("Fruits = blank "),"I01f.1","Fruits must have entry.", "I1AMNTF_FRUITS","--", "I")
			endif;
			
			//I07
			if I1AMNTG_VEGETABLES = notappl then
				dispError("E","00",maketext("Vegetable = blank "),"I01g.1","Vegetable must have entry.", "I1AMNTG_VEGETABLES","--", "I")
			endif;
			
			//I08
			if I1AMNTH_SUGAR = notappl then
				dispError("E","00",maketext("Sugar, jam, honey = blank "),"I01h.1","Sugar, jam, honey must have entry.", "I1AMNTH_SUGAR","--", "I")
			endif;
			
			//I09
			if I1AMNTI_FOOD = notappl then
				dispError("E","00",maketext("Food products = blank "),"I01i.1","Food products must have entry.", "I1AMNTI_FOOD","--", "I")
			endif;
			
			//I10
			if I1AMNTJ_COFFEE = notappl then
				dispError("E","00",maketext("Coffee, tea, and cocoa = blank "),"I01j.1","Coffee, tea, and cocoa must have entry.", "I1AMNTJ_COFFEE","--", "I")
			endif;
			
			//I11
			if I1AMNTK_MINERAL = notappl then
				dispError("E","00",maketext("Mineral water, softdrinks fruit and vegetable juices = blank "),"I01k.1","Mineral water, softdrinks fruit and vegetable juices must have entry.", "I1AMNTK_MINERAL","--", "I")
			endif;
			
			//I12
			if I1AMNTL_BOUGHT= notappl then
				dispError("E","00",maketext("Food regularly bought and eaten by the family members outside the home = blank "),"I01l.1","Food regularly bought and eaten by the family members outside the home must have entry.", "I1AMNTL_BOUGHT","--", "I")
			endif;
			
			//I13
			if I1AMNTM_COOKED= notappl then
				dispError("E","00",maketext("Cooked food bought outside the home = blank "),"I01m.1","Cooked food bought outside the home must have entry.", "I1AMNTM_COOKED","--", "I")
			endif;
			
			//I13
			if I1AMNTN_ALLOWANCE= notappl then
				dispError("E","00",maketext("Cooked food regularly given for free = blank "),"I01n.1","Cooked food regularly given for free must have entry.", "I1AMNTN_ALLOWANCE","--", "I")
			endif;
			
			if I1FREQA_BREAD = notappl then
				dispError("E","00",maketext("Bread and cereals Freq = blank "),"I01a.2","Bread and cereals Freq must have entry.", "I1FREQA_BREAD","--", "I")
			elseif not invalueset(I1FREQA_BREAD) then
				dispError("E","00",maketext("Bread and cereals Freq = %d", I1FREQA_BREAD),"I01a.3","Bread and cereals Freq is not in valueset.", "I1FREQA_BREAD","--", "I")
			endif;
			
			if I1FREQB_MEAT = notappl then
				dispError("E","00",maketext("Meat Freq = blank "),"I01b.2","Meat Freq must have entry.", "I1FREQB_MEAT","--", "I")
			elseif not invalueset(I1FREQB_MEAT) then
				dispError("E","00",maketext("Meat Freq = %d ", I1FREQB_MEAT),"I01b.3","Meat Freq must have entry.", "I1FREQB_MEAT","--", "I")
			endif;			
			
			if I1FREQC_FISH = notappl then
				dispError("E","00",maketext("Fish and seafood Freq = blank "),"I01c.2","Fish and seafood Freq must have entry.", "I1FREQC_FISH","--", "I")
			elseif not invalueset(I1FREQC_FISH) then
				dispError("E","00",maketext("Fish and seafood Freq = %d ",I1FREQC_FISH),"I01c.3","Fish and seafood Freq is not invalueset.", "I1FREQC_FISH","--", "I")
			endif;
			
			if I1FREQD_MILK = notappl then
				dispError("E","00",maketext("Milk, cheese and eggs Freq = blank "),"I01d.2","Milk, cheese and eggs Freq must have entry.", "I1FREQD_MILK","--", "I")
			elseif not invalueset(I1FREQD_MILK) then
				dispError("E","00",maketext("Milk, cheese and eggs Freq = %d ",I1FREQD_MILK),"I01d.3","Milk, cheese and eggs Freq is not invalueset.", "I1FREQD_MILK","--", "I")
			endif;
			
			if I1FREQE_OILS = notappl then
				dispError("E","00",maketext("Oils and fats Freq = blank "),"I01e.2","Oils and fats Freq must have entry.", "I1FREQE_OILS","--", "I")
			elseif not invalueset(I1FREQE_OILS) then
				dispError("E","00",maketext("Oils and fats Freq = %d ",I1FREQE_OILS),"I01e.3","Oils and fats Freq is not invalueset.", "I1FREQE_OILS","--", "I")
			endif;
			
			if I1FREQF_FRUITS = notappl then
				dispError("E","00",maketext("Fruits Freq = blank "),"I01f.2","Fruits Freq must have entry.", "I1FREQF_FRUITS","--", "I")
			elseif not invalueset(I1FREQF_FRUITS) then
				dispError("E","00",maketext("Fruits Freq = %d ",I1FREQF_FRUITS),"I01f.3","Fruits Freq is not invalueset.", "I1FREQF_FRUITS","--", "I")
			endif;
			
			if I1FREQG_VEGETABLES = notappl then
				dispError("E","00",maketext("Vegetables Freq = blank "),"I01g.2","Vegetables Freq must have entry.", "I1FREQG_VEGETABLES","--", "I")
			elseif not invalueset(I1FREQG_VEGETABLES) then
				dispError("E","00",maketext("Vegetables Freq = %d ",I1FREQG_VEGETABLES),"I01g.3","Vegetables Freq is not invalueset.", "I1FREQG_VEGETABLES","--", "I")
			endif;
			
			if I1FREQH_SUGAR = notappl then
				dispError("E","00",maketext("sugar, jam, honey Freq = blank "),"I01h.2","sugar, jam, honey Freq must have entry.", "I1FREQH_SUGAR","--", "I")
			elseif not invalueset(I1FREQH_SUGAR) then
				dispError("E","00",maketext("sugar, jam, honey Freq = %d ",I1FREQH_SUGAR),"I01h.3","sugar, jam, honey Freq is not invalueset.", "I1FREQH_SUGAR","--", "I")
			endif;
			
			if I1FREQI_FOOD = notappl then
				dispError("E","00",maketext("food products Freq = blank "),"I01i.2","food products Freq must have entry.", "I1FREQI_FOOD","--", "I")
			elseif not invalueset(I1FREQI_FOOD) then
				dispError("E","00",maketext("food products Freq = %d ",I1FREQI_FOOD),"I01i.3","food products Freq is not invalueset.", "I1FREQI_FOOD","--", "I")
			endif;
			
			if I1FREQJ_COFFEE = notappl then
				dispError("E","00",maketext("coffee, tea, and cocoa Freq = blank "),"I01j.2","coffee, tea, and cocoa Freq must have entry.", "I1FREQJ_COFFEE","--", "I")
			elseif not invalueset(I1FREQJ_COFFEE) then
				dispError("E","00",maketext("coffee, tea, and cocoa Freq = %d ",I1FREQJ_COFFEE),"I01j.3","coffee, tea, and cocoa Freq is not invalueset.", "I1FREQJ_COFFEE","--", "I")
			endif;
			
			if I1FREQK_MINERAL = notappl then
				dispError("E","00",maketext("mineral water, softdrinks fruit and vegetable juices Freq = blank "),"I01k.2","mineral water, softdrinks fruit and vegetable juices Freq must have entry.", "I1FREQK_MINERAL","--", "I")
			elseif not invalueset(I1FREQK_MINERAL) then
				dispError("E","00",maketext("mineral water, softdrinks fruit and vegetable juices Freq = %d ",I1FREQK_MINERAL),"I01k.3","mineral water, softdrinks fruit and vegetable juices Freq is not invalueset.", "I1FREQK_MINERAL","--", "I")
			endif;
			
			if I1FREQL_BOUGHT= notappl then
				dispError("E","00",maketext("food regularly bought and eaten by the family members outside the home Freq = blank "),"I01l.2","food regularly bought and eaten by the family members outside the home Freq must have entry.", "I1FREQL_BOUGHT","--", "I")
			elseif not invalueset(I1FREQL_BOUGHT) then
				dispError("E","00",maketext("food regularly bought and eaten by the family members outside the home Freq = %d ",I1FREQL_BOUGHT),"I01l.3","food regularly bought and eaten by the family members outside the home Freq is not invalueset.", "I1FREQL_BOUGHT","--", "I")
			endif;
			
			if I1FREQM_COOKED= notappl then
				dispError("E","00",maketext("cooked food bought outside the home Freq = blank "),"I01m.2","cooked food bought outside the home Freq must have entry.", "I1FREQM_COOKED","--", "I")
			elseif not invalueset(I1FREQM_COOKED) then
				dispError("E","00",maketext("cooked food bought outside the home Freq = %d ",I1FREQM_COOKED),"I01m.3","cooked food bought outside the home Freq is not invalueset.", "I1FREQM_COOKED","--", "I")
			endif;
			
			if I1FREQN_ALLOWANCE= notappl then
				dispError("E","00",maketext("cooked food regularly given for free Freq = blank "),"I01n.2","cooked food regularly given for free Freq must have entry.", "I1FREQN_ALLOWANCE","--", "I")
			elseif not invalueset(I1FREQN_ALLOWANCE) then
				dispError("E","00",maketext("cooked food regularly given for free Freq = %d ",I1FREQN_ALLOWANCE),"I01n.3","cooked food regularly given for free Freq is not invalueset.", "I1FREQN_ALLOWANCE","--", "I")
			endif;
			
			if TOTALFOOD= notappl then
				dispError("E","00",maketext("Total Annual Food Consumption = blank "),"I02.1","Total Annual Food Consumption must have entry.", "TOTALFOOD","--", "I")
			endif;
			
			//============= SECTION J ==================
			
			//J01
			if j01_worried = notappl then
				dispError("E","00",maketext("Worried about not having enough food to eat = blank "),"J01.1","Worried about not having enough food to eat must have entry.", "j01_worried","--", "J")
			elseif not invalueset(j01_worried) then
				dispError("E","00",maketext("Worried about not having enough food to eat = %d ",j01_worried ),"J01.2","Worried about not having enough food to eat is not in the valueset.", "j01_worried","--", "J")
			endif;
			
			//J02
			if j02_unable = notappl then
				dispError("E","00",maketext("Unable to eat healthy and nutritious food = blank "),"J02.1","Unable to eat healthy and nutritious food must have entry.", "j02_unable","--", "J")
			elseif not invalueset(j02_unable) then
				dispError("E","00",maketext("Unable to eat healthy and nutritious food = %d ",j02_unable ),"J02.2","Unable to eat healthy and nutritious food is not in the valueset.", "j02_unable","--", "J")
			endif;
			
			//J03
			if J03_ATEFEW = notappl then
				dispError("E","00",maketext("Ate only a few kinds of foods = blank "),"J03.1","Ate only a few kinds of foods must have entry.", "J03_ATEFEW","--", "J")
			elseif not invalueset(J03_ATEFEW) then
				dispError("E","00",maketext("Ate only a few kinds of foods = %d ",J03_ATEFEW ),"J03.2","Ate only a few kinds of foods is not in the valueset.", "J03_ATEFEW","--", "J")
			endif;
			
			//J04
			if J04_SKIPMEAL = notappl then
				dispError("E","00",maketext("Had to skip a meal = blank "),"J04.1","Had to skip a meal must have entry.", "J04_SKIPMEAL","--", "J")
			elseif not invalueset(J04_SKIPMEAL) then
				dispError("E","00",maketext("Had to skip a meal = %d ",J04_SKIPMEAL ),"J04.2","Had to skip a meal is not in the valueset.", "J04_SKIPMEAL","--", "J")
			endif;
			
			//J05
			if J05_ATELESS = notappl then
				dispError("E","00",maketext("Ate less than you thought = blank "),"J05.1","Ate less than you thought must have entry.", "J05_ATELESS","--", "J")
			elseif not invalueset(J05_ATELESS) then
				dispError("E","00",maketext("Ate less than you thought = %d ",J05_ATELESS ),"J05.2","Ate less than you thought is not in the valueset.", "J05_ATELESS","--", "J")
			endif;
			
			//J06
			if J06_RUNOUT = notappl then
				dispError("E","00",maketext("Ran out of food = blank "),"J06.1","Ran out of food must have entry.", "J06_RUNOUT","--", "J")
			elseif not invalueset(J06_RUNOUT) then
				dispError("E","00",maketext("Ran out of food = %d ",J06_RUNOUT ),"J06.2","Ran out of food is not in the valueset.", "J06_RUNOUT","--", "J")
			endif;
			
			//J07
			if J07_DIDNOTEAT = notappl then
				dispError("E","00",maketext("Hungry but did not eat = blank "),"J07.1","Hungry but did not eat must have entry.", "J07_DIDNOTEAT","--", "J")
			elseif not invalueset(J07_DIDNOTEAT) then
				dispError("E","00",maketext("Hungry but did not eat= %d ",J07_DIDNOTEAT ),"J07.2","Hungry but did not eat is not in the valueset.", "J07_DIDNOTEAT","--", "J")
			endif;
			
			//J08
			if J08_WENTWITHOUT = notappl then
				dispError("E","00",maketext("Went without eating for a whole day = blank "),"J08.1","Went without eating for a whole day must have entry.", "J08_WENTWITHOUT","--", "J")
			elseif not invalueset(J08_WENTWITHOUT) then
				dispError("E","00",maketext("Went without eating for a whole day = %d ",J08_WENTWITHOUT ),"J08.2","Went without eating for a whole day is not in the valueset.", "J08_WENTWITHOUT","--", "J")
			endif;
			
			
			//============= SECTION K ==================
			//K01
			if K01A_BANK = notappl then
				dispError("E","00",maketext("Ownership of formal financial account (A) = blank "),"K01a.1","(A) Ownership of formal financial account must have entry.", "K01A_BANK","--", "K")
			elseif not invalueset(K01A_BANK) then
				dispError("E","00",maketext("Ownership of formal financial account (A) = %d ",K01A_BANK ),"K01a.2","(A) Ownership of formal financial account is not in the valueset.", "K01A_BANK","--", "K")
			endif;
			
			//K01
			if K01B_DIGITALBANK = notappl then
				dispError("E","00",maketext("Ownership of formal financial account (B) = blank "),"K01b.1","(B) Ownership of formal financial account must have entry.", "K01B_DIGITALBANK","--", "K")
			elseif not invalueset(K01B_DIGITALBANK) then
				dispError("E","00",maketext("Ownership of formal financial account (B) = %d ",K01B_DIGITALBANK ),"K01b.2","(B) Ownership of formal financial account is not in the valueset.", "K01B_DIGITALBANK","--", "K")
			endif;
			
			//K01
			if K01C_EMONEY = notappl then
				dispError("E","00",maketext("Ownership of formal financial account (C) = blank "),"K01c.1","(C) Ownership of formal financial account must have entry.", "K01C_EMONEY","--", "K")
			elseif not invalueset(K01C_EMONEY) then
				dispError("E","00",maketext("Ownership of formal financial account (C) = %d ",K01C_EMONEY ),"K01c.2","(C) Ownership of formal financial account is not in the valueset.", "K01C_EMONEY","--", "K")
			endif;
			
			//K01
			if K01D_NSSLANONSTOCK = notappl then
				dispError("E","00",maketext("Ownership of formal financial account (D) = blank "),"K01d.1","(D) Ownership of formal financial account must have entry.", "K01D_NSSLANONSTOCK","--", "K")
			elseif not invalueset(K01D_NSSLANONSTOCK) then
				dispError("E","00",maketext("Ownership of formal financial account (D) = %d ",K01D_NSSLANONSTOCK ),"K01d.2","(D) Ownership of formal financial account is not in the valueset.", "K01D_NSSLANONSTOCK","--", "K")
			endif;
			
			if K01E_COOP = notappl then
				dispError("E","00",maketext("Ownership of formal financial account (E) = blank "),"K01e.1","(E) Ownership of formal financial account must have entry.", "K01E_COOP","--", "K")
			elseif not invalueset(K01E_COOP) then
				dispError("E","00",maketext("Ownership of formal financial account (E) = %d ",K01E_COOP ),"K01e.2","(E) Ownership of formal financial account is not in the valueset.", "K01E_COOP","--", "K")
			endif;
			
			if K01F_MICROFIN = notappl then
				dispError("E","00",maketext("Ownership of formal financial account (F) = blank "),"K01e.1","(F) Ownership of formal financial account must have entry.", "K01F_MICROFIN","--", "K")
			elseif not invalueset(K01F_MICROFIN) then
				dispError("E","00",maketext("Ownership of formal financial account (F) = %d ",K01F_MICROFIN ),"K01e.2","(F) Ownership of formal financial account is not in the valueset.", "K01F_MICROFIN","--", "K")
			endif;
			
			if K01Z_OTH = notappl then
				dispError("E","00",maketext("Ownership of formal financial account (Z) = blank "),"K01Z.1","(Z) Ownership of formal financial account must have entry.", "K01Z_OTH","--", "K")
			elseif not invalueset(K01Z_OTH) then
				dispError("E","00",maketext("Ownership of formal financial account (Z) = %d ",K01Z_OTH ),"K01F.2","(Z) Ownership of formal financial account is not in the valueset.", "K01Z_OTH","--", "K")
			endif;
			
			if K01Z_OTH = 1 AND K01Za_OTH = "" then
				dispError("E","00",maketext("Ownership of formal financial account SPECIFY (Z) = blank "),"K01ZA.1","(Z) Ownership of formal financial account SPECIFY must have entry.", "K01Za_OTH","--", "K")
			elseif not invalueset(K01ZA_OTH) then
				dispError("E","00",maketext("Ownership of formal financial account SPECIFY (Z) = %S ",K01Za_OTH ),"K01FA.2","(Z) Ownership of formal financial account SPECIFY is not in the valueset.", "K01Za_OTH","--", "K")
			endif;
			
			if K02A_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account = blank "),"K02A.1","Reason for not having any formal financial account must have entry.", "K02A_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02A_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account = %d ",K02A_RSNNOFINACCT ),"K02A.2","Reason for not having any formal financial account is not in the valueset.", "K02A_RSNNOFINACCT","--", "K")
			endif;
			
			if K02A_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (A) = blank "),"K02A.1","(A) Reason for not having any formal financial account must have entry.", "K02A_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02A_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (A) = %d ",K02A_RSNNOFINACCT ),"K02A.2","(A) Reason for not having any formal financial account is not in the valueset.", "K02A_RSNNOFINACCT","--", "K")
			endif;
			
			if K02B_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (B) = blank "),"K02B.1","(B) Reason for not having any formal financial account must have entry.", "K02B_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02B_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (B) = %d ",K02B_RSNNOFINACCT ),"K02B.2","(B) Reason for not having any formal financial account is not in the valueset.", "K02B_RSNNOFINACCT","--", "K")
			endif;
			
			if K02C_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (C) = blank "),"K02C.1","(C) Reason for not having any formal financial account must have entry.", "K02C_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02C_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (C) = %d ",K02C_RSNNOFINACCT ),"K02C.2","(C) Reason for not having any formal financial account is not in the valueset.", "K02C_RSNNOFINACCT","--", "K")
			endif;
			
			if K02D_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (D) = blank "),"K02D.1","(D) Reason for not having any formal financial account must have entry.", "K02D_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02D_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (D) = %d ",K02D_RSNNOFINACCT ),"K02D.2","(D) Reason for not having any formal financial account is not in the valueset.", "K02D_RSNNOFINACCT","--", "K")
			endif;
			
			if K02E_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (E) = blank "),"K02E.1","(E) Reason for not having any formal financial account must have entry.", "K02E_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02E_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (E) = %d ",K02E_RSNNOFINACCT ),"K02E.2","(E) Reason for not having any formal financial account is not in the valueset.", "K02E_RSNNOFINACCT","--", "K")
			endif;
			
			if K02F_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (F) = blank "),"K02F.1","(F) Reason for not having any formal financial account must have entry.", "K02F_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02F_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (F) = %d ",K02F_RSNNOFINACCT ),"K02F.2","(F) Reason for not having any formal financial account is not in the valueset.", "K02F_RSNNOFINACCT","--", "K")
			endif;
			
			if K02G_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (G) = blank "),"K02G.1","(G) Reason for not having any formal financial account must have entry.", "K02G_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02G_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (G) = %d ",K02G_RSNNOFINACCT ),"K02G.2","(G) Reason for not having any formal financial account is not in the valueset.", "K02G_RSNNOFINACCT","--", "K")
			endif;
			
			if K02H_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (H) = blank "),"K02H.1","(H) Reason for not having any formal financial account must have entry.", "K02H_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02H_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (H) = %d ",K02H_RSNNOFINACCT ),"K02H.2","(H) Reason for not having any formal financial account is not in the valueset.", "K02H_RSNNOFINACCT","--", "K")
			endif;
			
			if K02I_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (I) = blank "),"K02I.1","(I) Reason for not having any formal financial account must have entry.", "K02I_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02I_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (I) = %d ",K02I_RSNNOFINACCT ),"K02i.2","(I) Reason for not having any formal financial account is not in the valueset.", "K02I_RSNNOFINACCT","--", "K")
			endif;
			
			if K02J_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (J) = blank "),"K02J.1","(J) Reason for not having any formal financial account must have entry.", "K02J_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02J_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (J) = %d ",K02I_RSNNOFINACCT ),"K02J.2","(J) Reason for not having any formal financial account is not in the valueset.", "K02J_RSNNOFINACCT","--", "K")
			endif;
			
			if K02Z_RSNNOFINACCT = notappl then
				dispError("E","00",maketext("Reason for not having any formal financial account (Z) = blank "),"K02Z.1","(Z) Reason for not having any formal financial account must have entry.", "K02Z_RSNNOFINACCT","--", "K")
			elseif not invalueset(K02Z_RSNNOFINACCT) then
				dispError("E","00",maketext("Reason for not having any formal financial account (Z) = %d ",K02Z_RSNNOFINACCT ),"K02Z.2","(Z) Reason for not having any formal financial account is not in the valueset.", "K02Z_RSNNOFINACCT","--", "K")
			endif;
			
			if K02Z_RSNNOFINACCT = 1 AND K02ZA_RSNNOFINACCT = "" then
				dispError("E","00",maketext("Reason for not having any formal financial account SPECIFY (Z) = blank "),"K02ZA.1","(Z) Reason for not having any formal financial account SPECIFY must have entry.", "K02ZA_RSNNOFINACCT","--", "K")
			endif;
			
			if K03_EDUC= notappl then
				dispError("E","00",maketext("Current use of formal financial account (A) = blank "),"K03A.1","(A) Current use of formal financial account must have entry.", "K03_EDUC","--", "K")
			elseif not invalueset(K03_EDUC) then
				dispError("E","00",maketext("Current use of formal financial account (A) = %d ",K03_EDUC ),"K03A.2","(A) Current use of formal financial account is not in the valueset.", "K03_EDUC","--", "K")
			endif;
			
			if K03_TRAVEL= notappl then
				dispError("E","00",maketext("Current use of formal financial account (B) = blank "),"K03B.1","(B) Current use of formal financial account must have entry.", "K03_TRAVEL","--", "K")
			elseif not invalueset(K03_TRAVEL) then
				dispError("E","00",maketext("Current use of formal financial account (B) = %d ",K03_TRAVEL ),"K03B.2","(B) Current use of formal financial account is not in the valueset.", "K03_TRAVEL","--", "K")
			endif;
			
			if K03_EMERGENCY= notappl then
				dispError("E","00",maketext("Current use of formal financial account (C) = blank "),"K03C.1","(C) Current use of formal financial account must have entry.", "K03_EMERGENCY","--", "K")
			elseif not invalueset(K03_EMERGENCY) then
				dispError("E","00",maketext("Current use of formal financial account (C) = %d ",K03_EMERGENCY ),"K03C.2","(C) Current use of formal financial account is not in the valueset.", "K03_EMERGENCY","--", "K")
			endif;
						
			if k03_savbusiness= notappl then
				dispError("E","00",maketext("Current use of formal financial account (D) = blank "),"K03D.1","(D) Current use of formal financial account must have entry.", "k03_savbusiness","--", "K")
			elseif not invalueset(k03_savbusiness) then
				dispError("E","00",maketext("Current use of formal financial account (D) = %d ",k03_savbusiness ),"K03D.2","(D) Current use of formal financial account is not in the valueset.", "k03_savbusiness","--", "K")
			endif;
			
			if k03_event= notappl then
                dispError("E","00",maketext("Current use of formal financial account (E) = blank "),"K03E.1","(E) Current use of formal financial account must have entry.", "k03_event","--", "K")

            elseif not invalueset(k03_event) then
                dispError("E","00",maketext("Current use of formal financial account (E) = %d ",k03_event ),"K03E.2","(E) Current use of formal financial account is not in the valueset.", "k03_event","--", "K")
			endif;

			if k03_invest= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (F) = blank "),"K03F.1","(F) Current use of formal financial account must have entry.", "k03_invest","--", "K")
	            elseif not invalueset(k03_invest) then
	                dispError("E","00",maketext("Current use of formal financial account (F) = %d ",k03_invest ),"K03F.2","(F) Current use of formal financial account is not in the valueset.", "k03_invest","--", "K")
			endif;
			if k03_savoth= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (G) = blank "),"K03G.1","(G) Current use of formal financial account must have entry.", "k03_savoth","--", "K")

	            elseif not invalueset(k03_savoth) then
	                dispError("E","00",maketext("Current use of formal financial account (G) = %d ",k03_savoth ),"K03G.2","(G) Current use of formal financial account is not in the valueset.", "k03_savoth","--", "K")
			endif;
			if k03_ebanking= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (H) = blank "),"K03H.1","(H) Current use of formal financial account must have entry.", "k03_ebanking","--", "K")

	            elseif not invalueset(k03_ebanking) then
	                dispError("E","00",maketext("Current use of formal financial account (H) = %d ",k03_ebanking ),"K03H.2","(H) Current use of formal financial account is not in the valueset.", "k03_ebanking","--", "K")

			endif;
			if K03_DEBIT= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (I) = blank "),"K03I.1","(I) Current use of formal financial account must have entry.", "K03_DEBIT","--", "K")

	            elseif not invalueset(K03_DEBIT) then
	                dispError("E","00",maketext("Current use of formal financial account (I) = %d ",K03_DEBIT ),"K03I.2","(I) Current use of formal financial account is not in the valueset.", "K03_DEBIT","--", "K")
			endif;
			if k03_check= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (J) = blank "),"K03J.1","(J) Current use of formal financial account must have entry.", "k03_check","--", "K")

	            elseif not invalueset(k03_check) then
	                dispError("E","00",maketext("Current use of formal financial account (J) = %d ",k03_check ),"K03J.2","(J) Current use of formal financial account is not in the valueset.", "k03_check","--", "K")
			endif;

			if k03_pos= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (K) = blank "),"K03K.1","(K) Current use of formal financial account must have entry.", "k03_pos","--", "K")

	            elseif not invalueset(k03_pos) then
	                dispError("E","00",maketext("Current use of formal financial account (K) = %d ",k03_pos ),"K03K.2","(K) Current use of formal financial account is not in the valueset.", "k03_pos","--", "K")
			endif;
			if k03_bills= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (L) = blank "),"K03L.1","(L) Current use of formal financial account must have entry.", "k03_bills","--", "K")

	            elseif not invalueset(k03_bills) then
	                dispError("E","00",maketext("Current use of formal financial account (L) = %d ",k03_bills ),"K03L.2","(L) Current use of formal financial account is not in the valueset.", "k03_bills","--", "K")
			endif;
			if k03_onlineshop= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (M) = blank "),"K03M.1","(M) Current use of formal financial account must have entry.", "k03_onlineshop","--", "K")

	            elseif not invalueset(k03_onlineshop) then
	                dispError("E","00",maketext("Current use of formal financial account (M) = %d ",k03_onlineshop ),"K03M.2","(M) Current use of formal financial account is not in the valueset.", "k03_onlineshop","--", "K")
			endif;
			if k03_benefits= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (N) = blank "),"K03N.1","(N) Current use of formal financial account must have entry.", "k03_benefits","--", "K")

	            elseif not invalueset(k03_benefits) then
	                dispError("E","00",maketext("Current use of formal financial account (N) = %d ",k03_benefits ),"K03N.2","(N) Current use of formal financial account is not in the valueset.", "k03_benefits","--", "K")
			endif;
			if k03_benefits= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (O) = blank "),"K03O.1","(O) Current use of formal financial account must have entry.", "k03_benefits","--", "K")

	            elseif not invalueset(k03_benefits) then
	                dispError("E","00",maketext("Current use of formal financial account (O) = %d ",K03_SALARY ),"K03O.2","(O) Current use of formal financial account is not in the valueset.", "k03_benefits","--", "K")
			endif;
			if k03_salary= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (P) = blank "),"K03P.1","(P) Current use of formal financial account must have entry.", "k03_salary","--", "K")

	            elseif not invalueset(k03_salary) then
	                dispError("E","00",maketext("Current use of formal financial account (P) = %d ",k03_salary ),"K03P.2","(P) Current use of formal financial account is not in the valueset.", "k03_salary","--", "K")
			endif;
			if k03_pension= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (Q) = blank "),"K03Q.1","(Q) Current use of formal financial account must have entry.", "k03_pension","--", "K")

	            elseif not invalueset(k03_pension) then
	                dispError("E","00",maketext("Current use of formal financial account (Q) = %d ",k03_pension ),"K03Q.2","(Q) Current use of formal financial account is not in the valueset.", "k03_pension","--", "K")
			endif;
			if k03_loanreceipt= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (R) = blank "),"K03R.1","(R) Current use of formal financial account must have entry.", "k03_loanreceipt","--", "K")

	            elseif not invalueset(k03_loanreceipt) then
	                dispError("E","00",maketext("Current use of formal financial account (R) = %d ",k03_loanreceipt ),"K03R.2","(R) Current use of formal financial account is not in the valueset.", "k03_loanreceipt","--", "K")
			endif;
			if K03_ALLOWANCE= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (S) = blank "),"K03S.1","(S) Current use of formal financial account must have entry.", "K03_ALLOWANCE","--", "K")

	            elseif not invalueset(K03_ALLOWANCE) then
	                dispError("E","00",maketext("Current use of formal financial account (S) = %d ",K03_ALLOWANCE ),"K03S.2","(S) Current use of formal financial account is not in the valueset.", "K03_ALLOWANCE","--", "K")
			endif;
			if k03_businessop= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (T) = blank "),"K03T.1","(T) Current use of formal financial account must have entry.", "k03_businessop","--", "K")

	            elseif not invalueset(k03_businessop) then
	                dispError("E","00",maketext("Current use of formal financial account (T) = %d ",k03_businessop ),"K03T.2","(T) Current use of formal financial account is not in the valueset.", "k03_businessop","--", "K")
			endif;
			if k03_remittance= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (U) = blank "),"K03U.1","(U) Current use of formal financial account must have entry.", "k03_remittance","--", "K")

	            elseif not invalueset(k03_remittance) then
	                dispError("E","00",maketext("Current use of formal financial account (U) = %d ",k03_remittance ),"K03U.2","(U) Current use of formal financial account is not in the valueset.", "k03_remittance","--", "K")
			endif;
			if k03_others= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (Z) = blank "),"K03Z.1","(Z) Current use of formal financial account must have entry.", "k03_others","--", "K")

	            elseif not invalueset(k03_others) then
	                dispError("E","00",maketext("Current use of formal financial account (Z) = %d ",k03_others ),"K03Z.2","(Z) Current use of formal financial account is not in the valueset.", "k03_others","--", "K")
			endif;
			
			
			if K04_OTHERFORM= notappl then
	                dispError("E","00",maketext("Saves money other than specified form = blank "),"K04.1","This item must not be blank. Please input answer.", "K04_OTHERFORM","--", "K")

	            elseif not invalueset(K04_OTHERFORM) then
	                dispError("E","00",maketext("Saves money other than specified form= %d ",K04_OTHERFORM ),"K04.2","You have entered an invalid answer. Please verify and correct entry.", "K04_OTHERFORM","--", "K")
			endif;
			
			if K05_WHERE= "" then
	                dispError("E","00",maketext("Saves money other than specified form = blank "),"K04.1","This item must not be blank. Please input answer.", "K05_WHERE","--", "K")
			endif;
			
			if K01A_BANK = 1 or K03_EDUC = 1 or K03_TRAVEL = 1 or K03_EMERGENCY = 1 or K03_SAVBUSINESS = 1 or K03_EVENT = 1 or K03_INVEST = 1 or K03_SAVOTH = 1 then
				
				if k06a_rsnnosavings = notappl then
	                dispError("E","00",maketext("Current use of formal financial account (A) = blank "),"K06A.1","(A) Current use of formal financial account must have entry.", "k06a_rsnnosavings","--", "K")

	            elseif not invalueset(k06a_rsnnosavings) then
	                dispError("E","00",maketext("Current use of formal financial account (A) = %d ",k06a_rsnnosavings ),"K06A.2","(A) Current use of formal financial account is not in the valueset.", "k06a_rsnnosavings","--", "K")
				endif;
				if k06b_rsnnosavings = notappl then
	                dispError("E","00",maketext("Current use of formal financial account (B) = blank "),"K06B.1","(B) Current use of formal financial account must have entry.", "k06b_rsnnosavings","--", "K")				
	            elseif not invalueset(k06b_rsnnosavings) then
	                dispError("E","00",maketext("Current use of formal financial account (B) = %d ",k06b_rsnnosavings ),"K036.2","(B) Current use of formal financial account is not in the valueset.", "k06b_rsnnosavings","--", "K")
				endif;
				if k06c_rsnnosavings = notappl then
	                dispError("E","00",maketext("Current use of formal financial account (C) = blank "),"K06C.1","(C) Current use of formal financial account must have entry.", "k06c_rsnnosavings","--", "K")
	            elseif not invalueset(k06c_rsnnosavings) then
	                dispError("E","00",maketext("Current use of formal financial account (C) = %d ",k06c_rsnnosavings ),"K06C.2","(C) Current use of formal financial account is not in the valueset.", "k06c_rsnnosavings","--", "K")
				endif;
				if k06d_rsnnosavings = notappl then
	                dispError("E","00",maketext("Current use of formal financial account (D) = blank "),"K06D.1","(D) Current use of formal financial account must have entry.", "k06d_rsnnosavings","--", "K")
	            elseif not invalueset(k06d_rsnnosavings) then
	                dispError("E","00",maketext("Current use of formal financial account (D) = %d ",k06d_rsnnosavings ),"K06D.2","(D) Current use of formal financial account is not in the valueset.", "k06d_rsnnosavings","--", "K")
				endif;
				if k06z_rsnnosavings= notappl then
	                dispError("E","00",maketext("Current use of formal financial account (Z) = blank "),"K06Z.1","(Z) Current use of formal financial account must have entry.", "k06z_rsnnosavings","--", "K")
	            elseif not invalueset(k06z_rsnnosavings) then
	                dispError("E","00",maketext("Current use of formal financial account (Z) = %d ",k06z_rsnnosavings ),"K06Z.2","(Z) Current use of formal financial account is not in the valueset.", "k06z_rsnnosavings","--", "K")
				endif;

				if K07_LOAN = notappl then
	                dispError("E","00",maketext("Current use of formal financial account (Z) = blank "),"K06Z.1","(Z) Current use of formal financial account must have entry.", "K07_LOAN","--", "K")
	            elseif not invalueset(K07_LOAN) then
	                dispError("E","00",maketext("Current use of formal financial account (Z) = %d ",K07_LOAN ),"K06Z.2","(Z) Current use of formal financial account is not in the valueset.", "K07_LOAN","--", "K")
				endif;
			
				if K07_LOAN = 1 then
					
					if k08a_bank= notappl then
		                dispError("E","00",maketext("Loan provider (A) = blank "),"K08A.1","(A) Loan provider must have entry.", "k08a_bank","--", "K")
		            elseif not invalueset(k08a_bank) then
		                dispError("E","00",maketext("Loan provider (A) = %d ",k08a_bank),"K08A.2","(A) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08b_nssla= notappl then
		                dispError("E","00",maketext("Loan provider (B) = blank "),"K08B.1","(B) Loan provider must have entry.", "k08b_nssla","--", "K")
		            elseif not invalueset(k08b_nssla) then
		                dispError("E","00",maketext("Loan provider (B) = %d ",k08b_nssla),"K08B.2","(B) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08c_coop= notappl then
		                dispError("E","00",maketext("Loan provider (C) = blank "),"K08C.1","(C) Loan provider must have entry.", "k08c_coop","--", "K")
		            elseif not invalueset(k08c_coop) then
		                dispError("E","00",maketext("Loan providert (C) = %d ",k08c_coop),"K08C.2","(C) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08d_microfin= notappl then
		                dispError("E","00",maketext("Loan provider (D) = blank "),"K08D.1","(D) Loan provider must have entry.", "k08d_microfin","--", "K")
		            elseif not invalueset(k08d_microfin) then
		                dispError("E","00",maketext("Loan provider (D) = %d ",k08d_microfin),"K08D.2","(D) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08e_traditional= notappl then
		                dispError("E","00",maketext("Loan provider (E) = blank "),"K08E.1","(E) Loan provider must have entry.", "k08e_traditional","--", "K")
		            elseif not invalueset(k08e_traditional) then
		                dispError("E","00",maketext("Loan provider (E) = %d ",k08e_traditional),"K08E.2","(E) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08f_fincomappcntr= notappl then
		                dispError("E","00",maketext("Loan provider (F) = blank "),"K08F.1","(F) Loan provider must have entry.", "k08f_fincomappcntr","--", "K")
		            elseif not invalueset(k08f_fincomappcntr) then
		                dispError("E","00",maketext("Loan provider (F) = %d ",k08f_fincomappcntr),"K08F.2","(F) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08g_online= notappl then
		                dispError("E","00",maketext("Loan provider (G) = blank "),"K08G.1","(G) Loan provider must have entry.", "k08g_online","--", "K")
		            elseif not invalueset(k08g_online) then
		                dispError("E","00",maketext("Loan provider (G) = %d ",k08g_online),"K08G.2","(G) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08h_pawnshop= notappl then
		                dispError("E","00",maketext("Loan provider (H) = blank "),"K08H.1","(H) Loan provider must have entry.", "k08h_pawnshop","--", "K")
		            elseif not invalueset(k08h_pawnshop) then
		                dispError("E","00",maketext("Loan provider (H) = %d ",k08h_pawnshop),"K08H.2","(H) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;					
					if k08i_govtinstitution= notappl then
		                dispError("E","00",maketext("Loan provider (I) = blank "),"K08I.1","(I) Loan provider must have entry.", "k08i_govtinstitution","--", "K")
		            elseif not invalueset(k08i_govtinstitution) then
		                dispError("E","00",maketext("Loan provider (I) = %d ",k08i_govtinstitution),"K08I.2","(I) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08j_famrelfrnds= notappl then
		                dispError("E","00",maketext("Loan provider (J) = blank "),"K08J.1","(J) Loan provider must have entry.", "k08j_famrelfrnds","--", "K")
		            elseif not invalueset(k08j_famrelfrnds) then
		                dispError("E","00",maketext("Loan provider (J) = %d ",k08j_famrelfrnds),"K08J.2","(J) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					
					if k08k_informal= notappl then
		                dispError("E","00",maketext("Loan provider (K) = blank "),"K08K.1","(K) Loan provider must have entry.", "k08k_informal","--", "K")
		            elseif not invalueset(k08k_informal) then
		                dispError("E","00",maketext("Loan provider (K) = %d ",k08k_informal),"K08K.2","(K) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08l_advance= notappl then
		                dispError("E","00",maketext("Loan provider (L) = blank "),"K08L.1","(L) Loan provider must have entry.", "k08l_advance","--", "K")
		            elseif not invalueset(k08l_advance) then
		                dispError("E","00",maketext("Loan provider (L) = %d ",k08l_advance),"K08L.2","(L) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08m_inhousefin= notappl then
		                dispError("E","00",maketext("Loan provider (M) = blank "),"K08M.1","(M) Loan provider must have entry.", "k08m_inhousefin","--", "K")
		            elseif not invalueset(k08m_inhousefin) then
		                dispError("E","00",maketext("Loan provider (M) = %d ",k08m_inhousefin),"K08M.2","(M) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08n_notdeclareknow= notappl then
		                dispError("E","00",maketext("Loan provider (N) = blank "),"K08N.1","(N) Loan provider must have entry.", "k08n_notdeclareknow","--", "K")
		            elseif not invalueset(k08n_notdeclareknow) then
		                dispError("E","00",maketext("Loan provider (N) = %d ",k08n_notdeclareknow),"K08N.2","(N) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08x_prefernoanswer= notappl then
		                dispError("E","00",maketext("Loan provider (X) = blank "),"K08X.1","(X) Loan provider must have entry.", "k08x_prefernoanswer","--", "K")
		            elseif not invalueset(k08x_prefernoanswer) then
		                dispError("E","00",maketext("Loan provider (O) = %d ",k08x_prefernoanswer),"K08O.2","(O) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					if k08z_others= notappl then
		                dispError("E","00",maketext("Loan provider (Z) = blank "),"K08Z.1","(Z) Loan provider must have entry.", "k08z_others","--", "K")
		            elseif not invalueset(k08z_others) then
		                dispError("E","00",maketext("Loan provider (P) = %d ",k08z_others),"K08P.2","(P) Loan provider is not in the valueset.", "k08a_bank","--", "K")
					ENDIF;
					
					
					if k09a_business= notappl then
		                dispError("E","00",maketext("Purpose of loan (A) = blank "),"K09A.1","(A) Purpose of loan must have an entry.", "k09a_business","--", "K")
		            elseif not invalueset(k09a_business) then
		                dispError("E","00",maketext("Purpose of loan (A) = %d ",k09a_business),"K09A.2","(A) Purpose of loan is not in the valueset.", "k09a_business","--", "K")
					endif;
					
					if k09b_educ= notappl then
		                dispError("E","00",maketext("Purpose of loan (B) = blank "),"K09B.1","(B) Purpose of loan must have an entry.", "k09b_educ","--", "K")
		            elseif not invalueset(k09b_educ) then
		                dispError("E","00",maketext("Purpose of loan (B) = %d ",k09b_educ),"K09B.2","(B) Purpose of loan is not in the valueset.", "k09b_educ","--", "K")
					endif;
					if k09c_travel= notappl then
		                dispError("E","00",maketext("Purpose of loan (C) = blank "),"K09C.1","(C) Purpose of loan must have an entry.", "k09c_travel","--", "K")
		            elseif not invalueset(k09c_travel) then
		                dispError("E","00",maketext("Purpose of loan (C) = %d ",k09c_travel),"K09C.2","(C) Purpose of loan is not in the valueset.", "k09c_travel","--", "K")
					endif;
					if k09d_medical= notappl then
		                dispError("E","00",maketext("Purpose of loan (D) = blank "),"K09D.1","(D) Purpose of loan must have an entry.", "k09d_medical","--", "K")
		            elseif not invalueset(k09d_medical) then
		                dispError("E","00",maketext("Purpose of loan (D) = %d ",k09d_medical),"K09D.2","(D) Purpose of loan is not in the valueset.", "k09d_medical","--", "K")
					endif;
					
					if k09e_dailyneeds= notappl then
		                dispError("E","00",maketext("Purpose of loan (E) = blank "),"K09E.1","(E) Purpose of loan must have an entry.", "k09e_dailyneeds","--", "K")
		            elseif not invalueset(k09e_dailyneeds) then
		                dispError("E","00",maketext("Purpose of loan (E) = %d ",k09e_dailyneeds),"K09E.2","(E) Purpose of loan is not in the valueset.", "k09e_dailyneeds","--", "K")
					endif;
					if k09f_vehicle= notappl then
		                dispError("E","00",maketext("Purpose of loan (F) = blank "),"K09F.1","(F) Purpose of loan must have an entry.", "k09f_vehicle","--", "K")
		            elseif not invalueset(k09f_vehicle) then
		                dispError("E","00",maketext("Purpose of loan (F) = %d ",k09f_vehicle),"K09F.2","(F) Purpose of loan is not in the valueset.", "k09f_vehicle","--", "K")
					endif;
					if k09g_realestate= notappl then
		                dispError("E","00",maketext("Purpose of loan (G) = blank "),"K09G.1","(G) Purpose of loan must have an entry.", "k09g_realestate","--", "K")
		            elseif not invalueset(k09g_realestate) then
		                dispError("E","00",maketext("Purpose of loan (G) = %d ",k09g_realestate),"K09G.2","(G) Purpose of loan is not in the valueset.", "k09g_realestate","--", "K")
					endif;
					if k09h_loan= notappl then
		                dispError("E","00",maketext("Purpose of loan (H) = blank "),"K09H.1","(H) Purpose of loan must have an entry.", "k09h_loan","--", "K")
		            elseif not invalueset(k09h_loan) then
		                dispError("E","00",maketext("Purpose of loan (H) = %d ",k09h_loan),"K09H.2","(H) Purpose of loan is not in the valueset.", "k09h_loan","--", "K")
					endif;
					if k09i_appliance= notappl then
		                dispError("E","00",maketext("Purpose of loan (I) = blank "),"K09I.1","(I) Purpose of loan must have an entry.", "k09i_appliance","--", "K")
		            elseif not invalueset(k09i_appliance) then
		                dispError("E","00",maketext("Purpose of loan (I) = %d ",k09i_appliance),"K09I.2","(I) Purpose of loan is not in the valueset.", "k09i_appliance","--", "K")
					endif;
					if k09j_insurance= notappl then
		                dispError("E","00",maketext("Purpose of loan (J) = blank "),"K09J.1","(J) Purpose of loan must have an entry.", "k09j_insurance","--", "K")
		            elseif not invalueset(k09j_insurance) then
		                dispError("E","00",maketext("Purpose of loan (J) = %d ",k09j_insurance),"K09J.2","(J) Purpose of loan is not in the valueset.", "k09j_insurance","--", "K")
					endif;
					if k09k_events= notappl then
		                dispError("E","00",maketext("Purpose of loan (K) = blank "),"K09K.1","(K) Purpose of loan must have an entry.", "k09k_events","--", "K")
		            elseif not invalueset(k09k_events) then
		                dispError("E","00",maketext("Purpose of loan (K) = %d ",k09k_events),"K09K.2","(K) Purpose of loan is not in the valueset.", "k09k_events","--", "K")
					endif;
					if k09x_prefernoanswer= notappl then
		                dispError("E","00",maketext("Purpose of loan (X) = blank "),"K09X.1","(X) Purpose of loan must have an entry.", "k09x_prefernoanswer","--", "K")
		            elseif not invalueset(k09x_prefernoanswer) then
		                dispError("E","00",maketext("Purpose of loan (X) = %d ",k09x_prefernoanswer),"K09X.2","(X) Purpose of loan is not in the valueset.", "k09x_prefernoanswer","--", "K")
					endif;
					
					if k09z_others= notappl then
		                dispError("E","00",maketext("Purpose of loan (Z) = blank "),"K09Z.1","(Z) Purpose of loan must have an entry.", "k09z_others","--", "K")
		            elseif not invalueset(k09z_others) then
		                dispError("E","00",maketext("Purpose of loan (Z) = %d ",k09z_others),"K09M.2","(Z) Purpose of loan is not in the valueset.", "k09z_others","--", "K")
					endif;
					
					if k10a_life= notappl then
		                dispError("E","00",maketext("Availment of insurance product (A) = blank "),"K10A.1","(A) Availment of insurance product must have an entry.", "k10a_life","--", "K")
		            elseif not invalueset(k10a_life) then
		                dispError("E","00",maketext("Availment of insurance product (A) = %d ",k10a_life),"K10A.2","(A) Availment of insurance product is not in the valueset.", "k10a_life","--", "K")
					endif;
					if k10b_accident= notappl then
		                dispError("E","00",maketext("Availment of insurance product (B) = blank "),"K10B.1","(B) Availment of insurance product must have an entry.", "k10b_accident","--", "K")
		            elseif not invalueset(k10b_accident) then
		                dispError("E","00",maketext("Availment of insurance product (B) = %d ",k10b_accident),"K10B.2","(B) Availment of insurance product is not in the valueset.", "k10b_accident","--", "K")
					endif;
					if k10c_health= notappl then
		                dispError("E","00",maketext("Availment of insurance product (C) = blank "),"K10C.1","(C) Availment of insurance product must have an entry.", "k10c_health","--", "K")
		            elseif not invalueset(k10c_health) then
		                dispError("E","00",maketext("Availment of insurance product (C) = %d ",k10c_health),"K10C.2","(C) Availment of insurance product is not in the valueset.", "k10c_health","--", "K")
					endif;
					if k10d_combination= notappl then
		                dispError("E","00",maketext("Availment of insurance product (D) = blank "),"K10D.1","(D) Availment of insurance product must have an entry.", "k10d_combination","--", "K")
		            elseif not invalueset(k10d_combination) then
		                dispError("E","00",maketext("Availment of insurance product (D) = %d ",k10d_combination),"K10D.2","(D) Availment of insurance product is not in the valueset.", "k10d_combination","--", "K")
					endif;
					if k10e_fire= notappl then
		                dispError("E","00",maketext("Availment of insurance product (E) = blank "),"K10E.1","(E) Availment of insurance product must have an entry.", "k10e_fire","--", "K")
		            elseif not invalueset(k10e_fire) then
		                dispError("E","00",maketext("Availment of insurance product (E) = %d ",k10e_fire),"K10E.2","(E) Availment of insurance product is not in the valueset.", "k10e_fire","--", "K")
					endif;
					if k10f_vehicle= notappl then
		                dispError("E","00",maketext("Availment of insurance product (F) = blank "),"K10F.1","(F) Availment of insurance product must have an entry.", "k10f_vehicle","--", "K")
		            elseif not invalueset(k10f_vehicle) then
		                dispError("E","00",maketext("Availment of insurance product (F) = %d ",k10f_vehicle),"K10F.2","(F) Availment of insurance product is not in the valueset.", "k10f_vehicle","--", "K")
					endif;
					if k10g_micro= notappl then
		                dispError("E","00",maketext("Availment of insurance product (G) = blank "),"K10G.1","(G) Availment of insurance product must have an entry.", "k10g_micro","--", "K")
		            elseif not invalueset(k10g_micro) then
		                dispError("E","00",maketext("Availment of insurance product (G) = %d ",k10g_micro),"K10G.2","(G) Availment of insurance product is not in the valueset.", "k10g_micro","--", "K")
					endif;
					if k10h_crop= notappl then
		                dispError("E","00",maketext("Availment of insurance product (H) = blank "),"K10H.1","(H) Availment of insurance product must have an entry.", "k10h_crop","--", "K")
		            elseif not invalueset(k10h_crop) then
		                dispError("E","00",maketext("Availment of insurance product (H) = %d ",k10h_crop),"K10H.2","(H) Availment of insurance product is not in the valueset.", "k10h_crop","--", "K")
					endif;
					if k10i_livepoul= notappl then
		                dispError("E","00",maketext("Availment of insurance product (I) = blank "),"K10I.1","(I) Availment of insurance product must have an entry.", "k10i_livepoul","--", "K")
		            elseif not invalueset(k10i_livepoul) then
		                dispError("E","00",maketext("Availment of insurance product (I) = %d ",k10i_livepoul),"K10I.2","(I) Availment of insurance product is not in the valueset.", "k10i_livepoul","--", "K")
					endif;
					if k10j_fisheries= notappl then
		                dispError("E","00",maketext("Availment of insurance product (J) = blank "),"K10J.1","(J) Availment of insurance product must have an entry.", "k10j_fisheries","--", "K")
		            elseif not invalueset(k10j_fisheries) then
		                dispError("E","00",maketext("Availment of insurance product (J) = %d ",k10j_fisheries),"K10J.2","(J) Availment of insurance product is not in the valueset.", "k10j_fisheries","--", "K")
					endif;
					if k10x_prefernoanswer= notappl then
		                dispError("E","00",maketext("Availment of insurance product (X) = blank "),"K10X.1","(X) Availment of insurance product must have an entry.", "k10x_prefernoanswer","--", "K")
		            elseif not invalueset(k10x_prefernoanswer) then
		                dispError("E","00",maketext("Availment of insurance product (X) = %d ",k10x_prefernoanswer),"K10X.2","(X) Availment of insurance product is not in the valueset.", "k10x_prefernoanswer","--", "K")
					endif;
					if k10z_oth= notappl then
		                dispError("E","00",maketext("Availment of insurance product (Z) = blank "),"K10Z.1","(Z) Availment of insurance product must have an entry.", "k10z_oth","--", "K")
		            elseif not invalueset(k10z_oth) then
		                dispError("E","00",maketext("Availment of insurance product (Z) = %d ",k10z_oth),"K10Z.2","(Z) Availment of insurance product is not in the valueset.", "k10z_oth","--", "K")
					endif;				
				
				endif; //if K07_LOAN = 1 then
			endif;
			
			//============= SECTION L ==================
			numeric femcount = 0, malecount= 0, agecount= 0;
			do varying numeric l = 1 while l <= soccurs(SECTION_A) 
				if a05_sex(l) = 2 then
					femcount = femcount+1;
				elseif a05_sex(l) = 1 then
					malecount = malecount+1;
				endif;	
				if a07_age(l) in 010:130 then
					agecount = agecount+1;
				endif;
			enddo;
			
			
			//L01
			if femcount > 0 and agecount > 0 then
				if L01_PREG= notappl then
	                dispError("E","00",maketext("Age more than 10 = %d, Female Count = %d, Pregnant = blank ",agecount, femcount ),"L01.1","There is/are female household member aged 10 year old and over, must have an entry!", "L01_PREG","--", "L")
	            elseif not invalueset(L01_PREG) then
	                dispError("E","00",maketext("Age more than 10 = %d, Female Count = %d, Pregnant = %d ",agecount,femcount,L01_PREG ),"L01.2","Invalid entry!", "L01_PREG","--", "L")
				endif;
			else
				if malecount > 0 and femcount = 0 and L01_PREG = 1 then
					dispError("E","00",maketext("Age more than 10 = %d, Female Count = %d, Male Count = %d, Pregnant = %d ",agecount,femcount,malecount,L01_PREG ),"L01.3","Household member is male, invalid entry!", "L01_PREG","--", "L")
				elseif femcount > 0 and agecount = 0 then 
					dispError("E","00",maketext("Age more than 10 = %d, Female Count = %d, Male Count = %d, Pregnant = %d ",agecount,femcount,malecount,L01_PREG ),"L01.4","Age is less than 10, invalid entry!", "L01_PREG","--", "L")
				endif;
			endif; //if femcount > 0 and agecount > 0 then
			
			
			do varying numeric L = 1 while L <= soccurs(SECTION_L1) 
				
				if a05_sex(l) = 2 and a07_age(l) in 010:130 then
					//L02
					if L02_LNO(l) = notappl and l01_preg = 1 then
						dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, LNO = blank ",a07_age(l), a05_sex(l)),"L02.1","There is/are female household member aged 10 year old and over, must have an entry!", "L02_LNO","--", "L")
					elseif not L02_LNO(l) in 1:35  and l01_preg = 1 then
						dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, LNO = %d ",a07_age(l), a05_sex(l),L02_LNO(l) ),"L02.2","Invalid entry on LNO!", "L02_LNO","--", "L")
					endif;
					
					if L02_LNO(l) <> notappl  then
						//L03
						if L03_LBIRTHS(l) = notappl and l01_preg = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Pregancy = blank",a07_age(l), a05_sex(l),l01_preg),"L03.1",
							"There is/are female household member aged 10 year old and over, must have an entry!", "L03_LBIRTHS","l01_preg", "L")
						elseif not invalueset(L03_LBIRTHS(l)) and l01_preg = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Pregancy = %d",a07_age(l), a05_sex(l),l01_preg, L03_LBIRTHS(l)),"L03.2",
							"Invalid entry!", "L03_LBIRTHS","l01_preg", "L")
						elseif L03_LBIRTHS(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Pregancy = %d",a07_age(l), a05_sex(l),l01_preg,L03_LBIRTHS(l)),"L03.5",
							"No pregnant woman in the household!", "L03_LBIRTHS","l01_preg", "L")
						endif;
						
						//L04
						if L04_NLBIRTHS(l) = notappl and l01_preg = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Live Birth = blank",a07_age(l), a05_sex(l),l01_preg),"L04.1",
							"There is/are female household member aged 10 year old and over, must have an entry!", "L04_NLBIRTHS","l01_preg", "L")
						elseif not invalueset(L04_NLBIRTHS(l)) and l01_preg = 1then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Live Birth = %d",a07_age(l), a05_sex(l),l01_preg, L04_NLBIRTHS(l)),"L04.2",
							"Invalid entry!", "L04_NLBIRTHS","l01_preg", "L")
						elseif L04_NLBIRTHS(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Live Birth = %d",a07_age(l), a05_sex(l),l01_preg,L04_NLBIRTHS(l)),"L04.5",
							"No pregnant woman in the household!", "L04_NLBIRTHS","l01_preg", "L")
						endif;
					
						//L05
						if L05_MOFTPREG(l) = notappl and l01_preg = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, Month of 1st Pregnancy = blank",a07_age(l), a05_sex(l),l01_preg),"L05.1",
							"Female household member is listed in question 2, must have an entry!", "L05_MOFTPREG","l01_preg", "L")
						elseif not invalueset(L05_MOFTPREG(l)) and l01_preg = 1then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, Month of 1st Pregnancy = %d",a07_age(l), a05_sex(l),l01_preg, L05_MOFTPREG(l)),"L05.2",
							"Invalid entry!", "L05_MOFTPREG","l01_preg", "L")
						elseif L05_MOFTPREG(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, Month of 1st Pregnancy = %d",a07_age(l), a05_sex(l),l01_preg,L05_MOFTPREG(l)),"L05.5",
							"No pregnant woman in the household!", "L05_MOFTPREG","l01_preg", "L")
						endif;
						
						if L05_YRFTPREG(l) = notappl and l01_preg = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, Year of 1st Pregnancy = blank",a07_age(l), a05_sex(l),l01_preg),"L05.1",
							"Female household member is listed in question 2, must have an entry!", "L05_YRFTPREG","l01_preg", "L")
						elseif not invalueset(L05_YRFTPREG(l)) and l01_preg = 1then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, Year of 1st Pregnancy = %d",a07_age(l), a05_sex(l),l01_preg, L05_YRFTPREG(l)),"L05.2",
							"Invalid entry!", "L05_YRFTPREG","l01_preg", "L")
						elseif L05_YRFTPREG(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d,Pregnant = %d,  Year of 1st Pregnancy = %d",a07_age(l), a05_sex(l),l01_preg,L05_YRFTPREG(l)),"L05.5",
							"No pregnant woman in the household!", "L05_YRFTPREG","l01_preg", "L")
						endif;					
					endif; //if L02_LNO(l) <> notappl then	

						//L07
						if L07_LNO(l) = notappl and L06_CPREG = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = blank",a07_age(l), a05_sex(l),L06_CPREG),"L07.1",
							"Female household member is listed in question 2, must have an entry!", "L07_LNO","L06_CPREG", "L")
						elseif not L07_LNO(l) in 1:35 and L06_CPREG = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d",a07_age(l), a05_sex(l),L06_CPREG, L07_LNO(l)),"L07.2",
							"Invalid entry!", "L07_LNO","L06_CPREG", "L")
						endif;
						
						//L09
						if L09_LNO(l) = notappl and L08_LACTMOM = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = blank",a07_age(l), a05_sex(l),L06_CPREG),"L09.1",
							"Female household member is listed in question 2, must have an entry!", "L09_LNO","L08_LACTMOM", "L")
						elseif not L09_LNO(l) in 1:35 and L08_LACTMOM = 1 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d",a07_age(l), a05_sex(l),L06_CPREG, L09_LNO(l)),"L09.2",
							"Invalid entry!", "L09_LNO","L08_LACTMOM", "L")
						endif;
						
				elseif a05_sex(l) = 1 then
					//L02
					if L02_LNO(l) <> notappl and l01_preg = 2 then
						dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d ",a07_age(l), a05_sex(l),L06_CPREG,L02_LNO(l) ),"L02.3","Household member is male, invalid entry!", "L02_LNO","l01_preg", "L")
					endif;
					if not a07_age(l) in 010:130 and l01_preg = 1 then
						dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d ",a07_age(l), a05_sex(l),L06_CPREG,L02_LNO(l) ),"L02.4","Age is less than 10, invalid entry!", "L02_LNO","l01_preg", "L")
					endif;	
					
					if L02_LNO(l) <> notappl then
						//L03
						if L03_LBIRTHS(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Pregancy = %d",a07_age(l), a05_sex(l),l01_preg,L03_LBIRTHS(l) ),"L03.3","Household member is male, invalid entry!", "L03_LBIRTHS","l01_preg", "L")
						endif;
						if not a07_age(l) in 010:130 and l01_preg = 2 and L03_LBIRTHS(l) <> notappl  then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Pregancy = %d",a07_age(l), a05_sex(l),l01_preg,L03_LBIRTHS(l) ),"L03.4","Age is less than 10, invalid entry!", "L03_LBIRTHS","l01_preg", "L")
						endif;
					
						//L04
						if L04_NLBIRTHS(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Live Birth = %d",a07_age(l), a05_sex(l),l01_preg,L04_NLBIRTHS(l) ),"L04.3","Household member is male, invalid entry!", "L04_NLBIRTHS","l01_preg", "L")
						endif;
						if not a07_age(l) in 010:130 and L04_NLBIRTHS(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, # of Live Birth = %d",a07_age(l), a05_sex(l),l01_preg,L04_NLBIRTHS(l) ),"L04.4","Age is less than 10, invalid entry!", "L04_NLBIRTHS","l01_preg", "L")
						endif;	

						//L05
						if L05_MOFTPREG(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, Month of 1st Pregnancy = %d",a07_age(l), a05_sex(l),l01_preg,L05_MOFTPREG(l) ),"L05.3","Household member is male, invalid entry!", "L05_MOFTPREG","l01_preg", "L")
						endif;
						if not a07_age(l) in 010:130 and L05_MOFTPREG(l) <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Pregnant = %d, Month of 1st Pregnancy = %d",a07_age(l), a05_sex(l),l01_preg,L05_MOFTPREG(l) ),"L05.4","Age is less than 10, invalid entry!", "L05_MOFTPREG","l01_preg", "L")
						endif;	
					endif; //if L02_LNO(l) <> notappl then
					
						//L07
						if L07_LNO(l) <> notappl and L06_CPREG = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d",a07_age(l), a05_sex(l),L06_CPREG,L05_MOFTPREG(l) ),"L07.3","Household member is male, invalid entry!", "L07_LNO","l01_preg", "L")
						endif;
						if not a07_age(l) in 010:130 and L07_LNO(l) <> notappl and L06_CPREG = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d",a07_age(l), a05_sex(l),L06_CPREG,L05_MOFTPREG(l) ),"L07.4","Age is less than 10, invalid entry!", "L07_LNO","l01_preg", "L")
						endif;	
						
						//L09
						if L09_LNO(l) <> notappl and L08_LACTMOM = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d",a07_age(l), a05_sex(l),L06_CPREG,L09_LNO(l) ),"L07.3","Household member is male, invalid entry!", "L09_LNO","l01_preg", "L")
						endif;
						if not a07_age(l) in 010:130 and L09_LNO(l) <> notappl and L08_LACTMOM = 2 then
							dispError("E",edit("99",l),maketext("Age = %d, Sex = %d, Currently Pregnant = %d, LNO = %d",a07_age(l), a05_sex(l),L06_CPREG,L09_LNO(l) ),"L07.4","Age is less than 10, invalid entry!", "L09_LNO","l01_preg", "L")
						endif;
					
				endif;//a05_sex(l) = 2 and a07_age(l) in 010:130 then			
				
				
					if femcount > 0 and agecount > 0 then
						//L06
						if L06_CPREG = notappl then
							dispError("E",edit("99",l),maketext("Currently Pregnant = blank"),"L06.1",
							"Female household member is listed in question 2, must have an entry!", "L06_CPREG","--", "L")
						elseif not invalueset(L06_CPREG) then
							dispError("E",edit("99",l),maketext(" Currently Pregnant = %d", L06_CPREG),"L06.2",
							"Invalid entry!", "L06_CPREG","--", "L")
						endif;
						
						//L08
						if L08_LACTMOM = notappl and L06_CPREG = 1 then
							dispError("E",edit("99",l),maketext("Lactating Mother = blank"),"L08.1",
							"Female household member is listed in question 2, must have an entry!", "L08_LACTMOM","--", "L")
						elseif not invalueset(L08_LACTMOM) and L06_CPREG =  1 then
							dispError("E",edit("99",l),maketext("Lactating Mother = %d", L08_LACTMOM),"L08.2",
							"Invalid entry!", "L08_LACTMOM","--", "L")						
						endif;
					else
						//L06
						if L06_CPREG <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Currently Pregnant = %d",L06_CPREG ),"L06.3","Household member is male, invalid entry!", "L06_CPREG","l01_preg", "L")
						endif;
						if agecount = 0 and L06_CPREG <> notappl and l01_preg = 2 then
							dispError("E",edit("99",l),maketext("Currently Pregnant = %d",L06_CPREG ),"L06.4","Age is less than 10, invalid entry!", "L06_CPREG","l01_preg", "L")
						endif;

						//L08
						if L08_LACTMOM <> notappl and L06_CPREG = 2 then
							dispError("E",edit("99",l),maketext("Lactating Mother = %d",L06_CPREG ),"L08.3","Household member is male, invalid entry!", "L08_LACTMOM","l01_preg", "L")
						endif;
						if agecount = 0 and L08_LACTMOM <> notappl and L06_CPREG = 2 then
							dispError("E",edit("99",l),maketext("Lactating Mother = %d",L08_LACTMOM ),"L08.4","Age is less than 10, invalid entry!", "L08_LACTMOM","l01_preg", "L")
						endif;	
						
					endif;
			
			enddo;
			
			 // ================================ SECTION M ====================================

			//[x]
			valSecM("M01_TYHHRESIDENCE", M01_TYHHRESIDENCE, "M01.1", not invalueset(M01_TYHHRESIDENCE) , "M01.2");
			valSecM("M02A_TYHHEXP", M02A_TYHHEXP, "M02A.1", not invalueset(M02A_TYHHEXP) , "M02A.2");
			valSecM("M02B_TYHHEXP", M02B_TYHHEXP, "M02B.1", not invalueset(M02B_TYHHEXP) , "M02B.2");
			valSecM("M02C_TYHHEXP", M02C_TYHHEXP, "M02C.1", not invalueset(M02C_TYHHEXP) , "M02C.2");
			valSecM("M02D_TYHHEXP", M02D_TYHHEXP, "M02D.1", not invalueset(M02D_TYHHEXP) , "M02D.2");
			valSecM("M02E_TYHHEXP", M02E_TYHHEXP, "M02E.1", not invalueset(M02E_TYHHEXP) , "M02E.2");
			
		  
			if (M02A_TYHHEXP = 1 AND M03_PREASON = notappl) then
				dispError("E","00","M03_PREASON = Blank","M03.1","This item must not be blank. Please input answer.","M03_PREASON", "--", "M");
			elseif (M02A_TYHHEXP = 1 AND not invalueset(M03_PREASON)) then
				dispError("E","00",maketext("M03_PREASON = %v",M03_PREASON),"M03.1","You have entered an invalid answer. Please verify and correct entry.","M03_PREASON", "--", "M");
			endif;
			
			valSecM("M07_EVAREA", M07_EVAREA, "M07.1", not invalueset(M07_EVAREA) , "M07.2");
			valSecM("M08_TYTEMPEVAREA", M08_TYTEMPEVAREA, "M08.1", not invalueset(M08_TYTEMPEVAREA) , "M08.2");
			valSecM("M09_TYMREASON", M09_TYMREASON, "M09.1", not invalueset(M09_TYMREASON) , "M09.2");
			valSecM("M10_TMLTEMEVA", M10_TMLTEMEVA, "M10.1", not invalueset(M10_TMLTEMEVA) , "M10.2");
			valSecM("M13A_NEGAFF", M13A_NEGAFF, "M13A.1", not invalueset(M13A_NEGAFF) , "M13A.2");
			
			valSecM("M13B_NEGAFF", M13B_NEGAFF, "M13B.1", not invalueset(M13B_NEGAFF) , "M13B.2");
			valSecM("M13C_NEGAFF", M13C_NEGAFF, "M13C.1", not invalueset(M13C_NEGAFF) , "M13C.2");
			valSecM("M13D_NEGAFF", M13D_NEGAFF, "M13D.1", not invalueset(M13D_NEGAFF) , "M13D.2");
			valSecM("M13E_NEGAFF", M13E_NEGAFF, "M13E.1", not invalueset(M13E_NEGAFF) , "M13E.2");
			valSecM("M13F_NEGAFF", M13F_NEGAFF, "M13F.1", not invalueset(M13F_NEGAFF) , "M13F.2");
			valSecM("M13G_NEGAFF", M13G_NEGAFF, "M13G.1", not invalueset(M13G_NEGAFF) , "M13G.2");
			valSecM("M13H_NEGAFF", M13H_NEGAFF, "M13H.1", not invalueset(M13H_NEGAFF) , "M13H.2");
			valSecM("M13I_NEGAFF", M13I_NEGAFF, "M13I.1", not invalueset(M13I_NEGAFF) , "M13I.2");
			
			
	endif; //if AGREE_INT = 1 then		
			
end;

//WRITE DAT FILE FOR EN APP
function write_errorlist()

	list string dirListing;		
	dirlist(dirListing, "/storage/emulated/0/Android/errorlist/");
	do numeric ctr = 1 while ctr <= dirListing.length()		
		dirdelete(strip(dirListing(ctr)));
	enddo;
	
	do numeric ctr = 1 while ctr <= errorname.length()
		errorname.removeDuplicates();
		if errorcode(ctr) > 0 then
			//string Foldername = maketext("/storage/emulated/0/Android/errorlist/%s=%d",errorname(ctr), errorcode(ctr));	
			string Foldername = maketext("errorlist/%s=%d",errorname(ctr), errorcode(ctr));	
			dircreate(Foldername);	
		endif;
	enddo;

end;








PROC DV_FF
PREPROC
DataValidation_fcn();
write_errorlist();
DATAVALIDATION.view();
stop(1);





PROC DV_ID

